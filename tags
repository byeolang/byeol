!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	.\docs\protos\worldfrw\bridge component.cpp	/^    A(T* origin) : _bean(&origin) {}$/;"	f	class:TBlackBox	file:
ALPHABET	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int ALPHABET = 5;$/;"	m	namespace:wrd
APPENDABLE	.\projects\file-manipulator\file-streams\FileStream.hpp	/^				APPENDABLE = MODE_TYPE_END,$/;"	e	enum:wrd::fm::FileStream::Mode
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	401;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	404;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	407;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	410;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	414;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	416;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	418;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	422;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	425;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	428;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	433;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	436;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	439;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	444;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	447;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	450;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	453;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	416;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	419;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	422;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	425;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	429;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	431;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	433;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	437;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	440;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	443;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	448;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	451;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	454;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	459;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	462;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	465;"	d	file:
ARCHITECTURE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	468;"	d	file:
ASSIGN	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int ASSIGN = 9;$/;"	m	namespace:wrd
Arguments	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Arguments : public Members {$/;"	c	namespace:wrd	file:
Array	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		Array(Ts... args) { \/\/ Ts is SubOf Node.$/;"	f	class:wrd::Array	file:
Array	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Array : public SolidContainer {$/;"	c	namespace:wrd	file:
Array	.\projects\world\container\Array.hpp	/^	class Array : public Container$/;"	c	namespace:wrd
ArrayCopy	.\projects\preferencer\parser\generated\CharStream.cc	/^void ArrayCopy(T* src, int src_offset, T* dest, int dest_offset, int len) {$/;"	f	namespace:__anon4
AsciiStream	.\projects\file-manipulator\file-streams\AsciiStream.hpp	/^		class AsciiStream : public FileStream$/;"	c	namespace:wrd::fm
BLACK	.\projects\independentor\helpers\PlatformAPI.hpp	/^				BLACK=CONSOLE_COLOR_START, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, $/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
BLUE	.\projects\independentor\helpers\PlatformAPI.hpp	/^				BLACK=CONSOLE_COLOR_START, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, $/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
BOOL	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int BOOL = 12;$/;"	m	namespace:wrd
BOOL_EXPR	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int BOOL_EXPR = 15;$/;"	m	namespace:wrd
BROWN	.\projects\independentor\helpers\PlatformAPI.hpp	/^				BLACK=CONSOLE_COLOR_START, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, $/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
BUILD_TYPE_END	.\projects\independentor\helpers\BuildFeatures.hpp	/^				BUILD_TYPE_END,$/;"	e	enum:wrd::indep::BuildFeatures::BuildType
BUILD_TYPE_START	.\projects\independentor\helpers\BuildFeatures.hpp	/^				BUILD_TYPE_START = 0,$/;"	e	enum:wrd::indep::BuildFeatures::BuildType
BeginToken	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual inline JJChar BeginToken() {$/;"	f	class:wrd::CharStream
BinaryStream	.\projects\file-manipulator\file-streams\BinaryStream.hpp	/^		class BinaryStream : public FileStream$/;"	c	namespace:wrd::fm
Bind	.\projects\world\memory\Bind.hpp	/^    class Bind : public Node, public Bindable$/;"	c	namespace:wrd
Bindable	.\projects\world\memory\Bindable.hpp	/^	class Bindable$/;"	c	namespace:wrd
Block	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Block : public Statement {$/;"	c	namespace:wrd	file:
Block	.\projects\world\memory\Block.hpp	/^    class Block : public Instance, public Bindable$/;"	c	namespace:wrd
BlockStmt	.\docs\protos\worldfrw\execution component.cpp	/^class BlockStmt : public Stmt {$/;"	c	class:Scope::Spaces	file:
BuildFeatures	.\projects\independentor\helpers\BuildFeatures.hpp	/^		class BuildFeatures$/;"	c	namespace:wrd::indep
BuildType	.\projects\independentor\helpers\BuildFeatures.hpp	/^			enum BuildType$/;"	g	class:wrd::indep::BuildFeatures
Building	.\projects\independentor\helpers\BuildFeatures.hpp	/^			struct Building$/;"	s	class:wrd::indep::BuildFeatures
CHAR	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int CHAR = 14;$/;"	m	namespace:wrd
CHAR_EXPR	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int CHAR_EXPR = 16;$/;"	m	namespace:wrd
CLASS	.\docs\protos\worldfrw\execution component.cpp	/^	static const int CLASS = 1;$/;"	m	class:Scope	file:
CLASS	.\projects\independentor\helpers\PlatformAPI.cpp	17;"	d	file:
CLASS	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int CLASS = 8;$/;"	m	namespace:wrd
CLASS	.\projects\unittests\TestCase.cpp	8;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	198;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	234;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	249;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	267;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	270;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	273;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	101;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	108;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	115;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	129;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	142;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	149;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	155;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	158;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	161;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	176;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	190;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	218;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	227;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	236;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	251;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	264;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	282;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	285;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	288;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	42;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	62;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	71;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	80;"	d	file:
COMPILER_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	94;"	d	file:
COMPILER_VERSION_INTERNAL	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	230;"	d	file:
COMPILER_VERSION_INTERNAL	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	232;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	188;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	200;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	219;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	237;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	242;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	252;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	257;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	117;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	124;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	130;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	138;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	144;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	180;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	191;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	221;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	229;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	239;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	244;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	258;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	267;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	272;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	43;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	96;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	191;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	220;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	238;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	253;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	258;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	104;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	145;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	166;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	181;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	193;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	203;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	222;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	230;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	240;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	245;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	259;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	268;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	273;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	97;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	205;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	221;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	239;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	254;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	259;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	146;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	167;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	182;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	196;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	207;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	210;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	223;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	231;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	241;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	246;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	255;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	260;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	269;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	274;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	29;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	67;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	76;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	90;"	d	file:
COMPILER_VERSION_PATCH	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_TWEAK	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_TWEAK	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_VERSION_TWEAK	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_TWEAK	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_TWEAK	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_TWEAK	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	33;"	d	file:
CONSOLE_COLOR_END	.\projects\independentor\helpers\PlatformAPI.hpp	/^				CONSOLE_COLOR_END,$/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
CONSOLE_COLOR_START	.\projects\independentor\helpers\PlatformAPI.hpp	/^				CONSOLE_COLOR_START = 0,$/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
CONST_MEMBER_FUNCTION	.\docs\protos\worldfrw\bridge component.cpp	/^        CONST_MEMBER_FUNCTION = 100,$/;"	e	enum:FuncChecker::FunctionType	file:
CRTDBG_MAP_ALLOC	.\projects\independentor\macros\MemoryLeak.hpp	16;"	d
CXX_STD	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	534;"	d	file:
CXX_STD	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	536;"	d	file:
CYAN	.\projects\independentor\helpers\PlatformAPI.hpp	/^				BLACK=CONSOLE_COLOR_START, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, $/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
C_DIALECT	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	550;"	d	file:
C_DIALECT	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	552;"	d	file:
C_DIALECT	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	555;"	d	file:
C_DIALECT	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	557;"	d	file:
C_DIALECT	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	559;"	d	file:
Cell	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Cell : public SolidContainer {$/;"	c	namespace:wrd	file:
Chain	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Chain : public TCell<Container> {$/;"	c	namespace:wrd	file:
Chain	.\projects\world\container\Chain.hpp	/^	class Chain : public Container$/;"	c	namespace:wrd
Char	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Char : public Primitive {$/;"	c	namespace:wrd	file:
CharStream	.\projects\preferencer\parser\generated\CharStream.h	/^  CharStream(ReaderStream *input_stream) :$/;"	f	class:wrd::CharStream
CharStream	.\projects\preferencer\parser\generated\CharStream.h	/^  CharStream(ReaderStream *input_stream, int startline, int startcolumn) :$/;"	f	class:wrd::CharStream
CharStream	.\projects\preferencer\parser\generated\CharStream.h	/^  CharStream(ReaderStream *input_stream, int startline,$/;"	f	class:wrd::CharStream
CharStream	.\projects\preferencer\parser\generated\CharStream.h	/^  CharStream(const JJChar *buf, int sz, int startline, int startcolumn) :$/;"	f	class:wrd::CharStream
CharStream	.\projects\preferencer\parser\generated\CharStream.h	/^  CharStream(const JJChar *buf, int sz, int startline,$/;"	f	class:wrd::CharStream
CharStream	.\projects\preferencer\parser\generated\CharStream.h	/^  CharStream(const JJString& str, int startline, int startcolumn) :$/;"	f	class:wrd::CharStream
CharStream	.\projects\preferencer\parser\generated\CharStream.h	/^  CharStream(const JJString& str, int startline,$/;"	f	class:wrd::CharStream
CharStream	.\projects\preferencer\parser\generated\CharStream.h	/^class CharStream {$/;"	c	namespace:wrd
Checker	.\docs\protos\worldfrw\helper component.cpp	/^class Checker {$/;"	c	file:
Class	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Class : public Type {$/;"	c	namespace:wrd	file:
Class	.\docs\protos\worldfrw\bridge component.cpp	/^	typedef T Class;$/;"	t	class:TNativeMethoder	file:
Class	.\docs\protos\worldfrw\helper component.cpp	/^	typedef Class Class;$/;"	t	class:TObjected	file:
Class	.\docs\protos\worldfrw\helper component.cpp	/^	typedef ObjectedClass Class;$/;"	t	class:TObjected	file:
Class	.\docs\protos\worldfrw\helper component.cpp	/^	typedef class TConcreateClass Class;$/;"	t	class:TADTChooser	typeref:class:TADTChooser::TConcreateClass	file:
Class	.\docs\protos\worldfrw\helper component.cpp	/^	typedef class TInterfaceClass Class;$/;"	t	class:TADTChooser	typeref:class:TADTChooser::TInterfaceClass	file:
Class	.\docs\protos\worldfrw\metaclass component.cpp	/^class Class : public Node { \/\/	World에 visible해야 하기 때문이다.$/;"	c	file:
Class	.\projects\world\meta\Class.hpp	/^    class Class : public Composit$/;"	c	namespace:wrd
ClassType	.\projects\preferencer\objtree\ClassType.cpp	/^		THIS::ClassType() {}$/;"	f	class:wrd::pref::THIS
ClassType	.\projects\preferencer\objtree\ClassType.cpp	/^		THIS::ClassType(const std::string& key) : Super(key) {}$/;"	f	class:wrd::pref::THIS
ClassType	.\projects\preferencer\objtree\ClassType.hpp	/^		class ClassType : public Type$/;"	c	namespace:wrd::pref
Classer	.\docs\protos\worldfrw\metaclass component.cpp	/^class Classer : public Manager? {$/;"	c	file:
Classes	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	typedef TArray<Class> Classes;$/;"	t	namespace:wrd	file:
Classes	.\docs\protos\worldfrw\metaclass component.cpp	/^	typedef TArray<TStrong<Class> > Classes;$/;"	t	class:Classer	file:
Classes	.\docs\protos\worldfrw\passer component.cpp	/^typedef TArray<Class> Classes;$/;"	t	file:
Classes	.\projects\preferencer\Preferencer.hpp	/^			typedef std::map<std::string, ClassType> Classes;$/;"	t	class:wrd::pref::Preferencer
Classes	.\projects\world\meta\Classes.hpp	/^	class Classes : public TArray<Class>$/;"	c	namespace:wrd
Closure	.\docs\protos\worldfrw\passer component.cpp	/^class Closure: public MgdMethod {$/;"	c	file:
Composit	.\projects\world\base\Composit.hpp	/^    class Composit : public Node$/;"	c	namespace:wrd
CompositNode	.\docs\protos\worldfrw\backbone component.cpp	/^class CompositNode : public Node {$/;"	c	file:
ConsoleColor	.\projects\independentor\helpers\PlatformAPI.hpp	/^			enum ConsoleColor$/;"	g	class:wrd::indep::PlatformAPI
ConsoleStream	.\projects\logger\streams\ConsoleStream.hpp	/^		class ConsoleStream : public Stream$/;"	c	namespace:wrd::log
Containable	.\docs\protos\worldfrw\container component.cpp	/^class Containable : public Manipulatable {$/;"	c	file:
Container	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Container : public Object, public Containable {$/;"	c	namespace:wrd	file:
Container	.\docs\protos\worldfrw\container component.cpp	/^	Container() : Super(), _trait(Node::getStaticClass()) {}$/;"	f
Container	.\docs\protos\worldfrw\container component.cpp	/^class Container : public Object, public Containable {$/;"	c	file:
Container	.\projects\world\container\Container.hpp	/^	class Container : public Object$/;"	c	namespace:wrd
Control	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		class Control : public Container {$/;"	c	class:wrd::Chain	file:
DARKGRAY	.\projects\independentor\helpers\PlatformAPI.hpp	/^				LIGHTGRAY, DARKGRAY, LIGHTBLUE, LIGHTGREEN, LIGHTCYAN, LIGHTRED, $/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
DEBUG	.\projects\independentor\helpers\BuildFeatures.hpp	/^				DEBUG = BUILD_TYPE_START,$/;"	e	enum:wrd::indep::BuildFeatures::BuildType
DEC	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	457;"	d	file:
DEC	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	472;"	d	file:
DEFAULT	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int DEFAULT = 0;$/;"	m	namespace:wrd
DOUBLE_QUOTATION	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int DOUBLE_QUOTATION = 2;$/;"	m	namespace:wrd
Date	.\projects\independentor\helpers\BuildFeatures.hpp	/^			struct Date $/;"	s	class:wrd::indep::BuildFeatures
DeleteBuffers	.\projects\preferencer\parser\generated\CharStream.cc	/^void CharStream::DeleteBuffers() {$/;"	f	class:wrd::CharStream
EMPTY	.\projects\preferencer\parser\generated\JavaCC.h	/^const JAVACC_CHAR_TYPE EMPTY[] = { 0 };$/;"	v
EOL	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int EOL = 3;$/;"	m	namespace:wrd
ErrorHandler	.\projects\preferencer\parser\generated\ErrorHandler.h	/^      ErrorHandler() { error_count = 0; }$/;"	f	class:wrd::ErrorHandler
ErrorHandler	.\projects\preferencer\parser\generated\ErrorHandler.h	/^  class ErrorHandler {$/;"	c	namespace:wrd
ExpandBuff	.\projects\preferencer\parser\generated\CharStream.cc	/^void CharStream::ExpandBuff(bool wrapAround) {$/;"	f	class:wrd::CharStream
Expr	.\docs\protos\worldfrw\execution component.cpp	/^class Expr : public Node {$/;"	c	class:Scope::Spaces	file:
FLOAT	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int FLOAT = 13;$/;"	m	namespace:wrd
FLOAT_EXPR	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int FLOAT_EXPR = 17;$/;"	m	namespace:wrd
File	.\projects\file-manipulator\file-structures\File.cpp	/^		THIS::File(const File& rhs) : _owner(0){}$/;"	f	class:wrd::fm::THIS
File	.\projects\file-manipulator\file-structures\File.hpp	/^		class File : public PathedObject$/;"	c	namespace:wrd::fm
FileLogStream	.\projects\logger\streams\FileLogStream.hpp	/^		class FileLogStream : public Stream$/;"	c	namespace:wrd::log
FileStream	.\projects\file-manipulator\file-streams\FileStream.hpp	/^		class FileStream : public PathedObject$/;"	c	namespace:wrd::fm
FillBuff	.\projects\preferencer\parser\generated\CharStream.cc	/^void CharStream::FillBuff() {$/;"	f	class:wrd::CharStream
Float	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Float : public Number {$/;"	c	namespace:wrd	file:
Folder	.\projects\file-manipulator\file-structures\Folder.cpp	/^		THIS::Folder(const Folder& rhs) : File(rhs), _iterator(0) { }$/;"	f	class:wrd::fm::THIS
Folder	.\projects\file-manipulator\file-structures\Folder.hpp	/^		class Folder : public File$/;"	c	namespace:wrd::fm
Fptr	.\docs\protos\worldfrw\bridge component.cpp	/^	typedef Ret (T::*Fptr)(ArgTypes...);$/;"	t	class:TNativeMethoder	file:
FuncChecker	.\docs\protos\worldfrw\bridge component.cpp	/^class FuncChecker {$/;"	c	file:
FunctionType	.\docs\protos\worldfrw\bridge component.cpp	/^    enum FunctionType {$/;"	g	class:FuncChecker	file:
GLOBAL	.\docs\protos\worldfrw\execution component.cpp	/^	static const int GLOBAL = 2;$/;"	m	class:Scope	file:
GREEN	.\projects\independentor\helpers\PlatformAPI.hpp	/^				BLACK=CONSOLE_COLOR_START, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, $/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
GetImage	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual JJString GetImage() {$/;"	f	class:wrd::CharStream
GetSuffix	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual JJString GetSuffix(int len) {$/;"	f	class:wrd::CharStream
HEX	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	468;"	d	file:
HEX	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	483;"	d	file:
ID	.\docs\protos\worldfrw\backbone component.cpp	/^	union ID {$/;"	u	class:Instance	file:
IDENTIFIER	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int IDENTIFIER = 20;$/;"	m	namespace:wrd
ID_VOID_MAIN	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	6;"	d	file:
INITIAL_BUFFER_SIZE	.\projects\preferencer\parser\generated\CharStream.h	8;"	d
INT	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int INT = 11;$/;"	m	namespace:wrd
INT_EXPR	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int INT_EXPR = 18;$/;"	m	namespace:wrd
INVALID_LEXICAL_STATE	.\projects\preferencer\parser\generated\TokenMgrError.h	/^  INVALID_LEXICAL_STATE = 2,$/;"	e	enum:wrd::LexerErrors
IS	.\docs\protos\worldfrw\helper component.cpp	/^		IS = sizeof(_foo((T*) 0)) == sizeof(yes)$/;"	e	enum:SubChecker::__anon2	file:
IS	.\docs\protos\worldfrw\helper component.cpp	/^	static const bool IS = sizeof(_foo( (T) 0 )) == sizeof(yes);$/;"	m	class:StaticMethodChecker	file:
IS	.\docs\protos\worldfrw\helper component.cpp	/^	static const wbool IS = sizeof(TADTChecker<T>::template foo<T>(0)) == sizeof(yes);$/;"	m	class:TADTChecker	file:
IS	.\docs\protos\worldfrw\helper component.cpp	/^	static const wbool IS = sizeof(_foo((T*)0)) == sizeof(yes);$/;"	m	class:TTemplateChecker	file:
Id	.\projects\world\base\Id.hpp	/^		Id(widx itscls, widx itsidx, wcnt itsserial) : sep {itscls, itsidx, itsserial} {}$/;"	f	union:wrd::Id
Id	.\projects\world\base\Id.hpp	/^		Id(wint64 it = WRD_INDEX_ERROR) : num(it) {}$/;"	f	union:wrd::Id
Id	.\projects\world\base\Id.hpp	/^    union Id$/;"	u	namespace:wrd
Initiator	.\projects\independentor\macros\Initiator.hpp	/^		Initiator(T func) { func(); }$/;"	f	struct:wrd::Initiator
Initiator	.\projects\independentor\macros\Initiator.hpp	/^	struct Initiator$/;"	s	namespace:wrd
Instance	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Instance : public Thing { \/\/ Instance 관리가 가능함.$/;"	c	namespace:wrd	file:
Instance	.\docs\protos\worldfrw\backbone component.cpp	/^	Instance() {$/;"	f	class:Instance	file:
Instance	.\docs\protos\worldfrw\backbone component.cpp	/^class Instance : Thing {$/;"	c	file:
Instance	.\projects\world\base\Instance.hpp	/^	class Instance : public Thing$/;"	c	namespace:wrd
InstanceBlock	.\docs\protos\worldfrw\execution component.cpp	/^class InstanceBlock : public Thing {$/;"	c	file:
InstanceBlock	.\docs\protos\worldfrw\instancemanaging component.cpp	/^class InstanceBlock : public Instance {$/;"	c	file:
InstanceDelegator	.\docs\protos\worldfrw\passer component.cpp	/^class InstanceDelegator : public Delegator {$/;"	c	file:
InstanceManager	.\docs\protos\worldfrw\instancemanaging component.cpp	/^class InstanceManager : public ? {$/;"	c	file:
Instancer	.\projects\world\memory\Instancer.hpp	/^	class Instancer : public Manager$/;"	c	namespace:wrd
Integer	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Integer : public Number {$/;"	c	namespace:wrd	file:
Integer	.\docs\protos\worldfrw\pretype component.cpp	/^class Integer : ?? {$/;"	c	file:
Intendation	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Intendation : public Statement {$/;"	c	namespace:wrd	file:
Is	.\projects\world\meta\helpers.hpp	/^		typedef Class Is;$/;"	t	class:wrd::TMetaSuper
Is	.\projects\world\meta\helpers.hpp	/^		typedef ObjectClass Is;$/;"	t	class:wrd::TMetaSuper
Iteratable	.\docs\protos\worldfrw\container component.cpp	/^class Iteratable {$/;"	c	file:
Iteration	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		class Iteration : public Instance {$/;"	c	class:wrd::Iterator	file:
Iterator	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Iterator : public Object {$/;"	c	namespace:wrd	file:
JAVACC_CHARSTREAM	.\projects\preferencer\parser\generated\PRParserTokenManager.h	68;"	d
JAVACC_CHAR_TYPE	.\projects\preferencer\parser\generated\JavaCC.h	10;"	d
JAVACC_SIMPLE_STRING	.\projects\preferencer\parser\generated\JavaCC.h	17;"	d
JAVACC_STRING_TYPE	.\projects\preferencer\parser\generated\JavaCC.h	14;"	d
JJCalls	.\projects\preferencer\parser\generated\PRParser.h	/^     JJCalls() { next = nullptr; arg = 0; gen = -1; first = nullptr; }$/;"	f	struct:wrd::JJCalls
JJCalls	.\projects\preferencer\parser\generated\PRParser.h	/^  struct JJCalls {$/;"	s	namespace:wrd
JJChar	.\projects\preferencer\parser\generated\JavaCC.h	/^typedef JAVACC_CHAR_TYPE     JJChar;$/;"	t
JJEnter	.\projects\preferencer\parser\generated\JavaCC.h	/^    JJEnter(T f_) : f{f_} {f();}$/;"	f	struct:JJEnter
JJEnter	.\projects\preferencer\parser\generated\JavaCC.h	/^struct JJEnter$/;"	s
JJExit	.\projects\preferencer\parser\generated\JavaCC.h	/^    JJExit(T f_) : f{f_} {}$/;"	f	struct:JJExit
JJExit	.\projects\preferencer\parser\generated\JavaCC.h	/^struct JJExit$/;"	s
JJSimpleString	.\projects\preferencer\parser\generated\JavaCC.h	/^typedef JAVACC_SIMPLE_STRING JJSimpleString;$/;"	t
JJString	.\projects\preferencer\parser\generated\JavaCC.h	/^typedef JAVACC_STRING_TYPE   JJString;$/;"	t
JJStringBuffer	.\projects\preferencer\parser\generated\JavaCC.h	/^typedef JAVACC_STRING_TYPE   JJStringBuffer;$/;"	t
LETTER	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int LETTER = 19;$/;"	m	namespace:wrd
LETTERS	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int LETTERS = 21;$/;"	m	namespace:wrd
LEVEL_DEFAULT	.\docs\protos\worldfrw\visitation component.cpp	/^        LEVEL_DEFAULT = 0,$/;"	e	enum:Visitation::Proximity	file:
LEVEL_MAX	.\docs\protos\worldfrw\visitation component.cpp	/^        LEVEL_MAX = std::numeric_limits<int>::max(),$/;"	e	enum:Visitation::Proximity	file:
LEVEL_NOT_COMPATIBLE	.\docs\protos\worldfrw\visitation component.cpp	/^        LEVEL_NOT_COMPATIBLE = -1;$/;"	e	enum:Visitation::Proximity	file:
LEXICAL_ERROR	.\projects\preferencer\parser\generated\TokenMgrError.h	/^  LEXICAL_ERROR = 0,$/;"	e	enum:wrd::LexerErrors
LIGHTBLUE	.\projects\independentor\helpers\PlatformAPI.hpp	/^				LIGHTGRAY, DARKGRAY, LIGHTBLUE, LIGHTGREEN, LIGHTCYAN, LIGHTRED, $/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
LIGHTCYAN	.\projects\independentor\helpers\PlatformAPI.hpp	/^				LIGHTGRAY, DARKGRAY, LIGHTBLUE, LIGHTGREEN, LIGHTCYAN, LIGHTRED, $/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
LIGHTGRAY	.\projects\independentor\helpers\PlatformAPI.hpp	/^				LIGHTGRAY, DARKGRAY, LIGHTBLUE, LIGHTGREEN, LIGHTCYAN, LIGHTRED, $/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
LIGHTGREEN	.\projects\independentor\helpers\PlatformAPI.hpp	/^				LIGHTGRAY, DARKGRAY, LIGHTBLUE, LIGHTGREEN, LIGHTCYAN, LIGHTRED, $/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
LIGHTMAGENTA	.\projects\independentor\helpers\PlatformAPI.hpp	/^				LIGHTMAGENTA, YELLOW, $/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
LIGHTRED	.\projects\independentor\helpers\PlatformAPI.hpp	/^				LIGHTGRAY, DARKGRAY, LIGHTBLUE, LIGHTGREEN, LIGHTCYAN, LIGHTRED, $/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
LINUX	.\projects\independentor\helpers\BuildFeatures.hpp	/^				LINUX = PLATFORM_TYPE_END$/;"	e	enum:wrd::indep::BuildFeatures::PlatformType
LOCAL	.\docs\protos\worldfrw\execution component.cpp	/^	static const int LOCAL = 0;$/;"	m	class:Scope	file:
LOOP_DETECTED	.\projects\preferencer\parser\generated\TokenMgrError.h	/^  LOOP_DETECTED = 3,$/;"	e	enum:wrd::LexerErrors
LexerErrors	.\projects\preferencer\parser\generated\TokenMgrError.h	/^enum LexerErrors {$/;"	g	namespace:wrd
LexicalError	.\projects\preferencer\parser\generated\TokenMgrError.cc	/^    JJString TokenMgrError::LexicalError(bool EOFSeen, int lexState, int errorLine, int errorColumn, const JJString& errorAfter, JJChar curChar) {$/;"	f	class:wrd::TokenMgrError
List	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class List : public Container {$/;"	c	namespace:wrd	file:
Logger	.\projects\logger\Logger.hpp	/^		class Logger : public Stream$/;"	c	namespace:wrd::log
MAGENTA	.\projects\independentor\helpers\PlatformAPI.hpp	/^				BLACK=CONSOLE_COLOR_START, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, $/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
MAX	.\projects\preferencer\parser\generated\JavaCC.h	36;"	d
MEMBER_FUNCTION	.\docs\protos\worldfrw\bridge component.cpp	/^        MEMBER_FUNCTION = 10,$/;"	e	enum:FuncChecker::FunctionType	file:
MIN	.\projects\preferencer\parser\generated\JavaCC.h	39;"	d
MODE_TYPE_END	.\projects\file-manipulator\file-streams\FileStream.hpp	/^				MODE_TYPE_END,$/;"	e	enum:wrd::fm::FileStream::Mode
MODE_TYPE_START	.\projects\file-manipulator\file-streams\FileStream.hpp	/^				MODE_TYPE_START = 0,$/;"	e	enum:wrd::fm::FileStream::Mode
Manager	.\projects\world\msg-usr\Manager.hpp	/^    class Manager : public Object$/;"	c	namespace:wrd
Manipulatable	.\docs\protos\worldfrw\container component.cpp	/^class Manipulatable {$/;"	c	file:
MemberType	.\projects\preferencer\objtree\MemberType.cpp	/^		THIS::MemberType() : Super() {}$/;"	f	class:wrd::pref::THIS
MemberType	.\projects\preferencer\objtree\MemberType.cpp	/^		THIS::MemberType(const std::string& key, const std::string& value) : Type(key), _value(value) {}$/;"	f	class:wrd::pref::THIS
MemberType	.\projects\preferencer\objtree\MemberType.hpp	/^		class MemberType : public Type$/;"	c	namespace:wrd::pref
Members	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Members : public Array {$/;"	c	namespace:wrd	file:
Members	.\projects\preferencer\objtree\ClassType.hpp	/^			typedef std::map<std::string, MemberType> Members;$/;"	t	class:wrd::pref::ClassType
MemoryMap	.\docs\protos\worldfrw\instancemanaging component.cpp	/^class MemoryMap : public ? {$/;"	c	file:
MetaIf	.\projects\world\meta\helpers.hpp	/^    class MetaIf$/;"	c	namespace:wrd
Method	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Method : public Type {$/;"	c	namespace:wrd	file:
Method	.\docs\protos\worldfrw\passer component.cpp	/^	Method(const This& rhs) : Super(rhs), _params(rhs._params) {}$/;"	f	class:Method	file:
Method	.\docs\protos\worldfrw\passer component.cpp	/^class Method : public Object {$/;"	c	file:
Methods	.\docs\protos\worldfrw\passer component.cpp	/^typedef TArray<Method> Methods;$/;"	t	file:
MgdClass	.\docs\protos\worldfrw\metaclass component.cpp	/^class MgdClass : public TConcreteClass<ObjectedClass> {$/;"	c	file:
MgdClass	.\projects\world\meta\MgdClass.hpp	/^    class MgdClass : public ObjectClass$/;"	c	namespace:wrd
MgdMethod	.\docs\protos\worldfrw\passer component.cpp	/^class MgdMethod: public Method {$/;"	c	file:
MgdObject	.\docs\protos\worldfrw\passer component.cpp	/^class MgdObject : public Object {$/;"	c	file:
Mode	.\projects\file-manipulator\file-streams\FileStream.hpp	/^			enum Mode$/;"	g	class:wrd::fm::FileStream
Msg	.\docs\protos\worldfrw\backbone component.cpp	/^class Msg : public Thing {$/;"	c	file:
Msg	.\projects\world\base\Msg.hpp	/^	class Msg : public Thing$/;"	c	namespace:wrd
MyAsciiLoadVisitation	.\docs\protos\worldfrw\visitation component.cpp	/^    friend class MyAsciiLoadVisitation : public TVisitation<MyClass, LoaderVisitation> {$/;"	c	class:MyClass	file:
MyClass	.\docs\protos\worldfrw\visitation component.cpp	/^class MyClass : public Object {$/;"	c	file:
MyFirstWorldModule	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class MyFirstWorldModule : public Object {$/;"	c	file:
NONE	.\docs\protos\worldfrw\bridge component.cpp	/^        NONE = 0,$/;"	e	enum:FuncChecker::FunctionType	file:
NON_MEMBER_FUNCTION	.\docs\protos\worldfrw\bridge component.cpp	/^        NON_MEMBER_FUNCTION = 1,$/;"	e	enum:FuncChecker::FunctionType	file:
NUMBER	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int NUMBER = 4;$/;"	m	namespace:wrd
NamedVariable	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class NamedVariable : public Variable {$/;"	c	namespace:wrd	file:
Node	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^    class Node : public Instance {$/;"	c	namespace:wrd	file:
Node	.\docs\protos\worldfrw\backbone component.cpp	/^class Node : public ? {$/;"	c	file:
Node	.\projects\world\base\Node.hpp	/^	class Node : public State $/;"	c	namespace:wrd
Null	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Null : public Primitive {$/;"	c	namespace:wrd	file:
Number	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Number : public Primitive {$/;"	c	namespace:wrd	file:
OVERWRITE_ONLY	.\projects\file-manipulator\file-streams\FileStream.hpp	/^				OVERWRITE_ONLY,$/;"	e	enum:wrd::fm::FileStream::Mode
Object	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Object : public NamedVariable {$/;"	c	namespace:wrd	file:
Object	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^        Object(Class& klass) {$/;"	f	class:wrd::Object	file:
Object	.\docs\protos\worldfrw\passer component.cpp	/^class Object : public CompositNode {$/;"	c	file:
Object	.\projects\preferencer\objtree\Object.hpp	/^		class Object$/;"	c	namespace:wrd::pref
Object	.\projects\world\msg-usr\Object.hpp	/^    class Object : public Composit$/;"	c	namespace:wrd
ObjectClass	.\projects\world\meta\ObjectClass.hpp	/^	class ObjectClass : public Class$/;"	c	namespace:wrd
ObjectedClass	.\docs\protos\worldfrw\metaclass component.cpp	/^class ObjectedClass : public Class {$/;"	c	file:
OccupiableObject	.\docs\protos\worldfrw\passer component.cpp	/^class OccupiableObject : public Object {$/;"	c	file:
Option	.\projects\file-manipulator\file-structures\Folder.cpp	/^		Folder::Option::Option(wbool is_reculsive) : _is_reculsive(is_reculsive) {}$/;"	f	class:wrd::fm::Folder::Option
Option	.\projects\file-manipulator\file-structures\Folder.hpp	/^			class Option$/;"	c	class:wrd::fm::Folder
Origin	.\docs\protos\worldfrw\interpreting component.cpp	/^class Origin : public Object { \/\/	Origin은 또다른 Origin들을 composition으로 가질 수 있다.$/;"	c	file:
Origin	.\projects\world\compiler\Origin.hpp	/^	class Origin : public Instance$/;"	c	namespace:wrd
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	298;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	301;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	304;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	307;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	310;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	313;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	316;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	319;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	322;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	325;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	328;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	331;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	334;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	337;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	340;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	343;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	346;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	349;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	352;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	355;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	358;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	361;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	364;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	367;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	370;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	374;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	377;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	380;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	383;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	386;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	390;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	313;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	316;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	319;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	322;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	325;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	328;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	331;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	334;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	337;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	340;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	343;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	346;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	349;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	352;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	355;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	358;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	361;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	364;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	367;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	370;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	373;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	376;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	379;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	382;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	385;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	389;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	392;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	395;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	398;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	401;"	d	file:
PLATFORM_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	405;"	d	file:
PLATFORM_TYPE_END	.\projects\independentor\helpers\BuildFeatures.hpp	/^				PLATFORM_TYPE_END,$/;"	e	enum:wrd::indep::BuildFeatures::PlatformType
PLATFORM_TYPE_START	.\projects\independentor\helpers\BuildFeatures.hpp	/^				PLATFORM_TYPE_START = 0,$/;"	e	enum:wrd::indep::BuildFeatures::PlatformType
PRParser	.\projects\preferencer\parser\generated\PRParser.cc	/^  PRParser::PRParser(TokenManager *tokenManager){$/;"	f	class:wrd::PRParser
PRParser	.\projects\preferencer\parser\generated\PRParser.h	/^class PRParser {$/;"	c	namespace:wrd
PRParserHandler	.\projects\preferencer\parser\PRParserHandler.hpp	/^    class PRParserHandler : public ErrorHandler$/;"	c	namespace:wrd
PRParserTokenManager	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^  PRParserTokenManager::PRParserTokenManager (JAVACC_CHARSTREAM *stream, int lexState)$/;"	f	class:wrd::PRParserTokenManager
PRParserTokenManager	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^class PRParserTokenManager : public TokenManager {$/;"	c	namespace:wrd
ParseException	.\projects\preferencer\parser\generated\ParseException.cc	/^  ParseException::ParseException() {$/;"	f	class:wrd::ParseException
ParseException	.\projects\preferencer\parser\generated\ParseException.cc	/^  ParseException::ParseException(Token currentTokenVal,$/;"	f	class:wrd::ParseException
ParseException	.\projects\preferencer\parser\generated\ParseException.cc	/^  ParseException::ParseException(const JJString& message) {$/;"	f	class:wrd::ParseException
ParseException	.\projects\preferencer\parser\generated\ParseException.h	/^class ParseException {$/;"	c	namespace:wrd
PathedObject	.\projects\file-manipulator\file-structures\PathedObject.hpp	/^		class PathedObject$/;"	c	namespace:wrd::fm
Platform	.\projects\independentor\helpers\BuildFeatures.hpp	/^			struct Platform$/;"	s	class:wrd::indep::BuildFeatures
PlatformAPI	.\projects\independentor\helpers\PlatformAPI.hpp	/^		class PlatformAPI$/;"	c	namespace:wrd::indep
PlatformType	.\projects\independentor\helpers\BuildFeatures.hpp	/^			enum PlatformType$/;"	g	class:wrd::indep::BuildFeatures
Pos	.\docs\protos\worldfrw\interpreting component.cpp	/^	class Pos : public Object { \/\/ Pos는 visible해야 한다. IDE에서도 사용해야 하니까.$/;"	c	class:Origin	file:
Preferencer	.\projects\preferencer\Preferencer.hpp	/^		class Preferencer : public Object$/;"	c	namespace:wrd::pref
Primitive	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Primitive : public Variable {$/;"	c	namespace:wrd	file:
Proximity	.\docs\protos\worldfrw\visitation component.cpp	/^    enum Proximity {$/;"	g	class:Visitation	file:
Proxy	.\docs\protos\worldfrw\container component.cpp	/^	class Proxy : public Instance {$/;"	c	class:Container	file:
READ_ONLY	.\projects\file-manipulator\file-streams\FileStream.hpp	/^				READ_ONLY = MODE_TYPE_START,$/;"	e	enum:wrd::fm::FileStream::Mode
RED	.\projects\independentor\helpers\PlatformAPI.hpp	/^				BLACK=CONSOLE_COLOR_START, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, $/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
RELEASE	.\projects\independentor\helpers\BuildFeatures.hpp	/^				RELEASE = BUILD_TYPE_END$/;"	e	enum:wrd::indep::BuildFeatures::BuildType
RUN	.\docs\protos\worldfrw\passer component.cpp	/^	static const String RUN = "@run"; \/\/ @는 이것이 system internal한 함수라는 뜻이다. 월드코드에서는 앞에 @를 붙여서 함수를 정의할 수 없어야 한다.$/;"	m	class:Method	file:
ReInit	.\projects\preferencer\parser\generated\CharStream.cc	/^void CharStream::ReInit(ReaderStream *input_stream, int startline,$/;"	f	class:wrd::CharStream
ReInit	.\projects\preferencer\parser\generated\CharStream.cc	/^void CharStream::ReInit(const JJString& str, int startline,$/;"	f	class:wrd::CharStream
ReInit	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual void ReInit(ReaderStream *input_stream) {$/;"	f	class:wrd::CharStream
ReInit	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual void ReInit(ReaderStream *input_stream, int startline, int startcolumn) {$/;"	f	class:wrd::CharStream
ReInit	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual void ReInit(const JJString& str, int startline,$/;"	f	class:wrd::CharStream
ReInit	.\projects\preferencer\parser\generated\PRParser.cc	/^void PRParser::ReInit(TokenManager* tokenManager){$/;"	f	class:wrd::PRParser
ReInit	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^  void PRParserTokenManager::ReInit(JAVACC_CHARSTREAM *stream, int lexState) {$/;"	f	class:wrd::PRParserTokenManager
ReInitRounds	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^  void PRParserTokenManager::ReInitRounds() {$/;"	f	class:wrd::PRParserTokenManager
ReaderStream	.\projects\preferencer\parser\generated\JavaCC.h	/^class ReaderStream {$/;"	c
Refer	.\docs\protos\worldfrw\passer component.cpp	/^class Refer : public Node {$/;"	c	file:
Reference	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		Reference(const Class& cls) : Super(cls) {}$/;"	f	class:wrd::Reference	file:
Reference	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Reference : public NamedVariable {$/;"	c	namespace:wrd	file:
Res	.\projects\world\pretypes\Res.hpp	/^	class Res : public Object$/;"	c	namespace:wrd
Result	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Result : public Primitive {$/;"	c	namespace:wrd	file:
Result	.\docs\protos\worldfrw\pretype component.cpp	/^class Result {$/;"	c	file:
Runnable	.\docs\protos\worldfrw\passer component.cpp	/^class Runnable {$/;"	c	file:
SIMULATE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	157;"	d	file:
SIMULATE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	172;"	d	file:
SIMULATE_ID	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	163;"	d	file:
SIMULATE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	178;"	d	file:
SIMULATE_ID	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	21;"	d	file:
SIMULATE_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	164;"	d	file:
SIMULATE_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	179;"	d	file:
SIMULATE_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	170;"	d	file:
SIMULATE_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	185;"	d	file:
SIMULATE_VERSION_MAJOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	37;"	d	file:
SIMULATE_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	165;"	d	file:
SIMULATE_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	180;"	d	file:
SIMULATE_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	38;"	d	file:
SIMULATE_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	171;"	d	file:
SIMULATE_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	186;"	d	file:
SIMULATE_VERSION_MINOR	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	38;"	d	file:
STATIC_LEXER_ERROR	.\projects\preferencer\parser\generated\TokenMgrError.h	/^  STATIC_LEXER_ERROR = 1,$/;"	e	enum:wrd::LexerErrors
STRING	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int STRING = 10;$/;"	m	namespace:wrd
STRINGIFY	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	294;"	d	file:
STRINGIFY	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	309;"	d	file:
STRINGIFY_HELPER	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	293;"	d	file:
STRINGIFY_HELPER	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	308;"	d	file:
SYMBOL	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int SYMBOL = 6;$/;"	m	namespace:wrd
Saver	.\docs\protos\worldfrw\visitation component.cpp	/^class Saver : public Visitor {$/;"	c	file:
SaverVisitation	.\docs\protos\worldfrw\visitation component.cpp	/^    class SaverVisitation : public Visitation {};$/;"	c	class:Saver	file:
Scope	.\docs\protos\worldfrw\execution component.cpp	/^class Scope : public Chain { \/\/ Scope는 visible할 수 있으나 invisible로 된다. mappingtable에 등록하지 않는다.$/;"	c	file:
SeperatedId	.\projects\world\base\Id.hpp	/^		struct SeperatedId$/;"	s	union:wrd::Id
SolidContainer	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class SolidContainer : public Container {$/;"	c	namespace:wrd	file:
Spaces	.\docs\protos\worldfrw\execution component.cpp	/^	class Spaces : public Chain::Control {$/;"	c	class:Scope	file:
State	.\projects\world\base\State.hpp	/^    class State : public Instance$/;"	c	namespace:wrd
Statement	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Statement : public Type {$/;"	c	namespace:wrd	file:
StaticMethodChecker	.\docs\protos\worldfrw\helper component.cpp	/^class StaticMethodChecker : public Checker {$/;"	c	file:
Stmts	.\docs\protos\worldfrw\execution component.cpp	/^	typedef vector<Stmt> Stmts; \/\/ stmts은 invisible하게 한다는 뜻이다.$/;"	t	class:Scope::Spaces::BlockStmt	file:
Str	.\projects\world\pretypes\Str.hpp	/^	class Str : public Object$/;"	c	namespace:wrd
Stream	.\projects\logger\streams\Stream.hpp	/^		class Stream$/;"	c	namespace:wrd::log
String	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class String : public Container, private std::wstring {$/;"	c	namespace:wrd	file:
StringReaderStream	.\projects\preferencer\parser\generated\CharStream.cc	/^  StringReaderStream(const JJString& str) : str_(str), cur_(0), max_(str.size()) {}$/;"	f	class:__anon4::StringReaderStream
StringReaderStream	.\projects\preferencer\parser\generated\CharStream.cc	/^class StringReaderStream : public ReaderStream {$/;"	c	namespace:__anon4	file:
SubChecker	.\docs\protos\worldfrw\helper component.cpp	/^class SubChecker : public Checker {$/;"	c	file:
Super	.\docs\protos\worldfrw\helper component.cpp	/^	typedef typename TADTChooser<IS_ADT>::Class<T, typename TObjected<IS_OBJECTED>::Class> Super;$/;"	t	class:TMetaClassChooser	file:
SwitchTo	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^  void PRParserTokenManager::SwitchTo(int lexState) {$/;"	f	class:wrd::PRParserTokenManager
TAB	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int TAB = 7;$/;"	m	namespace:wrd
TADTChecker	.\docs\protos\worldfrw\helper component.cpp	/^class TADTChecker : public Checker {$/;"	c	file:
TADTChooser	.\docs\protos\worldfrw\helper component.cpp	/^class TADTChooser {$/;"	c	file:
TADTChooser	.\docs\protos\worldfrw\helper component.cpp	/^class TADTChooser<false> {$/;"	c	file:
TBlackBox	.\docs\protos\worldfrw\bridge component.cpp	/^    TBlackBox(T& origin) : _bean(&origin) {}$/;"	f	class:TBlackbox	file:
TBlackBox	.\docs\protos\worldfrw\bridge component.cpp	/^class TBlackBox<T*> : public Object {$/;"	c	file:
TBlackbox	.\docs\protos\worldfrw\bridge component.cpp	/^class TBlackbox : public Object {$/;"	c	file:
TBlock	.\projects\world\memory\TBlock.hpp	/^    class TBlock : public TGettable<T, Block>$/;"	c	namespace:wrd
TClass	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class TClass : public T::ClassSpecifier {$/;"	c	namespace:wrd	file:
TClass	.\docs\protos\worldfrw\metaclass component.cpp	/^	TClass() { this->initialize(); }$/;"	f	class:TClass	file:
TClass	.\docs\protos\worldfrw\metaclass component.cpp	/^class TClass : public TMetaClassChooser<T>::Super {$/;"	c	file:
TClass	.\projects\world\meta\TClass.hpp	/^	TEMPL THIS::TClass() { this->init(); }$/;"	f	class:wrd::THIS
TCloner	.\projects\world\meta\helpers.hpp	/^    class TCloner {$/;"	c	namespace:wrd
TCloner	.\projects\world\meta\helpers.hpp	/^    class TCloner<T, true> {$/;"	c	namespace:wrd
TConcreteClass	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class TConcreteClass : public Type {$/;"	c	namespace:wrd	file:
TConcreteClass	.\docs\protos\worldfrw\metaclass component.cpp	/^class TConcreteClass : public S {$/;"	c	file:
TContainer	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class TContainer : public S {$/;"	c	namespace:wrd	file:
TEMPL	.\projects\world\container\TArray.hpp	13;"	d
TEMPL	.\projects\world\container\TArray.hpp	9;"	d
TEMPL	.\projects\world\container\TChain.hpp	12;"	d
TEMPL	.\projects\world\container\TChain.hpp	8;"	d
TEMPL	.\projects\world\memory\TStrong.hpp	87;"	d
TEMPL	.\projects\world\memory\TStrong.hpp	8;"	d
TEMPL	.\projects\world\memory\TWeak.hpp	11;"	d
TEMPL	.\projects\world\memory\TWeak.hpp	129;"	d
TEMPL	.\projects\world\meta\TClass.hpp	11;"	d
TEMPL	.\projects\world\meta\TClass.hpp	71;"	d
THIS	.\projects\file-manipulator\file-streams\AsciiStream.cpp	/^		THIS::THIS() : Super() {}$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-streams\AsciiStream.cpp	/^		THIS::THIS(const File& file) : Super()$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-streams\AsciiStream.cpp	/^		THIS::THIS(const PathedObject& object) {}$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-streams\AsciiStream.cpp	/^		THIS::THIS(const string& new_path) : Super(new_path) {}$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-streams\AsciiStream.cpp	8;"	d	file:
THIS	.\projects\file-manipulator\file-streams\BinaryStream.cpp	/^		THIS::THIS() : Super() {}$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-streams\BinaryStream.cpp	/^		THIS::THIS(const File& file) : Super() $/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-streams\BinaryStream.cpp	/^		THIS::THIS(const PathedObject& object) {}$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-streams\BinaryStream.cpp	/^		THIS::THIS(const std::string& new_path) : Super(new_path) {}$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-streams\BinaryStream.cpp	9;"	d	file:
THIS	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		THIS::THIS() : _mode(MODE_TYPE_START), _fd(0) {}$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		THIS::THIS(const Super& object) {}$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		THIS::THIS(const std::string& new_path) : Super(new_path), _mode(MODE_TYPE_START), _fd(0)  {}$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-streams\FileStream.cpp	10;"	d	file:
THIS	.\projects\file-manipulator\file-structures\File.cpp	/^		THIS::THIS(const File* owner, const string& name) : _owner(owner) { _setName(name); }$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-structures\File.cpp	/^		THIS::THIS(const std::string& path) : Super(path), _owner(0) {}$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-structures\File.cpp	8;"	d	file:
THIS	.\projects\file-manipulator\file-structures\Folder.cpp	/^		THIS::THIS(const File* owner, const string& path, Option option) : Super(owner, path), _iterator(0), _sub_file(0), _option(option) {}$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-structures\Folder.cpp	/^		THIS::THIS(const std::string& new_path) : Super(new_path), _iterator(0), _sub_file(0) {}$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-structures\Folder.cpp	/^		THIS::THIS(const string& path, Option option) : Super(0, path), _iterator(0), _sub_file(0), _option(option) {}$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-structures\Folder.cpp	8;"	d	file:
THIS	.\projects\file-manipulator\file-structures\PathedObject.cpp	/^		THIS::THIS() {}$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-structures\PathedObject.cpp	/^		THIS::THIS(const This& rhs) : _path(rhs._path) {}$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-structures\PathedObject.cpp	/^		THIS::THIS(const string& path) : _path(path) {}$/;"	f	class:wrd::fm::THIS
THIS	.\projects\file-manipulator\file-structures\PathedObject.cpp	7;"	d	file:
THIS	.\projects\independentor\helpers\BuildFeatures.cpp	9;"	d	file:
THIS	.\projects\logger\Logger.cpp	/^		THIS::THIS() : Super() {}$/;"	f	class:wrd::log::THIS
THIS	.\projects\logger\Logger.cpp	/^		THIS::THIS(const This& rhs) : Super(rhs) {}$/;"	f	class:wrd::log::THIS
THIS	.\projects\logger\Logger.cpp	10;"	d	file:
THIS	.\projects\logger\streams\ConsoleStream.cpp	8;"	d	file:
THIS	.\projects\logger\streams\FileLogStream.cpp	/^		THIS::THIS() : Super() { _file.setMode(FileStream::APPENDABLE); }$/;"	f	class:wrd::log::THIS
THIS	.\projects\logger\streams\FileLogStream.cpp	/^		THIS::THIS(const string& new_path) : Stream()$/;"	f	class:wrd::log::THIS
THIS	.\projects\logger\streams\FileLogStream.cpp	7;"	d	file:
THIS	.\projects\logger\streams\Stream.cpp	/^		THIS::THIS() : _is_enable(true) {}$/;"	f	class:wrd::log::THIS
THIS	.\projects\logger\streams\Stream.cpp	7;"	d	file:
THIS	.\projects\preferencer\Preferencer.cpp	8;"	d	file:
THIS	.\projects\preferencer\objtree\ClassType.cpp	7;"	d	file:
THIS	.\projects\preferencer\objtree\MemberType.cpp	7;"	d	file:
THIS	.\projects\preferencer\objtree\Object.cpp	7;"	d	file:
THIS	.\projects\preferencer\objtree\Type.cpp	7;"	d	file:
THIS	.\projects\preferencer\parser\PRParserHandler.cpp	6;"	d	file:
THIS	.\projects\world\base\Composit.cpp	8;"	d	file:
THIS	.\projects\world\base\Instance.cpp	/^	THIS::THIS()$/;"	f	class:wrd::THIS
THIS	.\projects\world\base\Instance.cpp	6;"	d	file:
THIS	.\projects\world\base\Msg.cpp	6;"	d	file:
THIS	.\projects\world\base\Node.cpp	7;"	d	file:
THIS	.\projects\world\base\State.cpp	7;"	d	file:
THIS	.\projects\world\base\Thing.cpp	6;"	d	file:
THIS	.\projects\world\base\Thing.hpp	11;"	d
THIS	.\projects\world\base\Thing.hpp	8;"	d
THIS	.\projects\world\compiler\Origin.cpp	7;"	d	file:
THIS	.\projects\world\container\TArray.hpp	14;"	d
THIS	.\projects\world\container\TArray.hpp	8;"	d
THIS	.\projects\world\container\TChain.hpp	13;"	d
THIS	.\projects\world\container\TChain.hpp	7;"	d
THIS	.\projects\world\memory\Bind.cpp	137;"	d	file:
THIS	.\projects\world\memory\Bind.cpp	7;"	d	file:
THIS	.\projects\world\memory\Bindable.cpp	23;"	d	file:
THIS	.\projects\world\memory\Bindable.cpp	6;"	d	file:
THIS	.\projects\world\memory\Block.cpp	6;"	d	file:
THIS	.\projects\world\memory\Instancer.cpp	27;"	d	file:
THIS	.\projects\world\memory\Instancer.cpp	5;"	d	file:
THIS	.\projects\world\memory\TStrong.hpp	45;"	d
THIS	.\projects\world\memory\TStrong.hpp	46;"	d
THIS	.\projects\world\memory\TStrong.hpp	88;"	d
THIS	.\projects\world\memory\TStrong.hpp	9;"	d
THIS	.\projects\world\memory\TWeak.hpp	128;"	d
THIS	.\projects\world\memory\TWeak.hpp	12;"	d
THIS	.\projects\world\memory\TWeak.hpp	68;"	d
THIS	.\projects\world\memory\TWeak.hpp	69;"	d
THIS	.\projects\world\meta\Class.cpp	8;"	d	file:
THIS	.\projects\world\meta\TClass.hpp	12;"	d
THIS	.\projects\world\meta\TClass.hpp	72;"	d
THIS	.\projects\world\msg-usr\Object.cpp	6;"	d	file:
THIS	.\projects\world\pretypes\Res.cpp	21;"	d	file:
THIS	.\projects\world\pretypes\Res.cpp	6;"	d	file:
THIS	.\projects\world\pretypes\Str.cpp	6;"	d	file:
THIS	.\projects\world\world.cpp	/^	THIS::THIS() {}$/;"	f	class:wrd::THIS
THIS	.\projects\world\world.cpp	5;"	d	file:
THIS	.\projects\world\world.cpp	9;"	d	file:
TIfADT	.\projects\world\meta\helpers.hpp	/^    class TIfADT : public MetaIf$/;"	c	namespace:wrd
TIfStaticMethod	.\projects\world\meta\helpers.hpp	/^    class TIfStaticMethod : public MetaIf$/;"	c	namespace:wrd
TIfSub	.\projects\world\meta\helpers.hpp	/^    class TIfSub : public MetaIf$/;"	c	namespace:wrd
TIfTemplate	.\projects\world\meta\helpers.hpp	/^    class TIfTemplate : public MetaIf$/;"	c	namespace:wrd
TInterfaceClass	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class TInterfaceClass : public Type {$/;"	c	namespace:wrd	file:
TInterfaceClass	.\docs\protos\worldfrw\metaclass component.cpp	/^class TInterfaceClass : public S {$/;"	c	file:
TMetaClassChooser	.\docs\protos\worldfrw\helper component.cpp	/^class TMetaClassChooser {$/;"	c	file:
TMetaSuper	.\projects\world\meta\helpers.hpp	/^	class TMetaSuper<T, false> {$/;"	c	namespace:wrd
TMetaSuper	.\projects\world\meta\helpers.hpp	/^    class TMetaSuper {$/;"	c	namespace:wrd
TNativeCaller	.\docs\protos\worldfrw\bridge component.cpp	/^class TNativeCaller: public Method {$/;"	c	file:
TNativeCtor	.\docs\protos\worldfrw\bridge component.cpp	/^class TNativeCtor: public TNativeCaller<T, ArgTypes...> {$/;"	c	file:
TNativeMethoder	.\docs\protos\worldfrw\bridge component.cpp	/^	TNativeMethoder(const FuncChecker& checker, Fptr fptr) : Super(), _checker(checker), _fptr(fptr) {}$/;"	f	class:TNativeMethoder	file:
TNativeMethoder	.\docs\protos\worldfrw\bridge component.cpp	/^class TNativeMethoder : public TNativeCaller<T, ArgTypes...> {$/;"	c	file:
TNuller	.\docs\protos\worldfrw\helper component.cpp	/^class TNuller {$/;"	c	file:
TNuller	.\docs\protos\worldfrw\helper component.cpp	/^class TNuller<T&> {$/;"	c	file:
TObjected	.\docs\protos\worldfrw\helper component.cpp	/^class TObjected {$/;"	c	file:
TObjected	.\docs\protos\worldfrw\helper component.cpp	/^class TObjected<false> {$/;"	c	file:
TProxy	.\docs\protos\worldfrw\container component.cpp	/^	class TProxy : public S$/;"	c	class:Container	file:
TRefer	.\docs\protos\worldfrw\passer component.cpp	/^class TRefer : public Refer {$/;"	c	file:
TRefer	.\docs\protos\worldfrw\passer component.cpp	/^class TRefer<const T> : public Refer {$/;"	c	file:
TReference	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		TReference() : Reference(TClass<T>()) {}$/;"	f	class:wrd::TReference	file:
TReference	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class TReference : public Reference {$/;"	c	namespace:wrd	file:
TStrong	.\docs\protos\worldfrw\binder component.cpp	/^class TStrong : public TWeak<T> {$/;"	c	file:
TStrong	.\projects\world\memory\TStrong.hpp	/^	TEMPL THIS::TStrong() {}$/;"	f	class:wrd::THIS
TStrong	.\projects\world\memory\TStrong.hpp	/^	TEMPL THIS::TStrong(T& it) : Super() { this->bind(it); }$/;"	f	class:wrd::THIS
TStrong	.\projects\world\memory\TStrong.hpp	/^	TEMPL THIS::TStrong(T* it) : Super() { this->bind(*it); }$/;"	f	class:wrd::THIS
TStrong	.\projects\world\memory\TStrong.hpp	/^	TEMPL THIS::TStrong(const T& it) : Super() { this->bind(it); }$/;"	f	class:wrd::THIS
TStrong	.\projects\world\memory\TStrong.hpp	/^	TEMPL THIS::TStrong(const T* it) : Super() { this->bind(*it); }$/;"	f	class:wrd::THIS
TStrong	.\projects\world\memory\TStrong.hpp	/^	TEMPL THIS::TStrong(const TStrong<T>& rhs) : Super() { this->_assign(rhs); }$/;"	f	class:wrd::THIS
TStrong	.\projects\world\memory\TStrong.hpp	/^	TEMPL THIS::TStrong(const This& rhs) : Super() { this->_assign(rhs); }$/;"	f	class:wrd::THIS
TStrong	.\projects\world\memory\TStrong.hpp	/^    TEMPL THIS::TStrong() {}$/;"	f	class:wrd::THIS
TStrong	.\projects\world\memory\TStrong.hpp	/^    TEMPL THIS::TStrong(T& it) : Super() { this->bind(it); }$/;"	f	class:wrd::THIS
TStrong	.\projects\world\memory\TStrong.hpp	/^    TEMPL THIS::TStrong(T* it) : Super() { this->bind(*it); }$/;"	f	class:wrd::THIS
TStrong	.\projects\world\memory\TStrong.hpp	/^    TEMPL THIS::TStrong(const This& rhs) : Super() { this->assign(rhs); }$/;"	f	class:wrd::THIS
TTemplateChecker	.\docs\protos\worldfrw\helper component.cpp	/^class TTemplateChecker : public Checker {$/;"	c	file:
TVisitation	.\docs\protos\worldfrw\visitation component.cpp	/^class TVisitation : public S {$/;"	c	file:
TVisitor	.\docs\protos\worldfrw\visitation component.cpp	/^class TVisitor : public Visitor {$/;"	c	file:
TWeak	.\docs\protos\worldfrw\binder component.cpp	/^class TWeak : public Thing {$/;"	c	file:
TWeak	.\projects\world\memory\TWeak.hpp	/^	TEMPL THIS::TWeak() { }$/;"	f	class:wrd::THIS
TWeak	.\projects\world\memory\TWeak.hpp	/^	TEMPL THIS::TWeak(T& it) { this->bind(it); }$/;"	f	class:wrd::THIS
TWeak	.\projects\world\memory\TWeak.hpp	/^	TEMPL THIS::TWeak(T* it) { this->bind(*it); }$/;"	f	class:wrd::THIS
TWeak	.\projects\world\memory\TWeak.hpp	/^	TEMPL THIS::TWeak(const T& it) { this->bind(it); }$/;"	f	class:wrd::THIS
TWeak	.\projects\world\memory\TWeak.hpp	/^	TEMPL THIS::TWeak(const T* it) { this->bind(*it); }$/;"	f	class:wrd::THIS
TWeak	.\projects\world\memory\TWeak.hpp	/^	TEMPL THIS::TWeak(const TWeak<T>& rhs) { this->_assign(rhs); }$/;"	f	class:wrd::THIS
TWeak	.\projects\world\memory\TWeak.hpp	/^	TEMPL THIS::TWeak(const This& rhs) { this->_assign(rhs); }$/;"	f	class:wrd::THIS
TWeak	.\projects\world\memory\TWeak.hpp	/^    TEMPL THIS::TWeak() { }$/;"	f	class:wrd::THIS
TWeak	.\projects\world\memory\TWeak.hpp	/^    TEMPL THIS::TWeak(T& it) { this->bind(it); }$/;"	f	class:wrd::THIS
TWeak	.\projects\world\memory\TWeak.hpp	/^    TEMPL THIS::TWeak(T* it) { this->bind(*it); }$/;"	f	class:wrd::THIS
TWeak	.\projects\world\memory\TWeak.hpp	/^    TEMPL THIS::TWeak(const This& rhs) { this->_assign(rhs); }$/;"	f	class:wrd::THIS
TestCase	.\projects\unittests\TestCase.hpp	/^	class TestCase$/;"	c	namespace:wrd
TestCases	.\projects\unittests\TestCase.hpp	/^		typedef std::vector<TestCase*> TestCases;$/;"	t	class:wrd::TestCase
Thing	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Thing {$/;"	c	namespace:wrd	file:
This	.\docs\protos\worldfrw\passer component.cpp	/^	This() : Super(false) {}$/;"	f	class:TRefer	file:
This	.\docs\protos\worldfrw\passer component.cpp	/^	This() : Super(true) {}$/;"	f	class:TRefer	file:
ThisExpr	.\docs\protos\worldfrw\execution component.cpp	/^class ThisExpr : public Expr {$/;"	c	class:Scope::Spaces	file:
Time	.\projects\independentor\helpers\BuildFeatures.hpp	/^			struct Time$/;"	s	class:wrd::indep::BuildFeatures
Token	.\projects\preferencer\parser\generated\Token.cc	/^  Token::Token() :$/;"	f	class:wrd::Token
Token	.\projects\preferencer\parser\generated\Token.cc	/^  Token::Token(int kind) :$/;"	f	class:wrd::Token
Token	.\projects\preferencer\parser\generated\Token.cc	/^  Token::Token(int kind, const JJString& image)$/;"	f	class:wrd::Token
Token	.\projects\preferencer\parser\generated\Token.h	/^class Token$/;"	c	namespace:wrd
TokenManager	.\projects\preferencer\parser\generated\TokenManager.h	/^class TokenManager {$/;"	c	namespace:wrd
TokenManagerErrorHandler	.\projects\preferencer\parser\generated\ErrorHandler.h	/^  class TokenManagerErrorHandler {$/;"	c	namespace:wrd
TokenMgrError	.\projects\preferencer\parser\generated\TokenMgrError.cc	/^  TokenMgrError::TokenMgrError() {$/;"	f	class:wrd::TokenMgrError
TokenMgrError	.\projects\preferencer\parser\generated\TokenMgrError.cc	/^  TokenMgrError::TokenMgrError(bool EOFSeen, int lexState, int errorLine, int errorColumn, const JJString& errorAfter, JJChar curChar, int reason) {$/;"	f	class:wrd::TokenMgrError
TokenMgrError	.\projects\preferencer\parser\generated\TokenMgrError.cc	/^  TokenMgrError::TokenMgrError(const JJString& message, int reason) {$/;"	f	class:wrd::TokenMgrError
TokenMgrError	.\projects\preferencer\parser\generated\TokenMgrError.h	/^class TokenMgrError {$/;"	c	namespace:wrd
Type	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Type : public Object {$/;"	c	namespace:wrd	file:
Type	.\projects\preferencer\objtree\Type.cpp	/^		THIS::Type() {}$/;"	f	class:wrd::pref::THIS
Type	.\projects\preferencer\objtree\Type.cpp	/^		THIS::Type(const std::string& key) : _key(key) {}$/;"	f	class:wrd::pref::THIS
Type	.\projects\preferencer\objtree\Type.hpp	/^		class Type : public Object$/;"	c	namespace:wrd::pref
UpdateLineColumn	.\projects\preferencer\parser\generated\CharStream.cc	/^void CharStream::UpdateLineColumn(JJChar c) {$/;"	f	class:wrd::CharStream
Variable	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Variable : public Node {$/;"	c	namespace:wrd	file:
Version	.\projects\independentor\helpers\BuildFeatures.hpp	/^			struct Version$/;"	s	class:wrd::indep::BuildFeatures
Visitable	.\docs\protos\worldfrw\visitation component.cpp	/^class Visitable {$/;"	c	file:
Visitation	.\docs\protos\worldfrw\visitation component.cpp	/^    Visitation() : _visitor(NULL) {}$/;"	f	class:Visitation	file:
Visitation	.\docs\protos\worldfrw\visitation component.cpp	/^    Visitation(const This& rhs) : Super(), _visitor(NULL) {}$/;"	f	class:Visitation	file:
Visitation	.\docs\protos\worldfrw\visitation component.cpp	/^class Visitation : public Instance, public Visitable {$/;"	c	file:
Visitor	.\docs\protos\worldfrw\visitation component.cpp	/^	Visitor(wbool is_reculsive = true) : Super(), _is_reculsive(is_reculsive) {}$/;"	f	class:Visitor	file:
Visitor	.\docs\protos\worldfrw\visitation component.cpp	/^class Visitor : public Thing, public Visitable {$/;"	c	file:
Void	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class Void : public Primitive {$/;"	c	namespace:wrd	file:
WHITE	.\projects\independentor\helpers\PlatformAPI.hpp	/^				WHITE = CONSOLE_COLOR_END$/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
WINDOW	.\projects\independentor\helpers\BuildFeatures.hpp	/^				WINDOW = PLATFORM_TYPE_START,$/;"	e	enum:wrd::indep::BuildFeatures::PlatformType
WRD_API	.\docs\protos\worldfrw\bridge component.cpp	97;"	d	file:
WRD_ARE_NULL	.\docs\protos\worldfrw\helper component.cpp	47;"	d	file:
WRD_ARE_NULL	.\projects\world\commons\wrd-defs.hpp	30;"	d
WRD_ARGCNT	.\projects\independentor\macros\ArgumentCounter.hpp	5;"	d
WRD_ARGCNT2	.\projects\independentor\macros\ArgumentCounter.hpp	7;"	d
WRD_ASSERT	.\projects\world\commons\wrd-defs.hpp	55;"	d
WRD_ASSERT_1	.\projects\world\commons\wrd-defs.hpp	54;"	d
WRD_ASSERT_2	.\projects\world\commons\wrd-defs.hpp	53;"	d
WRD_ASSERT_3	.\projects\world\commons\wrd-defs.hpp	52;"	d
WRD_ASSERT_4	.\projects\world\commons\wrd-defs.hpp	49;"	d
WRD_ASSIGN_GUARD	.\projects\independentor\macros\AssignGuard.hpp	8;"	d
WRD_ASSIGN_GUARD_0	.\projects\independentor\macros\AssignGuard.hpp	5;"	d
WRD_ASSIGN_GUARD_1	.\projects\independentor\macros\AssignGuard.hpp	6;"	d
WRD_ASSIGN_GUARD_2	.\projects\independentor\macros\AssignGuard.hpp	7;"	d
WRD_BUILD_COUNT	.\projects\independentor\macros\BuildInformation.hpp	22;"	d
WRD_BUILD_DATE	.\build\projects\independentor\macros\BuildInformation.hpp	12;"	d
WRD_BUILD_DATE	.\projects\independentor\macros\BuildInformation.hpp	12;"	d
WRD_BUILD_DATE_DAY	.\build\projects\independentor\macros\BuildInformation.hpp	11;"	d
WRD_BUILD_DATE_DAY	.\projects\independentor\macros\BuildInformation.hpp	11;"	d
WRD_BUILD_DATE_MONTH	.\build\projects\independentor\macros\BuildInformation.hpp	10;"	d
WRD_BUILD_DATE_MONTH	.\projects\independentor\macros\BuildInformation.hpp	10;"	d
WRD_BUILD_DATE_YEAR	.\build\projects\independentor\macros\BuildInformation.hpp	9;"	d
WRD_BUILD_DATE_YEAR	.\projects\independentor\macros\BuildInformation.hpp	9;"	d
WRD_BUILD_PLATFORM	.\build\projects\independentor\macros\BuildInformation.hpp	29;"	d
WRD_BUILD_PLATFORM	.\build\projects\independentor\macros\BuildInformation.hpp	33;"	d
WRD_BUILD_PLATFORM	.\projects\independentor\macros\BuildInformation.hpp	30;"	d
WRD_BUILD_PLATFORM	.\projects\independentor\macros\BuildInformation.hpp	34;"	d
WRD_BUILD_PLATFORM_IS_LINUX	.\build\projects\independentor\macros\BuildInformation.hpp	30;"	d
WRD_BUILD_PLATFORM_IS_LINUX	.\projects\independentor\macros\BuildInformation.hpp	31;"	d
WRD_BUILD_PLATFORM_IS_WINDOWS	.\build\projects\independentor\macros\BuildInformation.hpp	34;"	d
WRD_BUILD_PLATFORM_IS_WINDOWS	.\projects\independentor\macros\BuildInformation.hpp	35;"	d
WRD_BUILD_PLATFORM_NAME	.\build\projects\independentor\macros\BuildInformation.hpp	24;"	d
WRD_BUILD_PLATFORM_NAME	.\projects\independentor\macros\BuildInformation.hpp	25;"	d
WRD_BUILD_PLATFORM_VERSION	.\build\projects\independentor\macros\BuildInformation.hpp	25;"	d
WRD_BUILD_PLATFORM_VERSION	.\projects\independentor\macros\BuildInformation.hpp	26;"	d
WRD_BUILD_TIME	.\build\projects\independentor\macros\BuildInformation.hpp	16;"	d
WRD_BUILD_TIME	.\projects\independentor\macros\BuildInformation.hpp	16;"	d
WRD_BUILD_TIME_HOUR	.\build\projects\independentor\macros\BuildInformation.hpp	13;"	d
WRD_BUILD_TIME_HOUR	.\projects\independentor\macros\BuildInformation.hpp	13;"	d
WRD_BUILD_TIME_MINUTE	.\build\projects\independentor\macros\BuildInformation.hpp	14;"	d
WRD_BUILD_TIME_MINUTE	.\projects\independentor\macros\BuildInformation.hpp	14;"	d
WRD_BUILD_TIME_SECOND	.\build\projects\independentor\macros\BuildInformation.hpp	15;"	d
WRD_BUILD_TIME_SECOND	.\projects\independentor\macros\BuildInformation.hpp	15;"	d
WRD_BUILD_TYPENAME	.\build\projects\independentor\macros\BuildInformation.hpp	23;"	d
WRD_BUILD_TYPENAME	.\projects\independentor\macros\BuildInformation.hpp	24;"	d
WRD_BUILD_VERSION	.\build\projects\independentor\macros\BuildInformation.hpp	22;"	d
WRD_BUILD_VERSION	.\projects\independentor\macros\BuildInformation.hpp	23;"	d
WRD_BUILD_VERSION_FIX	.\projects\independentor\macros\BuildInformation.hpp	19;"	d
WRD_BUILD_VERSION_MAJOR	.\build\projects\independentor\macros\BuildInformation.hpp	17;"	d
WRD_BUILD_VERSION_MAJOR	.\projects\independentor\macros\BuildInformation.hpp	17;"	d
WRD_BUILD_VERSION_MINOR	.\build\projects\independentor\macros\BuildInformation.hpp	18;"	d
WRD_BUILD_VERSION_MINOR	.\projects\independentor\macros\BuildInformation.hpp	18;"	d
WRD_BUILD_VERSION_NAME	.\build\projects\independentor\macros\BuildInformation.hpp	20;"	d
WRD_BUILD_VERSION_NAME	.\projects\independentor\macros\BuildInformation.hpp	20;"	d
WRD_BUILD_VERSION_PATCH	.\build\projects\independentor\macros\BuildInformation.hpp	19;"	d
WRD_BUILD_VERSION_VALUE	.\build\projects\independentor\macros\BuildInformation.hpp	21;"	d
WRD_BUILD_VERSION_VALUE	.\projects\independentor\macros\BuildInformation.hpp	21;"	d
WRD_CLASS	.\projects\world\commons\wrd-defs.hpp	95;"	d
WRD_CLASS_1	.\docs\protos\worldfrw\bridge component.cpp	75;"	d	file:
WRD_CLASS_1	.\projects\world\commons\wrd-defs.hpp	92;"	d
WRD_CLASS_2	.\docs\protos\worldfrw\bridge component.cpp	77;"	d	file:
WRD_CLASS_2	.\projects\world\commons\wrd-defs.hpp	89;"	d
WRD_CLASS_3	.\docs\protos\worldfrw\bridge component.cpp	83;"	d	file:
WRD_CLASS_DECL	.\projects\world\commons\wrd-defs.hpp	113;"	d
WRD_CLASS_DECL_1	.\projects\world\commons\wrd-defs.hpp	110;"	d
WRD_CLASS_DECL_2	.\projects\world\commons\wrd-defs.hpp	107;"	d
WRD_CLASS_DEF	.\projects\world\commons\wrd-defs.hpp	130;"	d
WRD_CLASS_DEF_1	.\projects\world\commons\wrd-defs.hpp	116;"	d
WRD_CLASS_DEF_2	.\projects\world\commons\wrd-defs.hpp	117;"	d
WRD_CLASS_INIT	.\projects\world\commons\wrd-defs.hpp	142;"	d
WRD_COMMA	.\projects\independentor\macros\Helpers.hpp	19;"	d
WRD_CONCAT	.\projects\independentor\macros\Concaterator.hpp	4;"	d
WRD_CONSUME_ARGS	.\projects\independentor\macros\Helpers.hpp	6;"	d
WRD_CREATE_FUNC_CHECKER_FOR_API	.\docs\protos\worldfrw\bridge component.cpp	54;"	d	file:
WRD_CREATE_FUNC_CHECKER_FOR_CTOR	.\docs\protos\worldfrw\bridge component.cpp	52;"	d	file:
WRD_CTOR	.\docs\protos\worldfrw\bridge component.cpp	95;"	d	file:
WRD_DECL_2	.\docs\protos\worldfrw\WorldPrototyping.cpp	428;"	d	file:
WRD_DECL_3	.\docs\protos\worldfrw\WorldPrototyping.cpp	429;"	d	file:
WRD_DEFAULT	.\projects\independentor\commons\indep-defs.hpp	31;"	d
WRD_DEFAULT_FALSE	.\projects\independentor\commons\indep-defs.hpp	29;"	d
WRD_DEFAULT_TRUE	.\projects\independentor\commons\indep-defs.hpp	30;"	d
WRD_DELAY	.\projects\independentor\macros\Helpers.hpp	14;"	d
WRD_DLL	.\projects\independentor\commons\indep-defs.hpp	17;"	d
WRD_DLL	.\projects\independentor\commons\indep-defs.hpp	19;"	d
WRD_DUMMY	.\projects\independentor\commons\indep-defs.hpp	35;"	d
WRD_DUMP	.\projects\logger\macro.hpp	7;"	d
WRD_EACH	.\projects\independentor\macros\ForEach.hpp	49;"	d
WRD_EACH_EXPAND	.\projects\independentor\macros\ForEach.hpp	73;"	d
WRD_EACH_LIST	.\projects\independentor\macros\ForEach.hpp	78;"	d
WRD_EACH_TUPLE	.\projects\independentor\macros\ForEach.hpp	60;"	d
WRD_ENTRYPOINT_CALL	.\projects\independentor\commons\indep-defs.hpp	13;"	d
WRD_ERROR	.\projects\logger\macro.hpp	14;"	d
WRD_ERROR_0	.\projects\independentor\commons\indep-defs.hpp	32;"	d
WRD_ERROR_1	.\projects\independentor\commons\indep-defs.hpp	34;"	d
WRD_ERROR_MINUS1	.\projects\independentor\commons\indep-defs.hpp	33;"	d
WRD_EVAL	.\projects\independentor\macros\Evaluator.hpp	35;"	d
WRD_FALSE	.\projects\independentor\commons\indep-defs.hpp	40;"	d
WRD_FUNCTION_CALL	.\projects\independentor\commons\indep-defs.hpp	12;"	d
WRD_GET	.\projects\world\commons\wrd-defs.hpp	149;"	d
WRD_GET_1	.\projects\world\commons\wrd-defs.hpp	148;"	d
WRD_GET_2	.\projects\world\commons\wrd-defs.hpp	147;"	d
WRD_GET_3	.\projects\world\commons\wrd-defs.hpp	144;"	d
WRD_GET_VARG2_X_1	.\projects\independentor\macros\ArgumentGetter.hpp	61;"	d
WRD_GET_VARG2_X_10	.\projects\independentor\macros\ArgumentGetter.hpp	70;"	d
WRD_GET_VARG2_X_11	.\projects\independentor\macros\ArgumentGetter.hpp	71;"	d
WRD_GET_VARG2_X_12	.\projects\independentor\macros\ArgumentGetter.hpp	72;"	d
WRD_GET_VARG2_X_13	.\projects\independentor\macros\ArgumentGetter.hpp	73;"	d
WRD_GET_VARG2_X_14	.\projects\independentor\macros\ArgumentGetter.hpp	74;"	d
WRD_GET_VARG2_X_15	.\projects\independentor\macros\ArgumentGetter.hpp	75;"	d
WRD_GET_VARG2_X_16	.\projects\independentor\macros\ArgumentGetter.hpp	76;"	d
WRD_GET_VARG2_X_2	.\projects\independentor\macros\ArgumentGetter.hpp	62;"	d
WRD_GET_VARG2_X_3	.\projects\independentor\macros\ArgumentGetter.hpp	63;"	d
WRD_GET_VARG2_X_4	.\projects\independentor\macros\ArgumentGetter.hpp	64;"	d
WRD_GET_VARG2_X_5	.\projects\independentor\macros\ArgumentGetter.hpp	65;"	d
WRD_GET_VARG2_X_6	.\projects\independentor\macros\ArgumentGetter.hpp	66;"	d
WRD_GET_VARG2_X_7	.\projects\independentor\macros\ArgumentGetter.hpp	67;"	d
WRD_GET_VARG2_X_8	.\projects\independentor\macros\ArgumentGetter.hpp	68;"	d
WRD_GET_VARG2_X_9	.\projects\independentor\macros\ArgumentGetter.hpp	69;"	d
WRD_GET_VARG2_Y_1	.\projects\independentor\macros\ArgumentGetter.hpp	78;"	d
WRD_GET_VARG2_Y_10	.\projects\independentor\macros\ArgumentGetter.hpp	87;"	d
WRD_GET_VARG2_Y_11	.\projects\independentor\macros\ArgumentGetter.hpp	88;"	d
WRD_GET_VARG2_Y_12	.\projects\independentor\macros\ArgumentGetter.hpp	89;"	d
WRD_GET_VARG2_Y_13	.\projects\independentor\macros\ArgumentGetter.hpp	90;"	d
WRD_GET_VARG2_Y_14	.\projects\independentor\macros\ArgumentGetter.hpp	91;"	d
WRD_GET_VARG2_Y_15	.\projects\independentor\macros\ArgumentGetter.hpp	92;"	d
WRD_GET_VARG2_Y_16	.\projects\independentor\macros\ArgumentGetter.hpp	93;"	d
WRD_GET_VARG2_Y_2	.\projects\independentor\macros\ArgumentGetter.hpp	79;"	d
WRD_GET_VARG2_Y_3	.\projects\independentor\macros\ArgumentGetter.hpp	80;"	d
WRD_GET_VARG2_Y_4	.\projects\independentor\macros\ArgumentGetter.hpp	81;"	d
WRD_GET_VARG2_Y_5	.\projects\independentor\macros\ArgumentGetter.hpp	82;"	d
WRD_GET_VARG2_Y_6	.\projects\independentor\macros\ArgumentGetter.hpp	83;"	d
WRD_GET_VARG2_Y_7	.\projects\independentor\macros\ArgumentGetter.hpp	84;"	d
WRD_GET_VARG2_Y_8	.\projects\independentor\macros\ArgumentGetter.hpp	85;"	d
WRD_GET_VARG2_Y_9	.\projects\independentor\macros\ArgumentGetter.hpp	86;"	d
WRD_GET_VARG_1	.\projects\independentor\macros\ArgumentGetter.hpp	28;"	d
WRD_GET_VARG_10	.\projects\independentor\macros\ArgumentGetter.hpp	37;"	d
WRD_GET_VARG_11	.\projects\independentor\macros\ArgumentGetter.hpp	38;"	d
WRD_GET_VARG_12	.\projects\independentor\macros\ArgumentGetter.hpp	39;"	d
WRD_GET_VARG_13	.\projects\independentor\macros\ArgumentGetter.hpp	40;"	d
WRD_GET_VARG_14	.\projects\independentor\macros\ArgumentGetter.hpp	41;"	d
WRD_GET_VARG_15	.\projects\independentor\macros\ArgumentGetter.hpp	42;"	d
WRD_GET_VARG_16	.\projects\independentor\macros\ArgumentGetter.hpp	43;"	d
WRD_GET_VARG_17	.\projects\independentor\macros\ArgumentGetter.hpp	44;"	d
WRD_GET_VARG_18	.\projects\independentor\macros\ArgumentGetter.hpp	45;"	d
WRD_GET_VARG_19	.\projects\independentor\macros\ArgumentGetter.hpp	46;"	d
WRD_GET_VARG_2	.\projects\independentor\macros\ArgumentGetter.hpp	29;"	d
WRD_GET_VARG_20	.\projects\independentor\macros\ArgumentGetter.hpp	47;"	d
WRD_GET_VARG_21	.\projects\independentor\macros\ArgumentGetter.hpp	48;"	d
WRD_GET_VARG_22	.\projects\independentor\macros\ArgumentGetter.hpp	49;"	d
WRD_GET_VARG_23	.\projects\independentor\macros\ArgumentGetter.hpp	50;"	d
WRD_GET_VARG_24	.\projects\independentor\macros\ArgumentGetter.hpp	51;"	d
WRD_GET_VARG_25	.\projects\independentor\macros\ArgumentGetter.hpp	52;"	d
WRD_GET_VARG_26	.\projects\independentor\macros\ArgumentGetter.hpp	53;"	d
WRD_GET_VARG_27	.\projects\independentor\macros\ArgumentGetter.hpp	54;"	d
WRD_GET_VARG_28	.\projects\independentor\macros\ArgumentGetter.hpp	55;"	d
WRD_GET_VARG_29	.\projects\independentor\macros\ArgumentGetter.hpp	56;"	d
WRD_GET_VARG_3	.\projects\independentor\macros\ArgumentGetter.hpp	30;"	d
WRD_GET_VARG_30	.\projects\independentor\macros\ArgumentGetter.hpp	57;"	d
WRD_GET_VARG_31	.\projects\independentor\macros\ArgumentGetter.hpp	58;"	d
WRD_GET_VARG_32	.\projects\independentor\macros\ArgumentGetter.hpp	59;"	d
WRD_GET_VARG_4	.\projects\independentor\macros\ArgumentGetter.hpp	31;"	d
WRD_GET_VARG_5	.\projects\independentor\macros\ArgumentGetter.hpp	32;"	d
WRD_GET_VARG_6	.\projects\independentor\macros\ArgumentGetter.hpp	33;"	d
WRD_GET_VARG_7	.\projects\independentor\macros\ArgumentGetter.hpp	34;"	d
WRD_GET_VARG_8	.\projects\independentor\macros\ArgumentGetter.hpp	35;"	d
WRD_GET_VARG_9	.\projects\independentor\macros\ArgumentGetter.hpp	36;"	d
WRD_HAS_NO_ID	.\projects\independentor\commons\indep-defs.hpp	44;"	d
WRD_HAS_NO_SCRIPTCODE	.\projects\independentor\commons\indep-defs.hpp	43;"	d
WRD_IN	.\projects\independentor\commons\indep-defs.hpp	25;"	d
WRD_INDEX_ERROR	.\projects\independentor\commons\indep-defs.hpp	42;"	d
WRD_INFO	.\projects\logger\macro.hpp	13;"	d
WRD_INHERIT	.\projects\independentor\macros\Inherit.hpp	14;"	d
WRD_INHERIT_1	.\projects\independentor\macros\Inherit.hpp	10;"	d
WRD_INHERIT_2	.\projects\independentor\macros\Inherit.hpp	5;"	d
WRD_INITIATE_CLASS	.\projects\unittests\commons\ut-defs.hpp	3;"	d
WRD_INITIATOR	.\projects\independentor\macros\Initiator.hpp	3;"	d
WRD_IS_CONST	.\docs\protos\worldfrw\helper component.cpp	53;"	d	file:
WRD_IS_CONST	.\projects\world\commons\wrd-defs.hpp	43;"	d
WRD_IS_ERR	.\docs\protos\worldfrw\helper component.cpp	59;"	d	file:
WRD_IS_ERR	.\projects\world\commons\wrd-defs.hpp	75;"	d
WRD_IS_ERR_1	.\projects\world\commons\wrd-defs.hpp	74;"	d
WRD_IS_ERR_2	.\projects\world\commons\wrd-defs.hpp	73;"	d
WRD_IS_ERR_3	.\projects\world\commons\wrd-defs.hpp	72;"	d
WRD_IS_GOOD	.\projects\world\commons\wrd-defs.hpp	79;"	d
WRD_IS_GOOD_1	.\projects\world\commons\wrd-defs.hpp	78;"	d
WRD_IS_GOOD_2	.\projects\world\commons\wrd-defs.hpp	77;"	d
WRD_IS_GOOD_3	.\projects\world\commons\wrd-defs.hpp	76;"	d
WRD_IS_NULL	.\docs\protos\worldfrw\helper component.cpp	33;"	d	file:
WRD_IS_NULL	.\projects\world\commons\wrd-defs.hpp	27;"	d
WRD_IS_NULL_1	.\docs\protos\worldfrw\helper component.cpp	31;"	d	file:
WRD_IS_NULL_1	.\projects\world\commons\wrd-defs.hpp	26;"	d
WRD_IS_NULL_2	.\docs\protos\worldfrw\helper component.cpp	26;"	d	file:
WRD_IS_NULL_2	.\projects\world\commons\wrd-defs.hpp	25;"	d
WRD_IS_NULL_3	.\projects\world\commons\wrd-defs.hpp	20;"	d
WRD_IS_RES	.\projects\world\commons\wrd-defs.hpp	65;"	d
WRD_IS_RES_2	.\projects\world\commons\wrd-defs.hpp	64;"	d
WRD_IS_RES_3	.\projects\world\commons\wrd-defs.hpp	63;"	d
WRD_IS_RES_4	.\projects\world\commons\wrd-defs.hpp	62;"	d
WRD_IS_RES_5	.\projects\world\commons\wrd-defs.hpp	57;"	d
WRD_IS_SUPER	.\projects\world\commons\wrd-defs.hpp	41;"	d
WRD_IS_SUPER_1	.\projects\world\commons\wrd-defs.hpp	36;"	d
WRD_IS_SUPER_2	.\projects\world\commons\wrd-defs.hpp	37;"	d
WRD_IS_SUPER_3	.\projects\world\commons\wrd-defs.hpp	38;"	d
WRD_IS_THIS	.\docs\protos\worldfrw\helper component.cpp	51;"	d	file:
WRD_IS_THIS	.\projects\world\commons\wrd-defs.hpp	34;"	d
WRD_IS_THIS_0	.\docs\protos\worldfrw\helper component.cpp	50;"	d	file:
WRD_IS_THIS_0	.\projects\world\commons\wrd-defs.hpp	33;"	d
WRD_IS_THIS_1	.\docs\protos\worldfrw\helper component.cpp	49;"	d	file:
WRD_IS_THIS_1	.\projects\world\commons\wrd-defs.hpp	32;"	d
WRD_IS_WARN	.\docs\protos\worldfrw\helper component.cpp	65;"	d	file:
WRD_IS_WARN	.\projects\world\commons\wrd-defs.hpp	70;"	d
WRD_IS_WARN_1	.\projects\world\commons\wrd-defs.hpp	69;"	d
WRD_IS_WARN_2	.\projects\world\commons\wrd-defs.hpp	68;"	d
WRD_IS_WARN_3	.\projects\world\commons\wrd-defs.hpp	67;"	d
WRD_LAZY_METHOD	.\projects\independentor\macros\LazyMethod.hpp	20;"	d
WRD_LAZY_METHOD_2	.\projects\independentor\macros\LazyMethod.hpp	18;"	d
WRD_LAZY_METHOD_3	.\projects\independentor\macros\LazyMethod.hpp	16;"	d
WRD_LAZY_METHOD_4	.\projects\independentor\macros\LazyMethod.hpp	14;"	d
WRD_LAZY_METHOD_5	.\projects\independentor\macros\LazyMethod.hpp	12;"	d
WRD_LIST_PAIR_X	.\projects\independentor\macros\ArgList.hpp	11;"	d
WRD_LIST_PAIR_X_10	.\projects\independentor\macros\ArgList.hpp	10;"	d
WRD_LIST_PAIR_X_2	.\projects\independentor\macros\ArgList.hpp	6;"	d
WRD_LIST_PAIR_X_4	.\projects\independentor\macros\ArgList.hpp	7;"	d
WRD_LIST_PAIR_X_6	.\projects\independentor\macros\ArgList.hpp	8;"	d
WRD_LIST_PAIR_X_8	.\projects\independentor\macros\ArgList.hpp	9;"	d
WRD_LIST_PAIR_Y	.\projects\independentor\macros\ArgList.hpp	18;"	d
WRD_LIST_PAIR_Y_10	.\projects\independentor\macros\ArgList.hpp	17;"	d
WRD_LIST_PAIR_Y_2	.\projects\independentor\macros\ArgList.hpp	13;"	d
WRD_LIST_PAIR_Y_4	.\projects\independentor\macros\ArgList.hpp	14;"	d
WRD_LIST_PAIR_Y_6	.\projects\independentor\macros\ArgList.hpp	15;"	d
WRD_LIST_PAIR_Y_8	.\projects\independentor\macros\ArgList.hpp	16;"	d
WRD_LOCALE	.\projects\independentor\commons\indep-defs.hpp	39;"	d
WRD_MAX_ARGCNT	.\projects\independentor\commons\indep-defs.hpp	45;"	d
WRD_MEMORYLEAK	.\projects\independentor\macros\MemoryLeak.hpp	21;"	d
WRD_MEMORYLEAK	.\projects\independentor\macros\MemoryLeak.hpp	24;"	d
WRD_NO_NAME	.\projects\independentor\commons\indep-defs.hpp	38;"	d
WRD_NULL	.\projects\independentor\commons\indep-defs.hpp	37;"	d
WRD_OUT	.\projects\independentor\commons\indep-defs.hpp	26;"	d
WRD_OVERLOAD	.\projects\independentor\macros\Overload.hpp	27;"	d
WRD_PAIR	.\projects\independentor\macros\Pair.hpp	22;"	d
WRD_PAIR_1	.\projects\independentor\macros\Pair.hpp	18;"	d
WRD_PAIR_2	.\projects\independentor\macros\Pair.hpp	19;"	d
WRD_PAIR_3	.\projects\independentor\macros\Pair.hpp	20;"	d
WRD_PAIR_4	.\projects\independentor\macros\Pair.hpp	21;"	d
WRD_SPACE	.\projects\independentor\macros\Helpers.hpp	5;"	d
WRD_SUCCESS	.\projects\independentor\commons\indep-defs.hpp	36;"	d
WRD_TEST	.\projects\unittests\TestCase.hpp	7;"	d
WRD_TESTCASE	.\projects\unittests\commons\ut-defs.hpp	4;"	d
WRD_TO_STR	.\projects\independentor\macros\Stringizer.hpp	3;"	d
WRD_TRUE	.\projects\independentor\commons\indep-defs.hpp	41;"	d
WRD_TYPE_LINUX	.\build\projects\independentor\macros\BuildInformation.hpp	26;"	d
WRD_TYPE_LINUX	.\projects\independentor\macros\BuildInformation.hpp	27;"	d
WRD_TYPE_WINDOWS	.\build\projects\independentor\macros\BuildInformation.hpp	27;"	d
WRD_TYPE_WINDOWS	.\projects\independentor\macros\BuildInformation.hpp	28;"	d
WRD_UNCONST	.\projects\independentor\macros\Helpers.hpp	12;"	d
WRD_UNCONST_0	.\projects\independentor\macros\Helpers.hpp	9;"	d
WRD_UNCONST_1	.\projects\independentor\macros\Helpers.hpp	10;"	d
WRD_UNCONST_2	.\projects\independentor\macros\Helpers.hpp	11;"	d
WRD_UNWRAP	.\projects\independentor\macros\Helpers.hpp	7;"	d
WRD_VOID	.\projects\independentor\macros\Helpers.hpp	4;"	d
WRD_WARN	.\projects\logger\macro.hpp	15;"	d
World	.\projects\world\world.hpp	/^    class World : public Manager$/;"	c	namespace:wrd
WorldMethod	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	class WorldMethod : public Method {$/;"	c	namespace:wrd	file:
YELLOW	.\projects\independentor\helpers\PlatformAPI.hpp	/^				LIGHTMAGENTA, YELLOW, $/;"	e	enum:wrd::indep::PlatformAPI::ConsoleColor
_ARE_NULL	.\docs\protos\worldfrw\helper component.cpp	46;"	d	file:
_ARE_NULL	.\projects\world\commons\wrd-defs.hpp	29;"	d
_ARGCNT	.\projects\independentor\macros\ArgumentCounter.hpp	4;"	d
_ARGCNT2	.\projects\independentor\macros\ArgumentCounter.hpp	6;"	d
_CASE	.\projects\preferencer\parser\PRParserHandler.cpp	30;"	d	file:
_CASE	.\projects\preferencer\parser\PRParserHandler.cpp	39;"	d	file:
_CLASS	.\projects\world\pretypes\reses.hpp	19;"	d
_CLASS	.\projects\world\pretypes\reses.hpp	7;"	d
_CLASS_BASE	.\projects\world\commons\wrd-defs.hpp	81;"	d
_CLASS_DECL_BASE	.\projects\world\commons\wrd-defs.hpp	99;"	d
_CLASS_TEMPLATE	.\docs\protos\worldfrw\bridge component.cpp	80;"	d	file:
_COMMA	.\projects\independentor\macros\Helpers.hpp	18;"	d
_CONCAT	.\projects\independentor\macros\Concaterator.hpp	3;"	d
_DECL	.\projects\world\pretypes\Reses.cpp	5;"	d	file:
_DECL	.\projects\world\pretypes\Reses.cpp	9;"	d	file:
_DECL	.\projects\world\pretypes\reses.hpp	12;"	d
_DECL	.\projects\world\pretypes\reses.hpp	18;"	d
_EOF	.\projects\preferencer\parser\generated\PRParserConstants.h	/^const  int _EOF = 0;$/;"	m	namespace:wrd
_FUNC_CHECKER_NAME	.\docs\protos\worldfrw\bridge component.cpp	53;"	d	file:
_INTEGER_METHOD	.\projects\independentor\helpers\BuildFeatures.cpp	10;"	d	file:
_LAZY_METHOD	.\projects\independentor\macros\LazyMethod.hpp	7;"	d
_OVERLOAD	.\projects\independentor\macros\Overload.hpp	26;"	d
_REDIRECT	.\projects\world\meta\TClass.hpp	21;"	d
_REDIRECT	.\projects\world\meta\TClass.hpp	35;"	d
_REFLECT	.\docs\protos\worldfrw\bridge component.cpp	81;"	d	file:
_TGet	.\projects\world\commons\_TGet.hpp	/^	class _TGet {$/;"	c	namespace:wrd
_TGet	.\projects\world\commons\_TGet.hpp	/^	class _TGet<T&> {$/;"	c	namespace:wrd
_TGet	.\projects\world\commons\_TGet.hpp	/^	class _TGet<T*> {$/;"	c	namespace:wrd
_WRD_EACH0	.\projects\independentor\macros\ForEach.hpp	47;"	d
_WRD_EACH1	.\projects\independentor\macros\ForEach.hpp	48;"	d
_WRD_EACH_EXPAND0	.\projects\independentor\macros\ForEach.hpp	71;"	d
_WRD_EACH_EXPAND1	.\projects\independentor\macros\ForEach.hpp	72;"	d
_WRD_EACH_GET_END	.\projects\independentor\macros\ForEach.hpp	38;"	d
_WRD_EACH_GET_END1	.\projects\independentor\macros\ForEach.hpp	37;"	d
_WRD_EACH_GET_END2	.\projects\independentor\macros\ForEach.hpp	36;"	d
_WRD_EACH_LIST0	.\projects\independentor\macros\ForEach.hpp	76;"	d
_WRD_EACH_LIST1	.\projects\independentor\macros\ForEach.hpp	77;"	d
_WRD_EACH_LIST_NEXT	.\projects\independentor\macros\ForEach.hpp	44;"	d
_WRD_EACH_LIST_NEXT1	.\projects\independentor\macros\ForEach.hpp	43;"	d
_WRD_EACH_NEXT	.\projects\independentor\macros\ForEach.hpp	41;"	d
_WRD_EACH_NEXT0	.\projects\independentor\macros\ForEach.hpp	39;"	d
_WRD_EACH_NEXT1	.\projects\independentor\macros\ForEach.hpp	40;"	d
_WRD_EACH_TUPLE0	.\projects\independentor\macros\ForEach.hpp	58;"	d
_WRD_EACH_TUPLE1	.\projects\independentor\macros\ForEach.hpp	59;"	d
_WRD_EVAL0	.\projects\independentor\macros\Evaluator.hpp	30;"	d
_WRD_EVAL1	.\projects\independentor\macros\Evaluator.hpp	31;"	d
_WRD_EVAL2	.\projects\independentor\macros\Evaluator.hpp	32;"	d
_WRD_EVAL3	.\projects\independentor\macros\Evaluator.hpp	33;"	d
_WRD_EVAL4	.\projects\independentor\macros\Evaluator.hpp	34;"	d
__FILENAME__	.\projects\logger\macro.hpp	5;"	d
_age	.\docs\protos\worldfrw\visitation component.cpp	/^    int _age;$/;"	m	class:MyClass	file:
_ageptr	.\docs\protos\worldfrw\visitation component.cpp	/^    int* _ageptr;$/;"	m	class:MyClass	file:
_args	.\docs\protos\worldfrw\backbone component.cpp	/^	Array _args;$/;"	m	class:Msg	file:
_assign	.\projects\world\memory\Bind.cpp	/^	Res& THIS::_assign(const This& rhs)$/;"	f	class:wrd::THIS
_bean	.\docs\protos\worldfrw\bridge component.cpp	/^    T* _bean;$/;"	m	class:TBlackbox	file:
_bean	.\docs\protos\worldfrw\bridge component.cpp	/^    T** _bean;$/;"	m	class:TBlackBox	file:
_bean	.\docs\protos\worldfrw\passer component.cpp	/^	Strong _bean;$/;"	m	class:Refer	file:
_bind	.\projects\world\memory\Bind.cpp	/^	Res& THIS::_bind(const Instance& it)$/;"	f	class:wrd::THIS
_bind	.\projects\world\memory\Block.cpp	/^	Res& THIS::_bind(const Instance& new1)$/;"	f	class:wrd::THIS
_bind	.\projects\world\memory\TStrong.hpp	/^	TEMPL Res& THIS::_bind(const Instance& it)$/;"	f	class:wrd::THIS
_bind	.\projects\world\memory\TWeak.hpp	/^	TEMPL Res& THIS::_bind(const Instance& it)$/;"	f	class:wrd::THIS
_block	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		Block _block;$/;"	m	class:wrd::WorldMethod	file:
_block	.\docs\protos\worldfrw\passer component.cpp	/^	BlockStmt _block;$/;"	m	class:MgdMethod	file:
_buffer	.\projects\file-manipulator\file-streams\AsciiStream.hpp	/^			std::string _buffer;$/;"	m	class:wrd::fm::AsciiStream
_callNative	.\docs\protos\worldfrw\bridge component.cpp	/^	virtual Refer _callNative(T* thisptr, ArgTypes... args) {$/;"	f	class:TNativeCtor	file:
_caller	.\docs\protos\worldfrw\execution component.cpp	/^	Refer _caller; \/\/ expression or object 가 여기에 들어간다. isConst()여부를 따져야 하기 때문에 TStrong은 될 수 없다.$/;"	m	class:Scope::Spaces::Expr	file:
_captureLocals	.\docs\protos\worldfrw\passer component.cpp	/^	Result& _captureLocals() {$/;"	f	class:Closure	file:
_castEach	.\docs\protos\worldfrw\bridge component.cpp	/^	Object* _castEach(const Args& args, index_sequence<n...>) {$/;"	f	class:TNativeCaller	file:
_checker	.\docs\protos\worldfrw\bridge component.cpp	/^	const FuncChecker& _checker;$/;"	v
_class	.\docs\protos\worldfrw\passer component.cpp	/^	TWeak<const MgdClass> _class;$/;"	m	class:MgdObject	file:
_class	.\projects\preferencer\parser\generated\PRParser.h	/^    std::string _class;$/;"	m	class:wrd::PRParser
_classes	.\docs\protos\worldfrw\metaclass component.cpp	/^	Classes _classes;$/;"	m	class:Classer	file:
_classes	.\projects\preferencer\Preferencer.hpp	/^			Classes _classes;$/;"	m	class:wrd::pref::Preferencer
_clean	.\build\builder.py	/^def _clean(directory):$/;"	f
_clone	.\docs\protos\worldfrw\backbone component.cpp	/^	virtual TStrong<Instance> _clone() const {$/;"	f	class:Instance	file:
_clone	.\projects\world\meta\Class.cpp	/^	TStrong<Instance> THIS::_clone() const { return TCloner<This>::clone(*this); }$/;"	f	class:wrd::THIS
_clone	.\projects\world\meta\TClass.hpp	/^	TEMPL TStrong<Instance> THIS::_clone() const { return TCloner<THIS>::clone(*this); }$/;"	f	class:wrd::THIS
_cls	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		Class _cls;$/;"	m	class:wrd::Object	file:
_cls	.\docs\protos\worldfrw\passer component.cpp	/^	const Class& _cls;$/;"	m	class:Refer	file:
_col	.\docs\protos\worldfrw\interpreting component.cpp	/^		wint _col;$/;"	m	class:Origin::Pos	file:
_createMakefiles	.\build\builder.py	/^def _createMakefiles():$/;"	f
_createSubFile	.\projects\file-manipulator\file-structures\Folder.cpp	/^		File* THIS::_createSubFile(DIR* e)$/;"	f	class:wrd::fm::THIS
_decreaseCount	.\docs\protos\worldfrw\execution component.cpp	/^	Result& _decreaseCount() {$/;"	f	class:InstanceBlock	file:
_deps	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		Array _deps;$/;"	m	class:wrd::Class	file:
_down	.\docs\protos\worldfrw\passer component.cpp	/^	virtual Node& _down(const Class& cls) {$/;"	f	class:Refer	file:
_down	.\docs\protos\worldfrw\passer component.cpp	/^	virtual const Node& _down(const Class& cls) const {$/;"	f	class:Refer	file:
_down	.\projects\world\base\Thing.cpp	/^	Thing& THIS::_down(const Class& cls)$/;"	f	class:wrd::THIS
_down	.\projects\world\base\Thing.cpp	/^	const Thing& THIS::_down(const Class& cls) const$/;"	f	class:wrd::THIS
_down	.\projects\world\memory\Bind.cpp	/^	Thing& THIS::_down(const Class& cls)$/;"	f	class:wrd::THIS
_end	.\docs\protos\worldfrw\interpreting component.cpp	/^	Pos _end;$/;"	m	class:Origin	file:
_extractBuildInfo	.\build\builder.py	/^def _extractBuildInfo(): # from RELEASE.md at root directory.$/;"	f
_fd	.\projects\file-manipulator\file-streams\FileStream.hpp	/^			FILE* _fd;$/;"	m	class:wrd::fm::FileStream
_file	.\projects\logger\streams\FileLogStream.hpp	/^			fm::AsciiStream _file;$/;"	m	class:wrd::log::FileLogStream
_filterConst	.\docs\protos\worldfrw\execution component.cpp	/^	Node& _filterConst(Node& it) {$/;"	f	class:Scope::Spaces	file:
_fptr	.\docs\protos\worldfrw\bridge component.cpp	/^	Fptr _fptr;$/;"	m	class:TNativeMethoder	file:
_get	.\docs\protos\worldfrw\backbone component.cpp	/^	Container& _get() {$/;"	f	class:Node	file:
_get	.\docs\protos\worldfrw\backbone component.cpp	/^	Node& _get(wbool want_const, std::function<wbool(Node&)> tester) {$/;"	f	class:Node	file:
_get	.\projects\world\base\Node.cpp	/^	Node& THIS::_get(wbool want_const, std::function<wbool(Node&)> tester)$/;"	f	class:wrd::THIS
_get	.\projects\world\memory\Bind.cpp	/^	Instance& THIS::_get()$/;"	f	class:wrd::THIS
_get	.\projects\world\memory\Block.cpp	/^	Instance& THIS::_get() { return *_pt; }$/;"	f	class:wrd::THIS
_getBlock	.\projects\world\base\Instance.cpp	/^	Block& THIS::_getBlock(Id id) { return const_cast<Block&>(getMgr()[id]); }$/;"	f	class:wrd::THIS
_getInfo	.\projects\file-manipulator\file-structures\File.cpp	/^		struct stat& THIS::_getInfo(const string& path)$/;"	f	class:wrd::fm::THIS
_getInstanceBlock	.\docs\protos\worldfrw\binder component.cpp	/^	InstanceBlock& _getInstanceBlock() {$/;"	f	class:TWeak	file:
_getInstanceBlock	.\docs\protos\worldfrw\binder component.cpp	/^	const InstanceBlock& _getInstanceBlock() const {$/;"	f	class:TWeak	file:
_getMembers	.\docs\protos\worldfrw\backbone component.cpp	/^	Container& _getMembers() {$/;"	f	class:Node	file:
_getNodes	.\projects\world\base\Node.cpp	/^	Container& THIS::_getNodes() { return const_cast<Container&>(getNodes()); }$/;"	f	class:wrd::THIS
_getSubContainerHead	.\docs\protos\worldfrw\passer component.cpp	/^	CIterator _getSubContainerHead(widx n) const {$/;"	f	class:Object	file:
_getSubContainerHead	.\docs\protos\worldfrw\passer component.cpp	/^	Iterator _getSubContainerHead(widx n) {$/;"	f	class:Object	file:
_getSubs	.\docs\protos\worldfrw\metaclass component.cpp	/^	Classes& _getSubs() {$/;"	f	class:Class	file:
_getSubs	.\projects\world\meta\Class.cpp	/^    Classes& THIS::_getSubs() { return const_cast<Classes&>(getSubs()); }$/;"	f	class:wrd::THIS
_getSupers	.\docs\protos\worldfrw\metaclass component.cpp	/^	Classes& _getSupers() {$/;"	f	class:Class	file:
_getSupers	.\projects\world\meta\Class.cpp	/^    Classes& THIS::_getSupers() { return const_cast<Classes&>(getSupers()); }$/;"	f	class:wrd::THIS
_getThis	.\docs\protos\worldfrw\bridge component.cpp	/^	Node& _getThis() {$/;"	f	class:TNativeCaller	file:
_header	.\projects\unittests\main.cpp	/^void _header()$/;"	f
_id	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		wid _id;$/;"	m	class:wrd::Instance	file:
_id	.\docs\protos\worldfrw\backbone component.cpp	/^	} _id;$/;"	m	class:Instance	typeref:union:Instance::ID	file:
_id	.\docs\protos\worldfrw\binder component.cpp	/^	Instance::ID _id;$/;"	m	class:TWeak	file:
_id	.\projects\world\base\Instance.hpp	/^		Id _id;$/;"	m	class:wrd::Instance
_incBuildCnt	.\build\builder.py	/^def _incBuildCnt():$/;"	f
_increaseCount	.\docs\protos\worldfrw\execution component.cpp	/^	Result& _increaseCount() {$/;"	f	class:InstanceBlock	file:
_inflated	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		static String _inflated;	$/;"	m	class:wrd::Result	file:
_init	.\build\builder.py	/^def _init():$/;"	f
_initNodes	.\projects\world\base\Composit.cpp	/^    Res& THIS::_initNodes()$/;"	f	class:wrd::THIS
_initNodes	.\projects\world\meta\Class.cpp	/^    Res& THIS::_initNodes()$/;"	f	class:wrd::THIS
_initNodes	.\projects\world\meta\TClass.hpp	/^    TEMPL Res& THIS::_initNodes()$/;"	f	class:wrd::THIS
_initNodes	.\projects\world\msg-usr\Object.cpp	/^	Res& THIS::_initNodes()$/;"	f	class:wrd::THIS
_initialize	.\docs\protos\worldfrw\visitation component.cpp	/^    Result& _initialize() {$/;"	f	class:Visitor	file:
_initializeMembers	.\docs\protos\worldfrw\backbone component.cpp	/^	virtual Result& _initializeMembers() {$/;"	f	class:CompositNode	file:
_initializeMembers	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual Result& _initializeMembers() {$/;"	f	class:Class	file:
_initializeMembers	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual Result& _initializeMembers() {$/;"	f	class:TClass	file:
_initializeMembers	.\docs\protos\worldfrw\passer component.cpp	/^	virtual Result& _initializeMembers() {$/;"	f	class:Object	file:
_injectBuildInfo	.\build\builder.py	/^def _injectBuildInfo():$/;"	f
_instancer	.\projects\world\world.hpp	/^		Instancer _instancer;$/;"	m	class:wrd::World
_isAnsiColorTerminal	.\projects\independentor\helpers\PlatformAPI.cpp	/^			bool _isAnsiColorTerminal()$/;"	f	namespace:wrd::indep::__anon3
_isFiltered	.\projects\file-manipulator\file-structures\Folder.cpp	/^		wbool THIS::_isFiltered(const File& target) const$/;"	f	class:wrd::fm::THIS
_isFolder	.\projects\file-manipulator\file-structures\File.cpp	/^		wbool THIS::_isFolder(struct stat& info) { return info.st_mode & S_IFDIR; }$/;"	f	class:wrd::fm::THIS
_is_const	.\docs\protos\worldfrw\passer component.cpp	/^	wbool _is_const;$/;"	m	class:Refer	file:
_is_enable	.\projects\logger\streams\Stream.hpp	/^			wbool _is_enable;$/;"	m	class:wrd::log::Stream
_is_init	.\projects\world\base\State.hpp	/^		wbool _is_init;$/;"	m	class:wrd::State
_is_initialized	.\docs\protos\worldfrw\metaclass component.cpp	/^	static wbool _is_initialized;$/;"	m	class:TClass	file:
_is_reculsive	.\docs\protos\worldfrw\visitation component.cpp	/^	wbool _is_reculsive;$/;"	m	class:Visitor	file:
_is_reculsive	.\projects\file-manipulator\file-structures\Folder.hpp	/^				wbool _is_reculsive;$/;"	m	class:wrd::fm::Folder::Option
_iterator	.\projects\file-manipulator\file-structures\Folder.hpp	/^			DIR* _iterator;$/;"	m	class:wrd::fm::Folder
_its_id	.\projects\world\memory\Bind.hpp	/^		Id _its_id; \/\/ id for binded one$/;"	m	class:wrd::Bind
_key	.\projects\preferencer\objtree\MemberType.hpp	/^			std::string _key;$/;"	m	class:wrd::pref::MemberType
_key	.\projects\preferencer\objtree\Type.hpp	/^			std::string _key;$/;"	m	class:wrd::pref::Type
_length	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		wcnt _length;$/;"	m	class:wrd::Container	file:
_make	.\build\builder.py	/^def _make():$/;"	f
_me	.\docs\protos\worldfrw\backbone component.cpp	/^	static Method* _me;$/;"	m	class:Msg	file:
_members	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		Chain _members;$/;"	m	class:wrd::Object	file:
_members	.\docs\protos\worldfrw\backbone component.cpp	/^	Chain _members; \/\/ of Container.$/;"	m	class:CompositNode	file:
_members	.\projects\preferencer\objtree\ClassType.hpp	/^			Members _members;$/;"	m	class:wrd::pref::ClassType
_method	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		TWeak<Method> _method;$/;"	m	class:wrd::Intendation	file:
_mode	.\projects\file-manipulator\file-streams\FileStream.hpp	/^			Mode _mode;$/;"	m	class:wrd::fm::FileStream
_msg	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		Message _msg;$/;"	m	class:wrd::Intendation	file:
_msg	.\docs\protos\worldfrw\execution component.cpp	/^	mutable Msg _msg;$/;"	m	class:Scope::Spaces::Expr	file:
_name	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		String _name;$/;"	m	class:wrd::Class	file:
_name	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		String _name;$/;"	m	class:wrd::NamedVariable	file:
_name	.\docs\protos\worldfrw\backbone component.cpp	/^	String _name;$/;"	m	class:Msg	file:
_name	.\projects\file-manipulator\file-structures\File.hpp	/^			std::string _name;$/;"	m	class:wrd::fm::File
_nested_methods	.\docs\protos\worldfrw\passer component.cpp	/^	Methods _nested_methods;$/;"	m	class:MgdMethod	file:
_next	.\projects\file-manipulator\file-structures\Folder.cpp	/^		const File* THIS::_next() const { return _sub_file && getOption().isReculsive() ? &_sub_file->next() : _sub_file; }$/;"	f	class:wrd::fm::THIS
_nodes	.\projects\world\base\Composit.hpp	/^        TStrong<Chain> _nodes; \/\/ of Container.$/;"	m	class:wrd::Composit
_nodes	.\projects\world\meta\MgdClass.hpp	/^		TStrong<Chain> _nodes;$/;"	m	class:wrd::MgdClass
_obj	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		TStrong<Object> _obj;$/;"	m	class:wrd::Reference	file:
_onCreateControl	.\docs\protos\worldfrw\execution component.cpp	/^	virtual TStrong<Control> _onCreateControl(Chain& origin) { return new Spaces(origin); }$/;"	f	class:Scope::Spaces	file:
_onCreateIteration	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		virtual TStrong<Iteration> _onCreateIteration() {$/;"	f	class:wrd::Array	file:
_onInitNodes	.\projects\world\base\Node.cpp	/^	Res& THIS::_onInitNodes(Container& tray) { return wasgood; }$/;"	f	class:wrd::THIS
_onInitializeMembers	.\docs\protos\worldfrw\backbone component.cpp	/^	virtual Result& _onInitializeMembers(Container& tray) { return Success; }$/;"	f	class:Node	file:
_onRun	.\docs\protos\worldfrw\bridge component.cpp	/^	virtual Refer _onRun(Msg& msg) {$/;"	f	class:TNativeCaller	file:
_onRun	.\docs\protos\worldfrw\passer component.cpp	/^	virtual Refer _onRun(Msg& msg) {$/;"	f	class:MgdMethod	file:
_onStrong	.\projects\world\memory\Block.cpp	/^	Res& THIS::_onStrong(wcnt vote)$/;"	f	class:wrd::THIS
_onVisit	.\docs\protos\worldfrw\visitation component.cpp	/^        virtual Result& _onVisit(MyClass& trg) const {$/;"	f	class:MyClass::MyAsciiLoadVisitation	file:
_onVisit	.\docs\protos\worldfrw\visitation component.cpp	/^    virtual Result& _onVisit(T& trg) const {$/;"	f	class:TVisitation	file:
_onVisit	.\docs\protos\worldfrw\visitation component.cpp	/^    virtual Result& _onVisit(const T& trg) const {$/;"	f	class:TVisitation	file:
_onVisited	.\docs\protos\worldfrw\visitation component.cpp	/^        virtual Result& _onVisited(MyClass& trg) const {$/;"	f	class:MyClass::MyAsciiLoadVisitation	file:
_onVisited	.\docs\protos\worldfrw\visitation component.cpp	/^    virtual Result& _onVisited(T& trg) const {$/;"	f	class:TVisitation	file:
_onVisited	.\docs\protos\worldfrw\visitation component.cpp	/^    virtual Result& _onVisited(const T& trg) const {$/;"	f	class:TVisitation	file:
_onWeak	.\projects\world\memory\Block.cpp	/^	Res& THIS::_onWeak(wcnt vote)$/;"	f	class:wrd::THIS
_option	.\projects\file-manipulator\file-structures\Folder.hpp	/^			Option _option;$/;"	m	class:wrd::fm::Folder
_org	.\projects\world\meta\MgdClass.hpp	/^        TStrong<Origin> _org;$/;"	m	class:wrd::MgdClass
_origin	.\docs\protos\worldfrw\container component.cpp	/^		TWeak<Container> _origin;$/;"	m	class:Container::Proxy	file:
_origin	.\docs\protos\worldfrw\execution component.cpp	/^	TStrong<Origin> _origin;$/;"	m	class:Scope::Spaces::Expr	file:
_origin	.\docs\protos\worldfrw\metaclass component.cpp	/^	TStrong<Origin> _origin;$/;"	m	class:MgdClass	file:
_origin	.\docs\protos\worldfrw\passer component.cpp	/^	TStrong<Origin> _origin;$/;"	m	class:MgdMethod	file:
_owner	.\docs\protos\worldfrw\interpreting component.cpp	/^	Origin& _owner;$/;"	m	class:Origin	file:
_owner	.\projects\file-manipulator\file-structures\File.hpp	/^			const File* _owner;$/;"	m	class:wrd::fm::File
_params	.\docs\protos\worldfrw\passer component.cpp	/^	TStrong<Classes> _params; \/\/ Mgd, NativeMethod는 여기에 new Classes를 할당할것이다.$/;"	m	class:Method	file:
_path	.\projects\file-manipulator\file-structures\PathedObject.hpp	/^			std::string _path;$/;"	m	class:wrd::fm::PathedObject
_peelOffBuffer	.\projects\file-manipulator\file-streams\AsciiStream.cpp	/^		string THIS::_peelOffBuffer(wcnt bytes\/*except for null*\/)$/;"	f	class:wrd::fm::THIS
_preferencer	.\projects\preferencer\parser\generated\PRParser.h	/^        pref::Preferencer* _preferencer;$/;"	m	class:wrd::PRParser
_prepare	.\projects\file-manipulator\file-structures\Folder.cpp	/^		const File* THIS::_prepare() const$/;"	f	class:wrd::fm::THIS
_printColorCharacter	.\projects\independentor\helpers\PlatformAPI.cpp	/^			void _printColorCharacter(CLASS::ConsoleColor fore, CLASS::ConsoleColor back)$/;"	f	namespace:wrd::indep::__anon3
_pt	.\projects\world\memory\Block.hpp	/^		Instance* _pt;$/;"	m	class:wrd::Block
_readToBuffer	.\projects\file-manipulator\file-streams\AsciiStream.cpp	/^		wcnt THIS::_readToBuffer(wcnt bytes)$/;"	f	class:wrd::fm::THIS
_release	.\projects\file-manipulator\file-structures\Folder.cpp	/^		void THIS::_release()$/;"	f	class:wrd::fm::THIS
_row	.\docs\protos\worldfrw\interpreting component.cpp	/^		wint _row;$/;"	m	class:Origin::Pos	file:
_saver	.\docs\protos\worldfrw\visitation component.cpp	/^    BinaryFileStream _saver;$/;"	m	class:Saver	file:
_serial	.\docs\protos\worldfrw\binder component.cpp	/^	wcnt _serial;$/;"	m	class:TWeak	file:
_serialize	.\docs\protos\worldfrw\bridge component.cpp	/^	Object* _serialize(const Args& args) {$/;"	f	class:TNativeCaller	file:
_setId	.\projects\world\base\Instance.cpp	/^	Res& THIS::_setId(Id new1)$/;"	f	class:wrd::THIS
_setInit	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual Result& _setInit(wbool newone) {$/;"	f	class:TClass	file:
_setInit	.\projects\world\base\State.cpp	/^	Res& THIS::_setInit(wbool new1)$/;"	f	class:wrd::THIS
_setMe	.\docs\protos\worldfrw\backbone component.cpp	/^	static Result& _setMe(Method& newone) { _me = newone; }$/;"	f	class:Msg	file:
_setName	.\projects\file-manipulator\file-structures\File.cpp	/^		void THIS::_setName(const string& new_name)$/;"	f	class:wrd::fm::THIS
_setPath	.\projects\file-manipulator\file-structures\PathedObject.cpp	/^		wbool THIS::_setPath(const string& new_path) { _path = new_path; return false; }$/;"	f	class:wrd::fm::THIS
_setSize	.\docs\protos\worldfrw\container component.cpp	/^	Result& _setSize(wcnt newone) { _size = newone; }$/;"	f
_setThis	.\docs\protos\worldfrw\backbone component.cpp	/^	static Result& _setThis(Object& newone) { _thisptr = &newone; }$/;"	f	class:Msg	file:
_setVisitor	.\docs\protos\worldfrw\visitation component.cpp	/^    Result& _setVisitor(Visitor& newone) const { _visitor = &newone; }$/;"	f	class:Visitation	file:
_shares	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		Array _shares;$/;"	m	class:wrd::Class	file:
_size	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		wcnt _size;$/;"	m	class:wrd::SolidContainer	file:
_size	.\docs\protos\worldfrw\container component.cpp	/^	wcnt _size;$/;"	v
_stack	.\docs\protos\worldfrw\passer component.cpp	/^	Result& _stack(Scope& scope, Msg& msg) {$/;"	f	class:MgdMethod	file:
_stackObjectSpace	.\docs\protos\worldfrw\passer component.cpp	/^	Result& _stackObjectSpace(scope& scope, Msg& msg) {$/;"	f	class:MgdMethod	file:
_start	.\docs\protos\worldfrw\interpreting component.cpp	/^	Pos _start;$/;"	m	class:Origin	file:
_stmts	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		TArray<Statement> _stmts;$/;"	m	class:wrd::Block	file:
_stmts	.\docs\protos\worldfrw\execution component.cpp	/^	tStmts _stmts;$/;"	m	class:Scope::Spaces::BlockStmt	file:
_streams	.\projects\logger\Logger.hpp	/^			std::vector<Stream*> _streams;$/;"	m	class:wrd::log::Logger
_strong	.\docs\protos\worldfrw\execution component.cpp	/^	wcnt _strong;$/;"	m	class:InstanceBlock	file:
_sub_file	.\projects\file-manipulator\file-structures\Folder.hpp	/^			File* _sub_file;$/;"	m	class:wrd::fm::Folder
_this	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		TWeak<Object> _this; $/;"	m	class:wrd::Intendation	file:
_this	.\docs\protos\worldfrw\passer component.cpp	/^	mutable TStrong<Object> _this;$/;"	m	class:InstanceDelegator	file:
_thisptr	.\docs\protos\worldfrw\backbone component.cpp	/^	static Object* _thisptr; \/\/ Message는_name_thisptr_args를_모두_하나의_Array로_구성한다 $/;"	m	class:Msg	file:
_toLowercase	.\projects\preferencer\objtree\MemberType.cpp	/^		std::string THIS::_toLowercase(const std::string& str)$/;"	f	class:wrd::pref::THIS
_tour	.\docs\protos\worldfrw\visitation component.cpp	/^    virtual Result& _tour(Visitor& visitor) const {$/;"	f	class:MyClass	file:
_tour	.\docs\protos\worldfrw\visitation component.cpp	/^    virtual Result& _tour(Visitor& visitor) {$/;"	f	class:MyClass	file:
_tour	.\projects\world\base\Thing.cpp	/^	Res& THIS::_tour(Visitor& visitor) const { return wasgood; }$/;"	f	class:wrd::THIS
_tour	.\projects\world\base\Thing.cpp	/^	Res& THIS::_tour(Visitor& visitor)$/;"	f	class:wrd::THIS
_trait	.\docs\protos\worldfrw\container component.cpp	/^	TWeak<const Class> _trait;$/;"	v
_unstack	.\docs\protos\worldfrw\passer component.cpp	/^	Result& _unstack(Scope& scope, Msg& msg) {$/;"	f	class:MgdMethod	file:
_updateLine	.\build\builder.py	/^def _updateLine(lines, n, trg, basestr):$/;"	f
_updateLineString	.\build\builder.py	/^def _updateLineString(lines, n, trg, basestr):$/;"	f
_ut	.\build\builder.py	/^def _ut():$/;"	f
_validateArgs	.\docs\protos\worldfrw\bridge component.cpp	/^	Result& _validateArgs(ArgTypes&... args) {$/;"	f	class:TNativeCaller	file:
_value	.\projects\preferencer\objtree\MemberType.hpp	/^			std::string _value;$/;"	m	class:wrd::pref::MemberType
_variables	.\docs\protos\worldfrw\metaclass component.cpp	/^	Array _variables; \/\/ Managed variables for each "Object" instance.$/;"	m	class:ObjectedClass	file:
_vars	.\projects\world\meta\ObjectClass.hpp	/^		TStrong<Array> _vars;$/;"	m	class:wrd::ObjectClass
_visitor	.\docs\protos\worldfrw\visitation component.cpp	/^    mutable Visitor* _visitor;$/;"	m	class:Visitation	file:
_visits	.\docs\protos\worldfrw\visitation component.cpp	/^    static vector<TStrong<Visitation> > _visits;$/;"	m	class:Visitor	file:
a	.\docs\protos\WorldLangSyntax.cpp	/^    a = 5$/;"	v
a	.\docs\protos\worldfrw\backbone component.cpp	/^		A& a = ...;$/;"	v
a	.\docs\protos\worldfrw\passer component.cpp	/^	A a;$/;"	v
a2	.\docs\protos\WorldLangSyntax.cpp	/^        int a1 = 5, a2 = 8    $/;"	v
aage	.\docs\protos\worldfrw\visitation component.cpp	/^    Integer aage;$/;"	m	class:MyClass	file:
addString	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		String addString(String& arg1, String& arg2) {$/;"	f	class:MyFirstWorldModule
addString	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	String MyFirstWorldModule::addString(String& arg1, String & const arg2) {$/;"	f	class:MyFirstWorldModule
addUnicodeEscapes	.\projects\preferencer\parser\generated\TokenMgrError.cc	/^JJSimpleString addUnicodeEscapes(const JJString& str) {$/;"	f	namespace:wrd
add_escapes	.\projects\preferencer\parser\generated\ParseException.cc	/^   JJString ParseException::add_escapes(const JJString& str) {$/;"	f	class:wrd::ParseException
adjustBeginLineColumn	.\projects\preferencer\parser\generated\CharStream.cc	/^void CharStream::adjustBeginLineColumn(int newLine, int newCol) {$/;"	f	class:wrd::CharStream
arg	.\projects\preferencer\parser\generated\PRParser.h	/^    int        arg;$/;"	m	struct:wrd::JJCalls
assign	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		virtual Result& assign(const Thing& rhs) {$/;"	f	class:wrd::Instance	file:
assign	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		virtual const Result& assign(const Thing& rhs) {$/;"	f	class:wrd::Instance	file:
assign	.\docs\protos\worldfrw\passer component.cpp	/^	virtual Result& assign(const Thing& it) {$/;"	f	class:Refer	file:
assign	.\projects\world\base\Thing.cpp	/^	Res& THIS::assign(const Thing& it)$/;"	f	class:wrd::THIS
assign	.\projects\world\memory\Bind.cpp	/^	Res& THIS::assign(const Thing& it)$/;"	f	class:wrd::THIS
available	.\projects\preferencer\parser\generated\CharStream.h	/^  int                available;$/;"	m	class:wrd::CharStream
b:current_syntax	.\docs\syntaxes\wrd.vim	/^let b:current_syntax = "wrd"$/;"	v
backup	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual inline void backup(int amount) {$/;"	f	class:wrd::CharStream
beginColumn	.\projects\preferencer\parser\generated\Token.h	/^  int beginColumn;$/;"	m	class:wrd::Token
beginLine	.\projects\preferencer\parser\generated\Token.h	/^  int beginLine;$/;"	m	class:wrd::Token
bind	.\docs\protos\worldfrw\binder component.cpp	/^	Result& bind(T* newone) {$/;"	f	class:TWeak	file:
bind	.\docs\protos\worldfrw\binder component.cpp	/^	Result& bind(This& rhs) {$/;"	f	class:TWeak	file:
bind	.\docs\protos\worldfrw\binder component.cpp	/^	virtual Result& bind(T& it) {$/;"	f	class:TStrong	file:
bind	.\docs\protos\worldfrw\binder component.cpp	/^	virtual Result& bind(T& newone) {$/;"	f	class:TWeak	file:
bind	.\docs\protos\worldfrw\passer component.cpp	/^	Result& bind(Node& it) {$/;"	f	class:Refer	file:
bind	.\docs\protos\worldfrw\passer component.cpp	/^	Result& bind(Refer& it) { return bind(it.get()); }$/;"	f	class:Refer	file:
bind	.\docs\protos\worldfrw\passer component.cpp	/^	Result& bind(const Node& it) {$/;"	f	class:Refer	file:
bind	.\docs\protos\worldfrw\passer component.cpp	/^	Result& bind(const Refer& it) { return bind(it.get()); }$/;"	f	class:Refer	file:
bind	.\projects\world\memory\Bindable.cpp	/^	Res& THIS::bind(const Instance& it) { return _bind(it); }$/;"	f	class:wrd::THIS
bind	.\projects\world\memory\Instancer.cpp	/^	Res& THIS::bind(Instance& new1)$/;"	f	class:wrd::THIS
bind	.\projects\world\memory\TWeak.hpp	/^	TEMPL Res& THIS::bind(T& new1) { return this->bind(new1); }$/;"	f	class:wrd::THIS
bind	.\projects\world\memory\TWeak.hpp	/^	TEMPL Res& THIS::bind(const T& new1) { return this->bind(new1); }$/;"	f	class:wrd::THIS
bool_expr	.\projects\preferencer\parser\generated\PRParser.cc	/^Token     * PRParser::bool_expr() {Token* expr;$/;"	f	class:wrd::PRParser
branch	.\build\builder.py	/^def branch(command):$/;"	f
bufcolumn	.\projects\preferencer\parser\generated\CharStream.h	/^  int*               bufcolumn;$/;"	m	class:wrd::CharStream
buffer	.\projects\preferencer\parser\generated\CharStream.h	/^  JJChar*  	         buffer;$/;"	m	class:wrd::CharStream
bufline	.\projects\preferencer\parser\generated\CharStream.h	/^  int*               bufline;$/;"	m	class:wrd::CharStream
bufpos	.\projects\preferencer\parser\generated\CharStream.h	/^  int                bufpos;$/;"	m	class:wrd::CharStream
bufsize	.\projects\preferencer\parser\generated\CharStream.h	/^  int                bufsize;$/;"	m	class:wrd::CharStream
build	.\build\builder.py	/^def build():$/;"	f
ca	.\docs\protos\worldfrw\backbone component.cpp	/^		const A& ca = a;$/;"	v
ca	.\docs\protos\worldfrw\passer component.cpp	/^	const A& ca = a;$/;"	v
call	.\docs\protos\worldfrw\execution component.cpp	/^	virtual Refer call(Msg& msg) const { return execute(); }$/;"	f	class:Scope::Spaces::Expr	file:
call	.\docs\protos\worldfrw\execution component.cpp	/^	virtual Refer call(Msg& msg) { return execute(); }$/;"	f	class:Scope::Spaces::Expr	file:
call	.\docs\protos\worldfrw\passer component.cpp	/^	virtual Refer call(Msg& msg) const { return _bean.call(msg); }$/;"	f	class:Refer	file:
call	.\docs\protos\worldfrw\passer component.cpp	/^	virtual Refer call(Msg& msg) const {$/;"	f	class:Method	file:
call	.\docs\protos\worldfrw\passer component.cpp	/^	virtual Refer call(Msg& msg) const {$/;"	f	class:Object	file:
call	.\docs\protos\worldfrw\passer component.cpp	/^	virtual Refer call(Msg& msg) { return _bean.call(msg); }$/;"	f	class:Refer	file:
call	.\docs\protos\worldfrw\passer component.cpp	/^	virtual Refer call(Msg& msg) {$/;"	f	class:Method	file:
call	.\docs\protos\worldfrw\passer component.cpp	/^	virtual Refer call(Msg& msg) {$/;"	f	class:Object	file:
canBind	.\projects\world\memory\Bind.cpp	/^	wbool THIS::canBind(const Class& cls) const { return getClass().isSub(cls); }$/;"	f	class:wrd::THIS
canBind	.\projects\world\memory\Bindable.cpp	/^	wbool THIS::canBind(const Instance& it) { return canBind(it.getClass()); }$/;"	f	class:wrd::THIS
canBind	.\projects\world\memory\Block.cpp	/^	wbool THIS::canBind(const Class& cls) const { return cls.isSub(getBindable()); }$/;"	f	class:wrd::THIS
canUse	.\projects\world\base\Node.cpp	/^	wbool THIS::canUse(const Msg& msg) const { \/*TODO: return msg.getName() == getName(); *\/ return false;}$/;"	f	class:wrd::THIS
canUse	.\projects\world\msg-usr\Object.cpp	/^	wbool THIS::canUse(const Msg& msg) const$/;"	f	class:wrd::THIS
casted	.\docs\protos\worldfrw\backbone component.cpp	/^		Integer casted = *ra.to<Integer>(); \/\/ T of to<T> should be a sort of Node.$/;"	v
char_expr	.\projects\preferencer\parser\generated\PRParser.cc	/^Token     * PRParser::char_expr() {Token* expr;$/;"	f	class:wrd::PRParser
checkDependencies	.\build\builder.py	/^def checkDependencies():$/;"	f
class_declaration	.\projects\preferencer\parser\generated\PRParser.cc	/^void PRParser::class_declaration() {Token* klass;$/;"	f	class:wrd::PRParser
clean	.\build\builder.py	/^def clean():$/;"	f
clear	.\projects\preferencer\parser\generated\PRParser.cc	/^void PRParser::clear(){$/;"	f	class:wrd::PRParser
clear	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^  void PRParserTokenManager::clear() {$/;"	f	class:wrd::PRParserTokenManager
clone	.\docs\protos\worldfrw\backbone component.cpp	/^	Strong clone() const {$/;"	f	class:Node	file:
clone	.\docs\protos\worldfrw\backbone component.cpp	/^	TStrong<Instance> clone() const {$/;"	f	class:Instance	file:
clone	.\projects\preferencer\Preferencer.cpp	/^		Object& THIS::clone() const { return *(new Preferencer(*this)); }$/;"	f	class:wrd::pref::THIS
clone	.\projects\preferencer\objtree\ClassType.cpp	/^		Object& THIS::clone() const { return *(new This(*this)); }$/;"	f	class:wrd::pref::THIS
clone	.\projects\preferencer\objtree\MemberType.cpp	/^		Object& THIS::clone() const { return *(new MemberType(*this)); }$/;"	f	class:wrd::pref::THIS
clone	.\projects\preferencer\objtree\Type.cpp	/^		Object& THIS::clone() const { return *(new This(*this)); }$/;"	f	class:wrd::pref::THIS
clone	.\projects\world\meta\Class.cpp	/^	TStrong<THIS> THIS::clone() const { return TStrong<This>(_clone().down<This>()); }$/;"	f	class:wrd::THIS
clone	.\projects\world\meta\helpers.hpp	/^        static TStrong<Instance> clone(const T& origin) {$/;"	f	class:wrd::TCloner
closure	.\docs\protos\worldfrw\passer component.cpp	/^	virtual TRefer<Delegator> closure(Object& obj) {$/;"	f	class:Method	file:
cls	.\projects\world\base\Id.hpp	/^		    widx cls:21;$/;"	m	struct:wrd::Id::SeperatedId
column	.\projects\preferencer\parser\generated\CharStream.h	/^  int                column;$/;"	m	class:wrd::CharStream
commit	.\build\builder.py	/^def commit():$/;"	f
con1	.\docs\protos\worldfrw\passer component.cpp	/^	TRefer<const A> con1 = ref;$/;"	v
con2	.\docs\protos\worldfrw\passer component.cpp	/^	const TRefer<A> con2 = ref;$/;"	v
configure_file	.\projects\preferencer\parser\generated\PRParser.cc	/^void PRParser::configure_file() {$/;"	f	class:wrd::PRParser
const	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	10;"	d	file:
cra	.\docs\protos\worldfrw\backbone component.cpp	/^		TRefer<const AChild> cra = ra.to<const AChild>();$/;"	v
cra2	.\docs\protos\worldfrw\backbone component.cpp	/^		const TRefer<AChild> cra2 = cra;$/;"	v
cra3	.\docs\protos\worldfrw\backbone component.cpp	/^		Refer cra3 = ca.to(TClass<AChild>());$/;"	v
createCurrentTime	.\projects\independentor\helpers\PlatformAPI.cpp	/^		string CLASS::createCurrentTime(const string& strftime_format)$/;"	f	class:wrd::indep::CLASS
curChar	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^  JJChar                    curChar;$/;"	m	class:wrd::PRParserTokenManager
curLexState	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^    int curLexState;$/;"	m	class:wrd::PRParserTokenManager
cur_	.\projects\preferencer\parser\generated\CharStream.cc	/^  size_t cur_;$/;"	m	class:__anon4::StringReaderStream	file:
currentToken	.\projects\preferencer\parser\generated\ParseException.cc	/^  Token currentToken;$/;"	m	namespace:wrd	file:
currentToken	.\projects\preferencer\parser\generated\ParseException.h	/^  Token currentToken;$/;"	m	class:wrd::ParseException
cwd	.\build\builder.py	/^cwd = ""$/;"	v
dbg	.\projects\world\pretypes\Res.cpp	/^	Res& THIS::dbg(...) { return wasgood; };$/;"	f	class:wrd::THIS
debugStream	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^  FILE *debugStream;$/;"	m	class:wrd::PRParserTokenManager
deepclone	.\docs\protos\worldfrw\container component.cpp	/^	virtual TStrong<Container> deepclone() const {$/;"	f
defaultLexState	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^const int defaultLexState = 0;$/;"	m	namespace:wrd	file:
deleteStream	.\projects\preferencer\parser\generated\CharStream.h	/^  bool               deleteStream;$/;"	m	class:wrd::CharStream
disable_tracing	.\projects\preferencer\parser\generated\PRParser.cc	/^  void PRParser::disable_tracing()  {$/;"	f	class:wrd::PRParser
dump	.\projects\logger\Logger.cpp	/^		wbool THIS::dump(const char* message)$/;"	f	class:wrd::log::THIS
dump	.\projects\logger\streams\ConsoleStream.cpp	/^		wbool THIS::dump(const char* message)$/;"	f	class:wrd::log::THIS
dump	.\projects\logger\streams\FileLogStream.cpp	/^		wbool THIS::dump(const char* message)$/;"	f	class:wrd::log::THIS
dump	.\projects\logger\streams\Stream.cpp	/^		wbool THIS::dump(const char* message) { return ! _is_enable; }$/;"	f	class:wrd::log::THIS
dumpFormat	.\projects\logger\Logger.cpp	/^		wbool THIS::dumpFormat(const char* format, ...)$/;"	f	class:wrd::log::THIS
enable_tracing	.\projects\preferencer\parser\generated\PRParser.cc	/^  void PRParser::enable_tracing()  {$/;"	f	class:wrd::PRParser
endColumn	.\projects\preferencer\parser\generated\Token.h	/^  int endColumn;$/;"	m	class:wrd::Token
endLine	.\projects\preferencer\parser\generated\Token.h	/^  int endLine;$/;"	m	class:wrd::Token
endOfInput	.\projects\preferencer\parser\generated\CharStream.cc	/^  virtual bool endOfInput() {$/;"	f	class:__anon4::StringReaderStream
endOfInput	.\projects\preferencer\parser\generated\CharStream.h	/^  bool endOfInput() {$/;"	f	class:wrd::CharStream
endOfInput	.\projects\preferencer\parser\generated\JavaCC.h	/^  virtual bool   endOfInput() { return true; }$/;"	f	class:ReaderStream
enq	.\docs\protos\worldfrw\container component.cpp	/^	Result& enq(Ts... args) {$/;"	f	class:Containable	file:
eol	.\projects\preferencer\parser\generated\ParseException.cc	129;"	d	file:
eol	.\projects\preferencer\parser\generated\ParseException.h	84;"	d
eq	.\build\builder.py	/^from operator import eq$/;"	i
err	.\projects\world\pretypes\Res.cpp	/^	Res& THIS::err(...) { return wasgood; }$/;"	f	class:wrd::THIS
errorCode	.\projects\preferencer\parser\generated\TokenMgrError.h	/^  int errorCode;$/;"	m	class:wrd::TokenMgrError
errorHandler	.\projects\preferencer\parser\generated\PRParser.h	/^  ErrorHandler *errorHandler = nullptr;$/;"	m	class:wrd::PRParser
errorHandler	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^  TokenManagerErrorHandler* errorHandler = nullptr;$/;"	m	class:wrd::PRParserTokenManager
error_count	.\projects\preferencer\parser\generated\ErrorHandler.h	/^      int error_count;$/;"	m	class:wrd::ErrorHandler
error_count	.\projects\preferencer\parser\generated\ErrorHandler.h	/^      int error_count;$/;"	m	class:wrd::TokenManagerErrorHandler
execute	.\docs\protos\worldfrw\execution component.cpp	/^	virtual Refer execute() const { $/;"	f	class:Scope::Spaces::Expr	file:
execute	.\docs\protos\worldfrw\execution component.cpp	/^	virtual Refer execute() const {$/;"	f	class:Scope::Spaces::ThisExpr	file:
execute	.\docs\protos\worldfrw\execution component.cpp	/^	virtual Refer execute() { $/;"	f	class:Scope::Spaces::Expr	file:
execute	.\docs\protos\worldfrw\execution component.cpp	/^	virtual Refer execute() {$/;"	f	class:Scope::Spaces::ThisExpr	file:
execute	.\docs\protos\worldfrw\execution component.cpp	/^	virtual Result& execute() const {$/;"	f	class:Scope::Spaces::BlockStmt	file:
expectedTokenSequences	.\projects\preferencer\parser\generated\ParseException.cc	/^  int** expectedTokenSequences;$/;"	m	namespace:wrd	file:
expectedTokenSequences	.\projects\preferencer\parser\generated\ParseException.h	/^  int** expectedTokenSequences;$/;"	m	class:wrd::ParseException
f	.\projects\preferencer\parser\generated\JavaCC.h	/^    T f;$/;"	m	struct:JJEnter
f	.\projects\preferencer\parser\generated\JavaCC.h	/^    T f;$/;"	m	struct:JJExit
features	.\build\CMakeFiles\feature_tests.c	/^  const char features[] = {"\\n"$/;"	v
features	.\build\CMakeFiles\feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v
fgetts	.\projects\independentor\commons\indep-defs.hpp	58;"	d
fgetts	.\projects\independentor\commons\indep-defs.hpp	70;"	d
first	.\projects\preferencer\parser\generated\PRParser.h	/^    Token*     first;$/;"	m	struct:wrd::JJCalls
float_expr	.\projects\preferencer\parser\generated\PRParser.cc	/^Token     * PRParser::float_expr() {Token* expr;$/;"	f	class:wrd::PRParser
fm	.\projects\file-manipulator\file-streams\AsciiStream.cpp	/^	namespace fm$/;"	n	namespace:wrd	file:
fm	.\projects\file-manipulator\file-streams\AsciiStream.hpp	/^	namespace fm$/;"	n	namespace:wrd
fm	.\projects\file-manipulator\file-streams\BinaryStream.cpp	/^	namespace fm$/;"	n	namespace:wrd	file:
fm	.\projects\file-manipulator\file-streams\BinaryStream.hpp	/^	namespace fm$/;"	n	namespace:wrd
fm	.\projects\file-manipulator\file-streams\FileStream.cpp	/^	namespace fm$/;"	n	namespace:wrd	file:
fm	.\projects\file-manipulator\file-streams\FileStream.hpp	/^	namespace fm$/;"	n	namespace:wrd
fm	.\projects\file-manipulator\file-structures\File.cpp	/^	namespace fm$/;"	n	namespace:wrd	file:
fm	.\projects\file-manipulator\file-structures\File.hpp	/^	namespace fm$/;"	n	namespace:wrd
fm	.\projects\file-manipulator\file-structures\Folder.cpp	/^	namespace fm$/;"	n	namespace:wrd	file:
fm	.\projects\file-manipulator\file-structures\Folder.hpp	/^	namespace fm$/;"	n	namespace:wrd
fm	.\projects\file-manipulator\file-structures\PathedObject.cpp	/^	namespace fm$/;"	n	namespace:wrd	file:
fm	.\projects\file-manipulator\file-structures\PathedObject.hpp	/^	namespace fm$/;"	n	namespace:wrd
fputts	.\projects\independentor\commons\indep-defs.hpp	59;"	d
fputts	.\projects\independentor\commons\indep-defs.hpp	71;"	d
gen	.\projects\preferencer\parser\generated\PRParser.h	/^    int        gen;$/;"	m	struct:wrd::JJCalls
get	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		virtual Node& get(widx n) { return getIterator(pos).get(); }$/;"	f	class:wrd::Container	file:
get	.\docs\protos\worldfrw\backbone component.cpp	/^	Node& get(const String& name) {$/;"	f	class:Node	file:
get	.\docs\protos\worldfrw\backbone component.cpp	/^	Node& get(widx n) {$/;"	f	class:Node	file:
get	.\docs\protos\worldfrw\backbone component.cpp	/^	const Node& get(const String& name) const {$/;"	f	class:Node	file:
get	.\docs\protos\worldfrw\backbone component.cpp	/^	const Node& get(widx n) const {$/;"	f	class:Node	file:
get	.\docs\protos\worldfrw\binder component.cpp	/^	T& get() {$/;"	f	class:TWeak	file:
get	.\docs\protos\worldfrw\binder component.cpp	/^	const T& get() const { $/;"	f	class:TWeak	file:
get	.\docs\protos\worldfrw\bridge component.cpp	/^    T& get() { return *_bean; }$/;"	f	class:TBlackbox	file:
get	.\docs\protos\worldfrw\bridge component.cpp	/^    T* get() { return *_bean; }$/;"	f	class:TBlackBox	file:
get	.\docs\protos\worldfrw\bridge component.cpp	/^    const T& get() const { return *_bean; }$/;"	f	class:TBlackbox	file:
get	.\docs\protos\worldfrw\bridge component.cpp	/^    const T* get() const { return *_bean; }$/;"	f	class:TBlackBox	file:
get	.\docs\protos\worldfrw\container component.cpp	/^	Node& get(widx n) {$/;"	f	class:Manipulatable	file:
get	.\docs\protos\worldfrw\container component.cpp	/^	const Node& get(widx n) const {$/;"	f	class:Manipulatable	file:
get	.\docs\protos\worldfrw\execution component.cpp	/^	Node& get(const String& name) {$/;"	f	class:Scope::Spaces	file:
get	.\docs\protos\worldfrw\execution component.cpp	/^	Node& get(widx n) {$/;"	f	class:Scope::Spaces	file:
get	.\docs\protos\worldfrw\execution component.cpp	/^	const Node& get(const String& name) const {$/;"	f	class:Scope::Spaces	file:
get	.\docs\protos\worldfrw\execution component.cpp	/^	const Node& get(widx n) const {$/;"	f	class:Scope::Spaces	file:
get	.\docs\protos\worldfrw\metaclass component.cpp	/^	const Class& get(const String& name) { \/\/ visible, this is nearly find().$/;"	f	class:Classer	file:
get	.\docs\protos\worldfrw\passer component.cpp	/^	Node& get() {$/;"	f	class:Refer	file:
get	.\docs\protos\worldfrw\passer component.cpp	/^	const Node& get() const {$/;"	f	class:Refer	file:
get	.\projects\independentor\helpers\BuildFeatures.cpp	/^		THIS::BuildType THIS::Building::get()$/;"	f	class:wrd::indep::THIS::Building
get	.\projects\independentor\helpers\BuildFeatures.cpp	/^		THIS::PlatformType THIS::Platform::get()$/;"	f	class:wrd::indep::THIS::Platform
get	.\projects\world\commons\_TGet.hpp	/^		static T& get() { return **store(); }$/;"	f	class:wrd::_TGet
get	.\projects\world\commons\_TGet.hpp	/^	   static T* get() { return *store(); }$/;"	f	class:wrd::_TGet
get	.\projects\world\memory\Bindable.cpp	/^	Instance& THIS::get() { return _get(); }$/;"	f	class:wrd::THIS
get	.\projects\world\memory\Bindable.cpp	/^	const Instance& THIS::get() const$/;"	f	class:wrd::THIS
get	.\projects\world\memory\Bindable.hpp	/^		template <typename T> T& get() {$/;"	f	class:wrd::Bindable
get	.\projects\world\memory\Bindable.hpp	/^		template <typename T> const T& get() const {$/;"	f	class:wrd::Bindable
get	.\projects\world\memory\Instancer.cpp	/^	const Block& THIS::get(Id id) const$/;"	f	class:wrd::THIS
get	.\projects\world\memory\Instancer.hpp	/^		template <typename T> const T& get(Id id) { return get(id).down<const T>(); }$/;"	f	class:wrd::Instancer
get	.\projects\world\memory\TWeak.hpp	/^	TEMPL T& THIS::get()$/;"	f	class:wrd::THIS
get	.\projects\world\memory\TWeak.hpp	/^	TEMPL const T& THIS::get() const$/;"	f	class:wrd::THIS
getArgs	.\docs\protos\worldfrw\backbone component.cpp	/^	Manipulatable& getArgs() {$/;"	f	class:Msg	file:
getArgs	.\docs\protos\worldfrw\backbone component.cpp	/^	const Manipulatable& getArgs() const {$/;"	f	class:Msg	file:
getBaseDirectory	.\projects\file-manipulator\file-structures\File.cpp	/^		const string& THIS::getBaseDirectory() const$/;"	f	class:wrd::fm::THIS
getBeginColumn	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual int getBeginColumn()   { return getBufcolumn(tokenBegin); }$/;"	f	class:wrd::CharStream
getBeginLine	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual int getBeginLine()     { return getBufline(tokenBegin); }$/;"	f	class:wrd::CharStream
getBindable	.\projects\world\memory\Block.cpp	/^	const Class& THIS::getBindable() const$/;"	f	class:wrd::THIS
getBindable	.\projects\world\memory\TWeak.hpp	/^	TEMPL const Class& THIS::getBindable() const { return T::getClassStatic(); }$/;"	f	class:wrd::THIS
getBlock	.\docs\protos\worldfrw\backbone component.cpp	/^	const InstanceBlock& getBlock() const {$/;"	f	class:Instance	file:
getBlock	.\projects\world\base\Instance.cpp	/^	const Block& THIS::getBlock() const { return _getBlock(_id); }$/;"	f	class:wrd::THIS
getBufcolumn	.\projects\preferencer\parser\generated\CharStream.h	/^  int getBufcolumn(int pos) {$/;"	f	class:wrd::CharStream
getBufline	.\projects\preferencer\parser\generated\CharStream.h	/^  int getBufline(int pos) {$/;"	f	class:wrd::CharStream
getClass	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual const Class& getClass() const {$/;"	f	class:Class	file:
getClass	.\docs\protos\worldfrw\passer component.cpp	/^	virtual const Class& getClass() const { return _class; }$/;"	f	class:MgdObject	file:
getClass	.\projects\preferencer\Preferencer.cpp	/^		const ClassType& THIS::getClass(const std::string& key) const$/;"	f	class:wrd::pref::THIS
getClass	.\projects\world\meta\Class.cpp	/^	const Class& THIS::getClass() const { return *this; }$/;"	f	class:wrd::THIS
getClass	.\projects\world\meta\TClass.hpp	/^	TEMPL const Class& THIS::getClass() const { return *this; }$/;"	f	class:wrd::THIS
getClasses	.\docs\protos\worldfrw\metaclass component.cpp	/^	const Classes& getClasses() { \/\/ visible$/;"	f	class:Classer	file:
getCol	.\docs\protos\worldfrw\interpreting component.cpp	/^		wint getCol() const { return _col; }$/;"	f	class:Origin::Pos	file:
getColumn	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual int getColumn()        { return getBufcolumn(bufpos); }$/;"	f	class:wrd::CharStream
getControl	.\docs\protos\worldfrw\execution component.cpp	/^	Spaces& getControl() { return Super::getControl().down<Spaces>(); }$/;"	f	class:Scope::Spaces	file:
getControl	.\docs\protos\worldfrw\execution component.cpp	/^	const Spaces& getControl() const { return Super::getControl().down<Spaces>(); }$/;"	f	class:Scope::Spaces	file:
getCount	.\docs\protos\worldfrw\execution component.cpp	/^	wcnt getCount() const { return _strong; }$/;"	f	class:InstanceBlock	file:
getCursor	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		wint THIS::getCursor() const $/;"	f	class:wrd::fm::THIS
getDependents	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		const Members& getDependents() const { return _deps; }$/;"	f	class:wrd::Class	file:
getEndColumn	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual int getEndColumn()     { return getBufcolumn(bufpos); }$/;"	f	class:wrd::CharStream
getEndLine	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual int getEndLine()       { return getBufline(bufpos); }$/;"	f	class:wrd::CharStream
getEndOfFile	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		wint THIS::getEndOfFile() const$/;"	f	class:wrd::fm::THIS
getErrorCount	.\projects\preferencer\parser\generated\ErrorHandler.h	/^      virtual int getErrorCount() {$/;"	f	class:wrd::ErrorHandler
getGlobals	.\docs\protos\worldfrw\execution component.cpp	/^		Array& getGlobals() { return get(GLOBAL);$/;"	f	class:Scope::Spaces	file:
getHead	.\docs\protos\worldfrw\container component.cpp	/^	Node& getHead() { return get(0); }$/;"	f	class:Manipulatable	file:
getHead	.\docs\protos\worldfrw\container component.cpp	/^	const Node& getHead() const { return get(0); }$/;"	f	class:Manipulatable	file:
getID	.\docs\protos\worldfrw\backbone component.cpp	/^	ID getID() const { return _id; }$/;"	f	class:Instance	file:
getId	.\projects\world\base\Instance.cpp	/^	Id THIS::getId() const { return _id; }$/;"	f	class:wrd::THIS
getInstance	.\projects\logger\Logger.cpp	/^		THIS& THIS::getInstance()$/;"	f	class:wrd::log::THIS
getInstancer	.\projects\world\world.cpp	/^	Instancer& THIS::getInstancer() { return _instancer; }$/;"	f	class:wrd::THIS
getInstancer	.\projects\world\world.cpp	/^	const Instancer& THIS::getInstancer() const { return _instancer; }$/;"	f	class:wrd::THIS
getIterator	.\docs\protos\worldfrw\container component.cpp	/^	CIterator getIterator(widx n) const { return _getIterator(n); }$/;"	f	class:Manipulatable	file:
getIterator	.\docs\protos\worldfrw\container component.cpp	/^	Iterator getIterator(widx n) { return _getIterator(n); }$/;"	f	class:Manipulatable	file:
getIterator	.\docs\protos\worldfrw\container component.cpp	/^	virtual CIterator getIterator(widx n) const {$/;"	f
getIterator	.\docs\protos\worldfrw\container component.cpp	/^	virtual Iterator getIterator(widx n) {$/;"	f
getItsId	.\projects\world\memory\Bind.cpp	/^	Id THIS::getItsId() const { return _its_id; }$/;"	f	class:wrd::THIS
getKey	.\projects\preferencer\objtree\Type.cpp	/^		const std::string& THIS::getKey() const { return _key; }$/;"	f	class:wrd::pref::THIS
getKind	.\projects\preferencer\parser\PRParserHandler.cpp	/^    const char* THIS::getKind(wint kind) $/;"	f	class:wrd::THIS
getLeafs	.\docs\protos\worldfrw\metaclass component.cpp	/^	const Classes& getLeafs() const {$/;"	f	class:Class	file:
getLeafs	.\projects\world\meta\Class.cpp	/^    const Classes& THIS::getLeafs() const$/;"	f	class:wrd::THIS
getLength	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		wcnt getLength() const { return _length; }$/;"	f	class:wrd::Container	file:
getLength	.\docs\protos\worldfrw\container component.cpp	/^	virtual wcnt getLength() const { return _size; }$/;"	f
getLine	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual int getLine()          { return getBufline(bufpos); }$/;"	f	class:wrd::CharStream
getMe	.\docs\protos\worldfrw\backbone component.cpp	/^	static const Method& getMe() const { return *_me; }$/;"	f	class:Msg	file:
getMember	.\projects\preferencer\objtree\ClassType.cpp	/^		const MemberType& THIS::getMember(const std::string& key) const$/;"	f	class:wrd::pref::THIS
getMembers	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		virtual Container& getMembers() { return _members; }$/;"	f	class:wrd::Object	file:
getMembers	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		virtual Container& getMembers() { return _obj->getMembers(); }$/;"	f	class:wrd::Reference	file:
getMembers	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^        virtual Container& getMembers() {$/;"	f	class:wrd::Node	file:
getMembers	.\docs\protos\worldfrw\backbone component.cpp	/^	virtual const Container& getMembers() const {$/;"	f	class:CompositNode	file:
getMembers	.\docs\protos\worldfrw\execution component.cpp	/^	virtual const Container& getMembers() {$/;"	f	class:Scope::Spaces::Expr	file:
getMembers	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual const Container& getMembers() const { return getStaticMembers(); }$/;"	f	class:TClass	file:
getMessage	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		const String& getMessage() const {$/;"	f	class:wrd::Result	file:
getMessage	.\projects\preferencer\parser\generated\TokenMgrError.cc	/^  JJString TokenMgrError::getMessage() {$/;"	f	class:wrd::TokenMgrError
getMgr	.\projects\world\base\Instance.cpp	/^		Instancer& getMgr() { return World::get().getInstancer(); }$/;"	f	namespace:wrd::__anon5
getMode	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		THIS::Mode THIS::getMode() const { return _mode; }    $/;"	f	class:wrd::fm::THIS
getName	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		virtual const String& getName() const { return _name; }$/;"	f	class:wrd::Class	file:
getName	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		virtual const String& getName() const {$/;"	f	class:wrd::Primitive	file:
getName	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		virtual const String& getName() { return _name; }$/;"	f	class:wrd::NamedVariable	file:
getName	.\docs\protos\worldfrw\backbone component.cpp	/^	String& getName() {$/;"	f	class:Msg	file:
getName	.\docs\protos\worldfrw\backbone component.cpp	/^	const String& getName() const {$/;"	f	class:Msg	file:
getName	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual const String& getName() const {$/;"	f	class:TClass	file:
getName	.\projects\file-manipulator\file-structures\File.cpp	/^		const string& THIS::getName() const { return _name; }$/;"	f	class:wrd::fm::THIS
getName	.\projects\logger\Logger.cpp	/^		const char* THIS::getName() const { return "Logger"; }$/;"	f	class:wrd::log::THIS
getName	.\projects\logger\streams\ConsoleStream.cpp	/^		const char* THIS::getName() const { return "ConsoleStream"; }$/;"	f	class:wrd::log::THIS
getName	.\projects\logger\streams\FileLogStream.cpp	/^		const char* THIS::getName() const { return "FileLogStream"; }$/;"	f	class:wrd::log::THIS
getNameStatic	.\projects\world\meta\TClass.hpp	/^    TEMPL const Str& THIS::getNameStatic()$/;"	f	class:wrd::THIS
getNestedMethods	.\docs\protos\worldfrw\passer component.cpp	/^	const Methods& getNestedMethods() { return _nested_methods; }$/;"	f	class:MgdMethod	file:
getNextToken	.\projects\preferencer\parser\generated\PRParser.cc	/^Token * PRParser::getNextToken(){$/;"	f	class:wrd::PRParser
getNextToken	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^Token * PRParserTokenManager::getNextToken(){$/;"	f	class:wrd::PRParserTokenManager
getNode	.\projects\world\base\Node.cpp	/^	Node& THIS::getNode(const Str& name) { \/*TODO: return _get(false, [&name](Node& e) { return e.getName() == name; });*\/ return nulr<Node>(); }$/;"	f	class:wrd::THIS
getNode	.\projects\world\base\Node.cpp	/^	Node& THIS::getNode(widx n) { return _getNodes()[n]; }$/;"	f	class:wrd::THIS
getNode	.\projects\world\base\Node.cpp	/^	const Node& THIS::getNode(const Str& name) const$/;"	f	class:wrd::THIS
getNode	.\projects\world\base\Node.cpp	/^	const Node& THIS::getNode(widx n) const { return getNodes()[n]; }$/;"	f	class:wrd::THIS
getNodes	.\projects\world\base\Composit.cpp	/^    const Container& THIS::getNodes() const$/;"	f	class:wrd::THIS
getNodes	.\projects\world\memory\Bind.cpp	/^	const Container& THIS::getNodes() const$/;"	f	class:wrd::THIS
getOption	.\projects\file-manipulator\file-structures\Folder.cpp	/^		const THIS::Option& THIS::getOption() const { return _option; }$/;"	f	class:wrd::fm::THIS
getOrigin	.\docs\protos\worldfrw\backbone component.cpp	/^	virtual const Origin& getOrigin() const {$/;"	f	class:Node	file:
getOrigin	.\docs\protos\worldfrw\container component.cpp	/^		const T& getOrigin() const { return static_csat<T&>(Super::getOrigin()); }$/;"	f	class:Container	file:
getOrigin	.\docs\protos\worldfrw\execution component.cpp	/^	virtual const Origin& getOrigin() { return *_origin; }$/;"	f	class:Scope::Spaces::Expr	file:
getOrigin	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual const Origin& getOrigin() const { return *_origin; }$/;"	f	class:MgdClass	file:
getOrigin	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual const Origin& getOrigin() {$/;"	f	class:Class	file:
getOrigin	.\docs\protos\worldfrw\passer component.cpp	/^	virtual const Origin& getOrigin() const { return getClass().getOrigin(); }$/;"	f	class:Object	file:
getOrigin	.\docs\protos\worldfrw\passer component.cpp	/^	virtual const Origin& getOrigin() const {$/;"	f	class:Refer	file:
getOrigin	.\docs\protos\worldfrw\passer component.cpp	/^	virtual const Origin& getOrigin() { return *_origin; }$/;"	f	class:MgdMethod	file:
getOrigin	.\projects\world\memory\Bind.cpp	/^	const Origin& THIS::getOrigin() const$/;"	f	class:wrd::THIS
getOrigin	.\projects\world\msg-usr\Object.cpp	/^	const Origin& THIS::getOrigin() const$/;"	f	class:wrd::THIS
getOwner	.\docs\protos\worldfrw\interpreting component.cpp	/^	Origin& getOwner() { return _owner; }$/;"	f	class:Origin	file:
getOwner	.\docs\protos\worldfrw\interpreting component.cpp	/^	const Origin& getOwner() const { return _owner; }$/;"	f	class:Origin	file:
getParams	.\docs\protos\worldfrw\passer component.cpp	/^	virtual const Classes& getParams() const { $/;"	f	class:Method	file:
getParams	.\docs\protos\worldfrw\passer component.cpp	/^	virtual const Classes& getParams() const {$/;"	f	class:Method	file:
getPath	.\projects\file-manipulator\file-structures\PathedObject.cpp	/^		const string& THIS::getPath() const { return _path; }$/;"	f	class:wrd::fm::THIS
getPath	.\projects\logger\streams\FileLogStream.cpp	/^		const string& THIS::getPath() const { return _file.getPath(); }$/;"	f	class:wrd::log::THIS
getProximity	.\docs\protos\worldfrw\visitation component.cpp	/^    virtual Proximity getProximity(const Thing& trg) const {$/;"	f	class:TVisitation	file:
getRow	.\docs\protos\worldfrw\interpreting component.cpp	/^		wint getRow() const { return _row; }$/;"	f	class:Origin::Pos	file:
getSaveStream	.\docs\protos\worldfrw\visitation component.cpp	/^    BinaryFileStream& getSaveStream() { return _saver; }$/;"	f	class:Saver	file:
getSerial	.\docs\protos\worldfrw\backbone component.cpp	/^	wcnt getSerial() const { $/;"	f	class:Instance	file:
getSerial	.\projects\world\memory\Block.cpp	/^	wbool THIS::getSerial() { return _pt ? _pt->sep.serial : WRD_INDEX_ERROR; }$/;"	f	class:wrd::THIS
getShared	.\projects\world\msg-usr\Object.cpp	/^	Container& THIS::getShared() {	\/* TODO: return *\/ return nulr<Container>(); }$/;"	f	class:wrd::THIS
getShared	.\projects\world\msg-usr\Object.cpp	/^	const Container& THIS::getShared() const { \/* TODO: *\/ return nulr<const Container>(); }$/;"	f	class:wrd::THIS
getSharedHead	.\docs\protos\worldfrw\passer component.cpp	/^	CIterator getSharedHead() const {$/;"	f	class:Object	file:
getSharedHead	.\docs\protos\worldfrw\passer component.cpp	/^	Iterator getSharedHead() {$/;"	f	class:Object	file:
getShares	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		const Members& getShares() const { return _shares; }$/;"	f	class:wrd::Class	file:
getSize	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		wcnt getSize() const { return _size; }$/;"	f	class:wrd::SolidContainer	file:
getSize	.\projects\file-manipulator\file-structures\File.cpp	/^		wubyte THIS::getSize() const { return _getInfo(getPath()).st_size; }$/;"	f	class:wrd::fm::THIS
getStaticMembers	.\docs\protos\worldfrw\metaclass component.cpp	/^	static const Container& getStaticMembers() {$/;"	f	class:TClass	file:
getStaticName	.\docs\protos\worldfrw\metaclass component.cpp	/^	static const String& getStaticName() {$/;"	f	class:TClass	file:
getStaticSubs	.\docs\protos\worldfrw\metaclass component.cpp	/^	static const Classes& getStaticSubs() {$/;"	f	class:TClass	file:
getStaticSupers	.\docs\protos\worldfrw\metaclass component.cpp	/^	static const Classes& getStaticSupers() {$/;"	f	class:TClass	file:
getStream	.\projects\logger\Logger.cpp	/^		Stream& THIS::getStream(const char* message)$/;"	f	class:wrd::log::THIS
getStream	.\projects\logger\Logger.cpp	/^		Stream& THIS::getStream(widx n)$/;"	f	class:wrd::log::THIS
getStream	.\projects\logger\Logger.cpp	/^		const Stream& THIS::getStream(const char* c_message) const$/;"	f	class:wrd::log::THIS
getStream	.\projects\logger\Logger.cpp	/^		const Stream& THIS::getStream(widx n) const$/;"	f	class:wrd::log::THIS
getStreamCount	.\projects\logger\Logger.cpp	/^		wcnt THIS::getStreamCount() const { return _streams.size(); }$/;"	f	class:wrd::log::THIS
getSubs	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual const Classes& getSubs() const {$/;"	f	class:TClass	file:
getSuper	.\docs\protos\worldfrw\metaclass component.cpp	/^	const Class& getSuper() const {$/;"	f	class:Class	file:
getSuper	.\projects\world\base\Thing.cpp	/^	const Class& THIS::getSuper() const { return getClass().getSuper(); }$/;"	f	class:wrd::THIS
getSupers	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual const Classes& getSupers() const {$/;"	f	class:TClass	file:
getTabSize	.\projects\preferencer\parser\generated\CharStream.h	/^   int  getTabSize(int i) { return tabSize; }$/;"	f	class:wrd::CharStream
getTail	.\docs\protos\worldfrw\container component.cpp	/^	Node& getTail() { return get(getLength()-1); }$/;"	f	class:Manipulatable	file:
getTail	.\docs\protos\worldfrw\container component.cpp	/^	const Node& getTail() const { return get(getLength()-1); }$/;"	f	class:Manipulatable	file:
getTests	.\projects\unittests\TestCase.cpp	/^	CLASS::TestCases& CLASS::getTests()$/;"	f	class:wrd::CLASS
getThis	.\docs\protos\worldfrw\backbone component.cpp	/^	static Object& getThis() { return *_thisptr; }$/;"	f	class:Msg	file:
getTime	.\projects\unittests\TestCase.cpp	/^    milliseconds CLASS::getTime()$/;"	f	class:wrd::CLASS
getToken	.\projects\preferencer\parser\generated\PRParser.cc	/^Token * PRParser::getToken(int index){$/;"	f	class:wrd::PRParser
getTrackLineColumn	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual bool getTrackLineColumn()         { return trackLineColumn; }$/;"	f	class:wrd::CharStream
getTrait	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		virtual Class& getTrait() { return TClass<Node>(); }$/;"	f	class:wrd::Container	file:
getTrait	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		virtual Class& getTrait() { return TClass<T>(); }$/;"	f	class:wrd::TContainer	file:
getTrait	.\docs\protos\worldfrw\container component.cpp	/^	virtual const Class& getTrait() const {$/;"	f
getTrait	.\docs\protos\worldfrw\visitation component.cpp	/^    virtual Class& getTrait() const {$/;"	f	class:TVisitation	file:
getValue	.\projects\preferencer\objtree\MemberType.cpp	/^		const std::string& THIS::getValue() const { return _value; }$/;"	f	class:wrd::pref::THIS
getValue	.\projects\preferencer\parser\generated\Token.cc	/^  void * Token::getValue() {$/;"	f	class:wrd::Token
getVariables	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	    Members& getVariables() { return _member.getControl()[1]; }$/;"	f	class:wrd::Object	file:
getVariables	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual const Array& getVariables() const {$/;"	f	class:Class	file:
getVariables	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual const Array& getVariables() const {$/;"	f	class:ObjectedClass	file:
getVariablesHead	.\docs\protos\worldfrw\passer component.cpp	/^	Iterator getVariablesHead() const {$/;"	f	class:Object	file:
getVariablesHead	.\docs\protos\worldfrw\passer component.cpp	/^	Iterator getVariablesHead() {$/;"	f	class:Object	file:
getVars	.\projects\world\meta\Class.cpp	/^	const Array& THIS::getVars() const$/;"	f	class:wrd::THIS
getVars	.\projects\world\msg-usr\Object.cpp	/^	Container& THIS::getVars() {	\/* TODO: return *\/ return nulr<Container>(); }$/;"	f	class:wrd::THIS
getVars	.\projects\world\msg-usr\Object.cpp	/^	const Container& THIS::getVars() const { \/* TODO: *\/ return nulr<const Container>(); }$/;"	f	class:wrd::THIS
getVisitation	.\docs\protos\worldfrw\visitation component.cpp	/^    const Visitation& getVisitation(const Class& cls) const {$/;"	f	class:Visitor	file:
getVisitationBase	.\docs\protos\worldfrw\visitation component.cpp	/^	virtual const Class& getVisitationBase() const {$/;"	f	class:TVisitor	file:
getVisitationBase	.\docs\protos\worldfrw\visitation component.cpp	/^    virtual const Class& getVisitationBase() const {$/;"	f	class:Saver	file:
getVisitor	.\docs\protos\worldfrw\visitation component.cpp	/^    Visitor& getVisitor() const { *_visitor; }$/;"	f	class:Visitation	file:
handleOtherError	.\projects\preferencer\parser\PRParserHandler.cpp	/^    void THIS::handleOtherError(const JJString& message, PRParser *parser) $/;"	f	class:wrd::THIS
handleOtherError	.\projects\preferencer\parser\generated\ErrorHandler.h	/^      virtual void handleOtherError(const JJString& message, PRParser *parser) {$/;"	f	class:wrd::ErrorHandler
handleParseError	.\projects\preferencer\parser\PRParserHandler.cpp	/^    void THIS::handleParseError(Token *last, Token *unexpected, const JJSimpleString& production, PRParser *parser)$/;"	f	class:wrd::THIS
handleParseError	.\projects\preferencer\parser\generated\ErrorHandler.h	/^      virtual void handleParseError(Token *last, Token *unexpected, const JJSimpleString& production, PRParser *parser) {$/;"	f	class:wrd::ErrorHandler
handleUnexpectedToken	.\projects\preferencer\parser\PRParserHandler.cpp	/^    void THIS::handleUnexpectedToken(int expectedKind, const JJString& expectedToken, Token *actual, PRParser *parser)$/;"	f	class:wrd::THIS
handleUnexpectedToken	.\projects\preferencer\parser\generated\ErrorHandler.h	/^      virtual void handleUnexpectedToken(int expectedKind, const JJString& expectedToken, Token *actual, PRParser *parser) {$/;"	f	class:wrd::ErrorHandler
hasError	.\projects\preferencer\parser\generated\PRParser.h	/^  bool          hasError;$/;"	m	class:wrd::PRParser
head	.\projects\preferencer\parser\generated\PRParser.h	/^  Token *head; $/;"	m	class:wrd::PRParser
help	.\build\builder.py	/^def help():$/;"	f
hexChar	.\projects\preferencer\parser\generated\TokenMgrError.cc	/^char hexChar(int i) {$/;"	f	namespace:wrd
idx	.\projects\world\base\Id.hpp	/^		    widx idx:21;$/;"	m	struct:wrd::Id::SeperatedId
image	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^  JJString                  image;$/;"	m	class:wrd::PRParserTokenManager
image	.\projects\preferencer\parser\generated\Token.h	/^  JJString image;$/;"	m	class:wrd::Token
implicit	.\projects\world\base\Node.cpp	/^	CStrong THIS::implicit(const Class& cls) const$/;"	f	class:wrd::THIS
implicit	.\projects\world\base\Node.cpp	/^	Strong THIS::implicit(const Class& cls)$/;"	f	class:wrd::THIS
inBuf	.\projects\preferencer\parser\generated\CharStream.h	/^  int                inBuf;$/;"	m	class:wrd::CharStream
indent	.\projects\preferencer\parser\generated\PRParser.h	/^  int  indent;	\/\/ trace indentation$/;"	m	class:wrd::PRParser
indep	.\projects\independentor\helpers\BuildFeatures.cpp	/^	namespace indep$/;"	n	namespace:wrd	file:
indep	.\projects\independentor\helpers\BuildFeatures.hpp	/^	namespace indep$/;"	n	namespace:wrd
indep	.\projects\independentor\helpers\PlatformAPI.cpp	/^	namespace indep$/;"	n	namespace:wrd	file:
indep	.\projects\independentor\helpers\PlatformAPI.hpp	/^	namespace indep$/;"	n	namespace:wrd
index	.\docs\protos\worldfrw\backbone component.cpp	/^		widx index;$/;"	m	union:Instance::ID	file:
info	.\projects\world\pretypes\Res.cpp	/^	Res& THIS::info(...) { return wasgood; };$/;"	f	class:wrd::THIS
info_arch	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_language_dialect_default	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_platform	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_version	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version_internal	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
info_version_internal	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
init	.\projects\file-manipulator\file-streams\AsciiStream.cpp	/^		wbool THIS::init() $/;"	f	class:wrd::fm::THIS
init	.\projects\file-manipulator\file-streams\BinaryStream.cpp	/^		wbool THIS::init()$/;"	f	class:wrd::fm::THIS
init	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		wbool THIS::init()$/;"	f	class:wrd::fm::THIS
init	.\projects\file-manipulator\file-structures\File.cpp	/^		wbool THIS::init() { return false; }$/;"	f	class:wrd::fm::THIS
init	.\projects\file-manipulator\file-structures\Folder.cpp	/^		wbool THIS::init()$/;"	f	class:wrd::fm::THIS
init	.\projects\logger\Logger.cpp	/^		wbool THIS::init()$/;"	f	class:wrd::log::THIS
init	.\projects\logger\streams\FileLogStream.cpp	/^		wbool THIS::init()$/;"	f	class:wrd::log::THIS
init	.\projects\logger\streams\Stream.cpp	/^		wbool THIS::init()$/;"	f	class:wrd::log::THIS
init	.\projects\world\base\Composit.cpp	/^	Res& THIS::init()$/;"	f	class:wrd::THIS
init	.\projects\world\base\State.cpp	/^	Res& THIS::init()$/;"	f	class:wrd::THIS
init	.\projects\world\meta\Class.cpp	/^    Res& THIS::init()$/;"	f	class:wrd::THIS
initialise	.\projects\preferencer\parser\generated\ParseException.cc	/^  JJString ParseException::initialise(Token currentToken,$/;"	f	class:wrd::ParseException
initialize	.\docs\protos\worldfrw\execution component.cpp	/^	virtual Result& initialize() {$/;"	f	class:Scope::Spaces	file:
initialize	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual Result& initialize() {$/;"	f	class:Class	file:
initialize	.\docs\protos\worldfrw\visitation component.cpp	/^    virtual Result& initialize() {$/;"	f	class:Visitor	file:
inputStream	.\projects\preferencer\parser\generated\CharStream.h	/^  ReaderStream*      inputStream;$/;"	m	class:wrd::CharStream
input_stream	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^  JAVACC_CHARSTREAM*        input_stream;$/;"	m	class:wrd::PRParserTokenManager
insert	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		Result& insert(const Iterator& pos, Ts... args) {$/;"	f	class:wrd::Container	file:
insert	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		Result& insert(widx n, Ts... args) {$/;"	f	class:wrd::Container	file:
insert	.\docs\protos\worldfrw\container component.cpp	/^	Result& insert(widx n, Ts... args) {$/;"	f	class:Containable	file:
instance	.\projects\world\meta\TClass.hpp	/^    TEMPL TStrong<Instance> THIS::instance() const { return TCloner<T>::instance(); }$/;"	f	class:wrd::THIS
instance	.\projects\world\meta\helpers.hpp	/^		static TStrong<Instance> instance() {$/;"	f	class:wrd::TCloner
instantiate	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		TStrong<T> instantiate() const { return instantiate(); }$/;"	f	class:wrd::Class	file:
instantiate	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		virtual Object instantiate() const {$/;"	f	class:wrd::TConcreteClass	file:
instantiate	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		virtual Object instantiate() const {$/;"	f	class:wrd::TInterfaceClass	file:
instantiate	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual TStrong<Instance> instantiate() const {$/;"	f	class:TConcreteClass	file:
instantiate	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual TStrong<Instance> instantiate() const {$/;"	f	class:TInterfaceClass	file:
instatiate	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual TStrong<Instance> instatiate() const {$/;"	f	class:MgdClass	file:
int1	.\docs\protos\WorldLangSyntax.cpp	/^            Integer int1, int2(1) \/\/ int1과 int2, bytes1 모두 레퍼런스다. 그러나 레퍼런스 어떤 객체(immutable인가, 아닌가)에 대한 레퍼런스인가에 따라 동작이 달라진다.$/;"	v
int_expr	.\projects\preferencer\parser\generated\PRParser.cc	/^Token     * PRParser::int_expr() {Token* expr;$/;"	f	class:wrd::PRParser
is	.\projects\world\meta\helpers.hpp	/^            is = sizeof(_foo((T*) 0)) == sizeof(yes)$/;"	e	enum:wrd::TIfSub::__anon6
is	.\projects\world\meta\helpers.hpp	/^        static const bool is = sizeof(_foo( (T) 0 )) == sizeof(yes);$/;"	m	class:wrd::TIfStaticMethod
is	.\projects\world\meta\helpers.hpp	/^        static const wbool is = sizeof(TIfADT<T>::template _foo<T>(0)) == sizeof(yes);$/;"	m	class:wrd::TIfADT
is	.\projects\world\meta\helpers.hpp	/^        static const wbool is = sizeof(_foo((T*)0)) == sizeof(yes);$/;"	m	class:wrd::TIfTemplate
isADT	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual wbool isADT() const { return TADTChecker<T>::IS; }$/;"	f	class:TClass	file:
isBind	.\projects\world\memory\Bind.cpp	/^	wbool THIS::isBind() const { return _getBlock(_its_id).isExist(); }$/;"	f	class:wrd::THIS
isBind	.\projects\world\memory\Block.cpp	/^	wbool THIS::isBind() const { return _pt; }$/;"	f	class:wrd::THIS
isBinded	.\docs\protos\worldfrw\binder component.cpp	/^	wbool isBinded() const {$/;"	f	class:TWeak	file:
isConst	.\docs\protos\worldfrw\backbone component.cpp	/^	virtual wbool isConst() const { return false; }$/;"	f	class:Node	file:
isConst	.\docs\protos\worldfrw\bridge component.cpp	/^	virtual bool isConst() const { return _checker.isConst(); }$/;"	f
isConst	.\docs\protos\worldfrw\bridge component.cpp	/^	virtual bool isConst() const { return true; }$/;"	f	class:TNativeCtor	file:
isConst	.\docs\protos\worldfrw\bridge component.cpp	/^    bool isConst() const { return getTypeValue() & CONST_MEMBER_FUNCTION; }$/;"	f	class:FuncChecker
isConst	.\docs\protos\worldfrw\passer component.cpp	/^	virtual wbool isConst() const { return _is_const; }$/;"	f	class:Refer	file:
isConst	.\docs\protos\worldfrw\passer component.cpp	/^	virtual wbool isConst() const {$/;"	f	class:MgdMethod	file:
isConst	.\projects\world\base\Node.cpp	/^	wbool THIS::isConst() const { return false; }$/;"	f	class:wrd::THIS
isConst	.\projects\world\memory\TWeak.hpp	/^	TEMPL wbool THIS::isConst() const { return false; }$/;"	f	class:wrd::THIS
isConsumable	.\docs\protos\worldfrw\backbone component.cpp	/^	virtual wbool isConsumable(const Msg& msg) const {$/;"	f	class:Node	file:
isConsumable	.\docs\protos\worldfrw\passer component.cpp	/^	virtual wbool isConsumable(const Msg& msg) const {$/;"	f	class:Method	file:
isConsumable	.\docs\protos\worldfrw\passer component.cpp	/^	virtual wbool isConsumable(const Msg& msg) const {$/;"	f	class:Object	file:
isEnable	.\projects\logger\streams\Stream.cpp	/^		wbool THIS::isEnable() const { return _is_enable; }$/;"	f	class:wrd::log::THIS
isEndOfFile	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		wbool THIS::isEndOfFile() const$/;"	f	class:wrd::fm::THIS
isErr	.\projects\world\pretypes\Res.cpp	/^	wbool THIS::isErr() const { return false; }$/;"	f	class:wrd::THIS
isExist	.\docs\protos\worldfrw\bridge component.cpp	/^    bool isExist() const { return getTypeValue(); }$/;"	f	class:FuncChecker
isExist	.\projects\world\base\Thing.cpp	/^	wbool THIS::isExist() const { return this; }$/;"	f	class:wrd::THIS
isFolder	.\projects\file-manipulator\file-structures\File.cpp	/^		wbool THIS::isFolder() const { return _isFolder(_getInfo(getPath())); }$/;"	f	class:wrd::fm::THIS
isHeap	.\docs\protos\worldfrw\backbone component.cpp	/^	wbool isHeap() const {$/;"	f	class:Instance	file:
isHeap	.\projects\world\base\Instance.cpp	/^	wbool THIS::isHeap() const$/;"	f	class:wrd::THIS
isHeap	.\projects\world\memory\Block.cpp	/^	wbool THIS::isHeap() const { \/*TODO: *\/ return false; }$/;"	f	class:wrd::THIS
isInfo	.\projects\world\pretypes\Res.cpp	/^	wbool THIS::isInfo() const { return false; };$/;"	f	class:wrd::THIS
isInit	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual wbool isInit() const { return _is_initialized; }$/;"	f	class:TClass	file:
isInit	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		wbool THIS::isInit() const { return _fd; }$/;"	f	class:wrd::fm::THIS
isInit	.\projects\file-manipulator\file-structures\File.cpp	/^		wbool THIS::isInit() const { return true; }$/;"	f	class:wrd::fm::THIS
isInit	.\projects\file-manipulator\file-structures\Folder.cpp	/^		wbool THIS::isInit() const { return _iterator; }$/;"	f	class:wrd::fm::THIS
isInit	.\projects\logger\Logger.cpp	/^		wbool THIS::isInit() const$/;"	f	class:wrd::log::THIS
isInit	.\projects\logger\streams\Stream.cpp	/^		wbool THIS::isInit() const { return _is_enable; }$/;"	f	class:wrd::log::THIS
isInit	.\projects\world\base\State.cpp	/^	wbool THIS::isInit() { return _is_init; }$/;"	f	class:wrd::THIS
isMember	.\docs\protos\worldfrw\bridge component.cpp	/^    bool isMember() const { return getTypeValue() & MEMBER_FUNCTION; }$/;"	f	class:FuncChecker
isNonMember	.\docs\protos\worldfrw\bridge component.cpp	/^	bool isNonMember() const { return getTypeValue() & NON_MEMBER_FUNCTION; }$/;"	f	class:FuncChecker
isNull	.\projects\file-manipulator\file-structures\PathedObject.cpp	/^		wbool THIS::isNull() const { return ! this; }$/;"	f	class:wrd::fm::THIS
isNull	.\projects\logger\streams\Stream.cpp	/^		wbool THIS::isNull() const { return ! this; }$/;"	f	class:wrd::log::THIS
isNull	.\projects\preferencer\objtree\Object.cpp	/^		wbool THIS::isNull() const { return ! this; }$/;"	f	class:wrd::pref::THIS
isNull	.\projects\world\base\Thing.cpp	/^	wbool THIS::isNull() const { return !this; }$/;"	f	class:wrd::THIS
isOccupiable	.\docs\protos\worldfrw\backbone component.cpp	/^	virtual wbool isOccupiable() const {$/;"	f	class:Node	file:
isOccupiable	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual wbool isOccupiable() const { return isStaticOccupiable(); }$/;"	f	class:TClass	file:
isOccupy	.\projects\world\base\Node.cpp	/^	wbool THIS::isOccupy() const { return getClass().isOccupy(); }$/;"	f	class:wrd::THIS
isReculsive	.\docs\protos\worldfrw\visitation component.cpp	/^	wbool isReculsive() const { return _is_reculsive; }$/;"	f	class:Visitor	file:
isReculsive	.\projects\file-manipulator\file-structures\Folder.cpp	/^		wbool Folder::Option::isReculsive() const { return _is_reculsive; }$/;"	f	class:wrd::fm::Folder::Option
isStatic	.\docs\protos\worldfrw\backbone component.cpp	/^	virtual wbool isStatic() const { return false; }$/;"	f	class:Node	file:
isStatic	.\docs\protos\worldfrw\bridge component.cpp	/^	virtual bool isStatic() const {	return _checker.isNonMember(); }$/;"	f
isStatic	.\docs\protos\worldfrw\bridge component.cpp	/^	virtual bool isStatic() const { return true; }$/;"	f	class:TNativeCtor	file:
isStatic	.\docs\protos\worldfrw\passer component.cpp	/^	virtual bool isStatic() const {$/;"	f	class:MgdMethod	file:
isStatic	.\projects\world\base\Node.cpp	/^	wbool THIS::isStatic() const { return false; }$/;"	f	class:wrd::THIS
isStaticOccupiable	.\docs\protos\worldfrw\metaclass component.cpp	/^	static wbool isStaticOccupiable() {$/;"	f	class:TClass	file:
isSub	.\projects\world\base\Thing.cpp	/^	template <typename T> wbool THIS::isSub() const { return T::getStaticClass().isSuper(getClass()); }$/;"	f	class:wrd::THIS
isSub	.\projects\world\base\Thing.cpp	/^	wbool THIS::isSub(const Class& it) const { return it.isSuper(getClass()); }$/;"	f	class:wrd::THIS
isSub	.\projects\world\base\Thing.cpp	/^	wbool THIS::isSub(const Thing& it) const { return it.getClass().isSuper(getClass()); }$/;"	f	class:wrd::THIS
isSuper	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual wbool isSuper(const Class& it) const {$/;"	f	class:Class	file:
isSuper	.\projects\world\base\Thing.cpp	/^	template <typename T> wbool THIS::isSuper() const { return getClass().isSuper(T::getStaticClass()); }$/;"	f	class:wrd::THIS
isSuper	.\projects\world\base\Thing.cpp	/^	wbool THIS::isSuper(const Class& it) const { return getClass().isSuper(it); }$/;"	f	class:wrd::THIS
isSuper	.\projects\world\base\Thing.cpp	/^	wbool THIS::isSuper(const Thing& it) const { return getClass().isSuper(it.getClass()); }$/;"	f	class:wrd::THIS
isSuper	.\projects\world\meta\Class.cpp	/^    wbool THIS::isSuper(const Class& it) const$/;"	f	class:wrd::THIS
isTemplate	.\docs\protos\worldfrw\metaclass component.cpp	/^	virtual wbool isTemplate() const { return TTemplateChecker<T>::IS; }$/;"	f	class:TClass	file:
isWarn	.\projects\world\pretypes\Res.cpp	/^	wbool THIS::isWarn() const { return false; }$/;"	f	class:wrd::THIS
isWindow	.\build\builder.py	/^def isWindow():$/;"	f
jjAddStates	.\projects\preferencer\parser\generated\PRParserTokenManager.h	48;"	d
jjCheckNAdd	.\projects\preferencer\parser\generated\PRParserTokenManager.h	40;"	d
jjCheckNAddStates	.\projects\preferencer\parser\generated\PRParserTokenManager.h	60;"	d
jjCheckNAddTwoStates	.\projects\preferencer\parser\generated\PRParserTokenManager.h	54;"	d
jjFillToken	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^Token * PRParserTokenManager::jjFillToken(){$/;"	f	class:wrd::PRParserTokenManager
jjMoveNfa_0	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^int PRParserTokenManager::jjMoveNfa_0(int startState, int curPos){$/;"	f	class:wrd::PRParserTokenManager
jjMoveStringLiteralDfa0_0	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^ int  PRParserTokenManager::jjMoveStringLiteralDfa0_0(){$/;"	f	class:wrd::PRParserTokenManager
jjMoveStringLiteralDfa1_0	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^ int  PRParserTokenManager::jjMoveStringLiteralDfa1_0(unsigned long long active0){$/;"	f	class:wrd::PRParserTokenManager
jjMoveStringLiteralDfa2_0	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^ int  PRParserTokenManager::jjMoveStringLiteralDfa2_0(unsigned long long old0, unsigned long long active0){$/;"	f	class:wrd::PRParserTokenManager
jjMoveStringLiteralDfa3_0	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^ int  PRParserTokenManager::jjMoveStringLiteralDfa3_0(unsigned long long old0, unsigned long long active0){$/;"	f	class:wrd::PRParserTokenManager
jjMoveStringLiteralDfa4_0	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^ int  PRParserTokenManager::jjMoveStringLiteralDfa4_0(unsigned long long old0, unsigned long long active0){$/;"	f	class:wrd::PRParserTokenManager
jjMoveStringLiteralDfa5_0	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^ int  PRParserTokenManager::jjMoveStringLiteralDfa5_0(unsigned long long old0, unsigned long long active0){$/;"	f	class:wrd::PRParserTokenManager
jjStartNfaWithStates_0	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^int PRParserTokenManager::jjStartNfaWithStates_0(int pos, int kind, int state){$/;"	f	class:wrd::PRParserTokenManager
jjStartNfa_0	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^int  PRParserTokenManager::jjStartNfa_0(int pos, unsigned long long active0){$/;"	f	class:wrd::PRParserTokenManager
jjStopAtPos	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^ int  PRParserTokenManager::jjStopAtPos(int pos, int kind){$/;"	f	class:wrd::PRParserTokenManager
jjStopStringLiteralDfa_0	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^ int PRParserTokenManager::jjStopStringLiteralDfa_0(int pos, unsigned long long active0){$/;"	f	class:wrd::PRParserTokenManager
jj_2_1	.\projects\preferencer\parser\generated\PRParser.h	/^ inline bool jj_2_1(int xla)$/;"	f	class:wrd::PRParser
jj_2_rtns	.\projects\preferencer\parser\generated\PRParser.h	/^  JJCalls       jj_2_rtns[2];$/;"	m	class:wrd::PRParser
jj_3R_10	.\projects\preferencer\parser\generated\PRParser.h	/^ inline bool jj_3R_10()$/;"	f	class:wrd::PRParser
jj_3R_11	.\projects\preferencer\parser\generated\PRParser.h	/^ inline bool jj_3R_11()$/;"	f	class:wrd::PRParser
jj_3R_12	.\projects\preferencer\parser\generated\PRParser.h	/^ inline bool jj_3R_12()$/;"	f	class:wrd::PRParser
jj_3R_13	.\projects\preferencer\parser\generated\PRParser.h	/^ inline bool jj_3R_13()$/;"	f	class:wrd::PRParser
jj_3R_14	.\projects\preferencer\parser\generated\PRParser.h	/^ inline bool jj_3R_14()$/;"	f	class:wrd::PRParser
jj_3R_4	.\projects\preferencer\parser\generated\PRParser.h	/^ inline bool jj_3R_4()$/;"	f	class:wrd::PRParser
jj_3R_5	.\projects\preferencer\parser\generated\PRParser.h	/^ inline bool jj_3R_5()$/;"	f	class:wrd::PRParser
jj_3R_6	.\projects\preferencer\parser\generated\PRParser.h	/^ inline bool jj_3R_6()$/;"	f	class:wrd::PRParser
jj_3R_7	.\projects\preferencer\parser\generated\PRParser.h	/^ inline bool jj_3R_7()$/;"	f	class:wrd::PRParser
jj_3R_8	.\projects\preferencer\parser\generated\PRParser.h	/^ inline bool jj_3R_8()$/;"	f	class:wrd::PRParser
jj_3R_9	.\projects\preferencer\parser\generated\PRParser.h	/^ inline bool jj_3R_9()$/;"	f	class:wrd::PRParser
jj_3_1	.\projects\preferencer\parser\generated\PRParser.h	/^ inline bool jj_3_1()$/;"	f	class:wrd::PRParser
jj_add_error_token	.\projects\preferencer\parser\generated\PRParser.cc	/^  void PRParser::jj_add_error_token(int kind, int pos)  {$/;"	f	class:wrd::PRParser
jj_consume_token	.\projects\preferencer\parser\generated\PRParser.cc	/^Token * PRParser::jj_consume_token(int kind)  {$/;"	f	class:wrd::PRParser
jj_done	.\projects\preferencer\parser\generated\PRParser.h	/^  bool jj_done;$/;"	m	class:wrd::PRParser
jj_expentries	.\projects\preferencer\parser\generated\PRParser.h	/^  int **jj_expentries;$/;"	m	class:wrd::PRParser
jj_expentry	.\projects\preferencer\parser\generated\PRParser.h	/^  int *jj_expentry;$/;"	m	class:wrd::PRParser
jj_gc	.\projects\preferencer\parser\generated\PRParser.h	/^  int           jj_gc;$/;"	m	class:wrd::PRParser
jj_gen	.\projects\preferencer\parser\generated\PRParser.h	/^  int           jj_gen;$/;"	m	class:wrd::PRParser
jj_input_stream	.\projects\preferencer\parser\generated\PRParser.h	/^  CharStream   *jj_input_stream = nullptr;$/;"	m	class:wrd::PRParser
jj_kind	.\projects\preferencer\parser\generated\PRParser.h	/^  int jj_kind;$/;"	m	class:wrd::PRParser
jj_la	.\projects\preferencer\parser\generated\PRParser.h	/^  int           jj_la;$/;"	m	class:wrd::PRParser
jj_la1	.\projects\preferencer\parser\generated\PRParser.h	/^  int           jj_la1[8];$/;"	m	class:wrd::PRParser
jj_la1_0	.\projects\preferencer\parser\generated\PRParser.cc	/^  unsigned int jj_la1_0[] = {$/;"	m	namespace:wrd	file:
jj_lastpos	.\projects\preferencer\parser\generated\PRParser.h	/^  Token        *jj_scanpos, *jj_lastpos;$/;"	m	class:wrd::PRParser
jj_lookingAhead	.\projects\preferencer\parser\generated\PRParser.h	/^  bool          jj_lookingAhead;$/;"	m	class:wrd::PRParser
jj_nt	.\projects\preferencer\parser\generated\PRParser.h	/^  Token        *jj_nt = nullptr;$/;"	m	class:wrd::PRParser
jj_ntk	.\projects\preferencer\parser\generated\PRParser.h	/^  int           jj_ntk;$/;"	m	class:wrd::PRParser
jj_ntk_f	.\projects\preferencer\parser\generated\PRParser.cc	/^int PRParser::jj_ntk_f(){$/;"	f	class:wrd::PRParser
jj_rescan	.\projects\preferencer\parser\generated\PRParser.h	/^  bool          jj_rescan;$/;"	m	class:wrd::PRParser
jj_rescan_token	.\projects\preferencer\parser\generated\PRParser.cc	/^  void PRParser::jj_rescan_token(){$/;"	f	class:wrd::PRParser
jj_save	.\projects\preferencer\parser\generated\PRParser.cc	/^  void PRParser::jj_save(int index, int xla){$/;"	f	class:wrd::PRParser
jj_scan_token	.\projects\preferencer\parser\generated\PRParser.cc	/^bool  PRParser::jj_scan_token(int kind){$/;"	f	class:wrd::PRParser
jj_scanpos	.\projects\preferencer\parser\generated\PRParser.h	/^  Token        *jj_scanpos, *jj_lastpos;$/;"	m	class:wrd::PRParser
jj_semLA	.\projects\preferencer\parser\generated\PRParser.h	/^  bool          jj_semLA;$/;"	m	class:wrd::PRParser
jjimage	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^  JJString                  jjimage;$/;"	m	class:wrd::PRParserTokenManager
jjimageLen	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^  int                       jjimageLen;$/;"	m	class:wrd::PRParserTokenManager
jjmatchedKind	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^    int jjmatchedKind;$/;"	m	class:wrd::PRParserTokenManager
jjmatchedPos	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^    int jjmatchedPos;$/;"	m	class:wrd::PRParserTokenManager
jjnewStateCnt	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^    int jjnewStateCnt;$/;"	m	class:wrd::PRParserTokenManager
jjnextStates	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static const int jjnextStates[] = {$/;"	m	namespace:wrd	file:
jjround	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^    int jjround;$/;"	m	class:wrd::PRParserTokenManager
jjrounds	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^  int                       jjrounds[25];$/;"	m	class:wrd::PRParserTokenManager
jjstateSet	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^  int                       jjstateSet[2 * 25];$/;"	m	class:wrd::PRParserTokenManager
jjstrLiteralChars_0	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_0[] = {0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_1	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_1[] = {0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_10	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_10[] = {0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_11	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_11[] = {0x69, 0x6e, 0x74, 0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_12	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_12[] = {0x62, 0x6f, 0x6f, 0x6c, 0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_13	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_13[] = {0x66, 0x6c, 0x6f, 0x61, 0x74, 0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_14	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_14[] = {0x63, 0x68, 0x61, 0x72, 0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_15	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_15[] = {0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_16	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_16[] = {0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_17	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_17[] = {0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_18	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_18[] = {0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_19	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_19[] = {0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_2	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_2[] = {0x22, 0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_20	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_20[] = {0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_21	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_21[] = {0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_3	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_3[] = {0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_4	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_4[] = {0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_5	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_5[] = {0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_6	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_6[] = {0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_7	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_7[] = {0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_8	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_8[] = {0x63, 0x6c, 0x61, 0x73, 0x73, 0};$/;"	m	namespace:wrd	file:
jjstrLiteralChars_9	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static JJChar jjstrLiteralChars_9[] = {0x3d, 0};$/;"	m	namespace:wrd	file:
jjstrLiteralImages	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static const JJString jjstrLiteralImages[] = {$/;"	m	namespace:wrd	file:
jjtoSkip	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static const unsigned long long jjtoSkip[] = {$/;"	m	namespace:wrd	file:
jjtoSpecial	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static const unsigned long long jjtoSpecial[] = {$/;"	m	namespace:wrd	file:
jjtoToken	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static const unsigned long long jjtoToken[] = {$/;"	m	namespace:wrd	file:
kind	.\projects\preferencer\parser\generated\Token.h	/^  int kind;$/;"	m	class:wrd::Token
klass	.\projects\preferencer\parser\generated\PRParser.cc	/^void PRParser::klass() {$/;"	f	class:wrd::PRParser
lengthOfMatch	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^  int                       lengthOfMatch;$/;"	m	class:wrd::PRParserTokenManager
lexStateNames	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static const JJString lexStateNames[] = {$/;"	m	namespace:wrd	file:
lexStateNames_arr_0	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^static const JJChar lexStateNames_arr_0[] = $/;"	m	namespace:wrd	file:
lexicalError	.\projects\preferencer\parser\generated\ErrorHandler.h	/^       virtual void lexicalError(bool EOFSeen, int lexState, int errorLine, int errorColumn, const JJString& errorAfter, JJChar curChar, PRParserTokenManager* token_manager) {$/;"	f	class:wrd::TokenManagerErrorHandler
lexicalError	.\projects\preferencer\parser\generated\ErrorHandler.h	/^       virtual void lexicalError(const JJString& errorMessage, PRParserTokenManager* token_manager) {$/;"	f	class:wrd::TokenManagerErrorHandler
lexicalError	.\projects\preferencer\parser\generated\TokenManager.h	/^  virtual void   lexicalError() {$/;"	f	class:wrd::TokenManager
line	.\projects\preferencer\parser\generated\CharStream.h	/^  int                line;$/;"	m	class:wrd::CharStream
log	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		void log() { store(LogManager::get()); }$/;"	f	class:wrd::Result	file:
log	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		void log(const String& fmt, ...) {$/;"	f	class:wrd::Result	file:
log	.\projects\logger\Logger.cpp	/^	namespace log$/;"	n	namespace:wrd	file:
log	.\projects\logger\Logger.hpp	/^	namespace log$/;"	n	namespace:wrd
log	.\projects\logger\streams\ConsoleStream.cpp	/^	namespace log$/;"	n	namespace:wrd	file:
log	.\projects\logger\streams\ConsoleStream.hpp	/^	namespace log$/;"	n	namespace:wrd
log	.\projects\logger\streams\FileLogStream.cpp	/^	namespace log$/;"	n	namespace:wrd	file:
log	.\projects\logger\streams\FileLogStream.hpp	/^	namespace log$/;"	n	namespace:wrd
log	.\projects\logger\streams\Stream.cpp	/^	namespace log$/;"	n	namespace:wrd	file:
log	.\projects\logger\streams\Stream.hpp	/^	namespace log$/;"	n	namespace:wrd
main	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	/^void main() {}$/;"	f
main	.\build\CMakeFiles\feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	.\build\CMakeFiles\feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	.\build\builder.py	/^def main():$/;"	f
main	.\projects\unittests\main.cpp	/^int main()$/;"	f
main	.\projects\world\world.cpp	/^	int main()$/;"	f	namespace:wrd
maxNextCharInd	.\projects\preferencer\parser\generated\CharStream.h	/^  int                maxNextCharInd;$/;"	m	class:wrd::CharStream
max_	.\projects\preferencer\parser\generated\CharStream.cc	/^  size_t max_;$/;"	m	class:__anon4::StringReaderStream	file:
message	.\projects\preferencer\parser\generated\TokenMgrError.h	/^   JJString message;$/;"	m	class:wrd::TokenMgrError
new	.\projects\independentor\macros\MemoryLeak.hpp	17;"	d
newToken	.\projects\preferencer\parser\generated\Token.cc	/^  Token *Token::newToken(int ofKind)$/;"	f	class:wrd::Token
newToken	.\projects\preferencer\parser\generated\Token.cc	/^  Token *Token::newToken(int ofKind, const JJString& image)$/;"	f	class:wrd::Token
next	.\projects\file-manipulator\file-structures\File.cpp	/^		const File& THIS::next() { return *this; }$/;"	f	class:wrd::fm::THIS
next	.\projects\file-manipulator\file-structures\Folder.cpp	/^		const File& THIS::next()$/;"	f	class:wrd::fm::THIS
next	.\projects\preferencer\parser\generated\PRParser.h	/^    JJCalls*   next;$/;"	m	struct:wrd::JJCalls
next	.\projects\preferencer\parser\generated\Token.h	/^  Token *next;$/;"	m	class:wrd::Token
no	.\docs\protos\worldfrw\helper component.cpp	/^	typedef char no;$/;"	t	class:Checker	file:
no	.\projects\world\meta\helpers.hpp	/^        typedef char no;$/;"	t	class:wrd::MetaIf
noncon	.\docs\protos\worldfrw\passer component.cpp	/^	TRefer<A> noncon = ref;$/;"	v
null	.\docs\protos\worldfrw\helper component.cpp	/^	static T null() { return T(); }$/;"	f	class:TNuller
null	.\docs\protos\worldfrw\helper component.cpp	/^	static T& null() { T* null = 0; return *null; }$/;"	f	class:TNuller
null	.\projects\preferencer\parser\generated\JavaCC.h	42;"	d
nulr	.\projects\independentor\helpers\Nulr.hpp	/^	T& nulr()$/;"	f	namespace:wrd
num	.\projects\world\base\Id.hpp	/^		wint64 num;$/;"	m	union:wrd::Id
number	.\docs\protos\worldfrw\backbone component.cpp	/^		wint64 number;$/;"	m	union:Instance::ID	file:
onAddClass	.\projects\preferencer\Preferencer.cpp	/^		wbool THIS::onAddClass(const std::string& name)$/;"	f	class:wrd::pref::THIS
onAddMember	.\projects\preferencer\Preferencer.cpp	/^		wbool THIS::onAddMember(const std::string& class_name, const std::string& key, const std::string& value)$/;"	f	class:wrd::pref::THIS
operator !=	.\docs\protos\worldfrw\binder component.cpp	/^	wbool operator!=(const This& rhs) const {$/;"	f	class:TWeak	file:
operator !=	.\docs\protos\worldfrw\metaclass component.cpp	/^	wbool operator!=(const This& rhs) const {$/;"	f	class:Class	file:
operator !=	.\projects\world\base\Node.cpp	/^	wbool THIS::operator!=(const This& rhs) { return ! operator==(rhs); }$/;"	f	class:wrd::THIS
operator !=	.\projects\world\memory\Bind.cpp	/^	wbool THIS::operator!=(const This& rhs) const { return ! operator==(rhs); }$/;"	f	class:wrd::THIS
operator !=	.\projects\world\meta\Class.cpp	/^    wbool THIS::operator!=(const This& rhs) const { return &getName() != &rhs.getName(); }$/;"	f	class:wrd::THIS
operator ()	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		This& operator()() { dump(); return *this; }$/;"	f	class:wrd::Result	file:
operator *	.\docs\protos\worldfrw\binder component.cpp	/^	T* operator*() { return &get(); }$/;"	f	class:TWeak	file:
operator *	.\docs\protos\worldfrw\binder component.cpp	/^	const T* operator*() const { return &get(); }$/;"	f	class:TWeak	file:
operator *	.\projects\world\memory\Bindable.cpp	/^	Instance& THIS::operator*() { return get(); }$/;"	f	class:wrd::THIS
operator *	.\projects\world\memory\Bindable.cpp	/^	const Instance& THIS::operator*() const { return get(); }$/;"	f	class:wrd::THIS
operator *	.\projects\world\memory\TWeak.hpp	/^	TEMPL T& THIS::operator*() { return this->get(); }$/;"	f	class:wrd::THIS
operator *	.\projects\world\memory\TWeak.hpp	/^	TEMPL const T& THIS::operator*() const { return this->get(); }$/;"	f	class:wrd::THIS
operator +=	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		THIS& THIS::operator+=(wint delta)$/;"	f	class:wrd::fm::THIS
operator -=	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		THIS& THIS::operator-=(wint delta)$/;"	f	class:wrd::fm::THIS
operator ->	.\docs\protos\worldfrw\binder component.cpp	/^	T* operator->() { return &get(); }$/;"	f	class:TWeak	file:
operator ->	.\docs\protos\worldfrw\binder component.cpp	/^	const T* operator->() const { return &get(); }$/;"	f	class:TWeak	file:
operator ->	.\projects\world\memory\Bindable.cpp	/^	Instance* THIS::operator->() { return &get(); }$/;"	f	class:wrd::THIS
operator ->	.\projects\world\memory\Bindable.cpp	/^	const Instance* THIS::operator->() const { return &get(); }$/;"	f	class:wrd::THIS
operator ->	.\projects\world\memory\TWeak.hpp	/^	TEMPL T* THIS::operator->() { return &this->get(); }$/;"	f	class:wrd::THIS
operator ->	.\projects\world\memory\TWeak.hpp	/^	TEMPL const T* THIS::operator->() const { return &this->get(); }$/;"	f	class:wrd::THIS
operator <<	.\docs\protos\worldfrw\visitation component.cpp	/^	This& operator<<(Thing& it) {$/;"	f	class:Visitor	file:
operator =	.\docs\protos\worldfrw\binder component.cpp	/^	This& operator=(T& newone) {$/;"	f	class:TWeak	file:
operator =	.\docs\protos\worldfrw\binder component.cpp	/^	This& operator=(const This& rhs) {$/;"	f	class:TWeak	file:
operator =	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		THIS& THIS::operator=(wint new_position)$/;"	f	class:wrd::fm::THIS
operator =	.\projects\file-manipulator\file-structures\File.cpp	/^		File& THIS::operator=(const File& rhs) { return *this; }$/;"	f	class:wrd::fm::THIS
operator =	.\projects\file-manipulator\file-structures\Folder.cpp	/^		Folder& THIS::operator=(const Folder& rhs) { return *this; }$/;"	f	class:wrd::fm::THIS
operator =	.\projects\file-manipulator\file-structures\PathedObject.cpp	/^		THIS& THIS::operator=(const This& rhs) { return *this; }    $/;"	f	class:wrd::fm::THIS
operator =	.\projects\world\memory\Bind.cpp	/^	THIS& THIS::operator=(const This& rhs)$/;"	f	class:wrd::THIS
operator =	.\projects\world\memory\TStrong.hpp	/^	TEMPL THIS& THIS::operator=(const TStrong<T>& rhs)$/;"	f	class:wrd::THIS
operator =	.\projects\world\memory\TStrong.hpp	/^	TEMPL THIS& THIS::operator=(const This& rhs)$/;"	f	class:wrd::THIS
operator =	.\projects\world\memory\TWeak.hpp	/^	TEMPL THIS& THIS::operator=(const TWeak<T>& rhs)$/;"	f	class:wrd::THIS
operator =	.\projects\world\memory\TWeak.hpp	/^	TEMPL THIS& THIS::operator=(const This& rhs)$/;"	f	class:wrd::THIS
operator ==	.\docs\protos\worldfrw\binder component.cpp	/^	wbool operator==(const This& rhs) const { $/;"	f	class:TWeak	file:
operator ==	.\docs\protos\worldfrw\metaclass component.cpp	/^	wbool operator==(const This& rhs) const {$/;"	f	class:Class	file:
operator ==	.\projects\world\base\Node.cpp	/^	wbool THIS::operator==(const This& rhs) { \/*TODO:*\/ return false; }$/;"	f	class:wrd::THIS
operator ==	.\projects\world\memory\Bind.cpp	/^	wbool THIS::operator==(const This& rhs) const { return &get() == &rhs.get(); }$/;"	f	class:wrd::THIS
operator ==	.\projects\world\meta\Class.cpp	/^    wbool THIS::operator==(const This& rhs) const { return &getName() == &rhs.getName(); }$/;"	f	class:wrd::THIS
operator []	.\docs\protos\worldfrw\backbone component.cpp	/^	Node& operator[](widx n) { return get(n); }$/;"	f	class:Node	file:
operator []	.\docs\protos\worldfrw\backbone component.cpp	/^	const Node& operator[](widx n) const { return get(n); }$/;"	f	class:Node	file:
operator []	.\docs\protos\worldfrw\execution component.cpp	/^	Node& operator[](const String& name) { return get(name); }$/;"	f	class:Scope::Spaces	file:
operator []	.\docs\protos\worldfrw\execution component.cpp	/^	Node& operator[](widx n) { return get(n);$/;"	f	class:Scope::Spaces	file:
operator []	.\docs\protos\worldfrw\execution component.cpp	/^	const Node& operator[](const String& name) { return get(name); }$/;"	f	class:Scope::Spaces	file:
operator []	.\projects\logger\Logger.cpp	/^		Stream& THIS::operator[](const char* message) { return getStream(message); }$/;"	f	class:wrd::log::THIS
operator []	.\projects\logger\Logger.cpp	/^		Stream& THIS::operator[](widx n) { return getStream(n); }$/;"	f	class:wrd::log::THIS
operator []	.\projects\logger\Logger.cpp	/^		const Stream& THIS::operator[](const char* message) const { return getStream(message); }$/;"	f	class:wrd::log::THIS
operator []	.\projects\logger\Logger.cpp	/^		const Stream& THIS::operator[](widx n) const { return getStream(n); }$/;"	f	class:wrd::log::THIS
operator []	.\projects\preferencer\Preferencer.cpp	/^		const ClassType& THIS::operator[](const std::string& key) const { return getClass(key); }$/;"	f	class:wrd::pref::THIS
operator []	.\projects\preferencer\objtree\ClassType.cpp	/^		const MemberType& THIS::operator[](const std::string& key) const { return getMember(key); }$/;"	f	class:wrd::pref::THIS
operator []	.\projects\world\base\Node.cpp	/^	Node& THIS::operator[](widx n) { return getNode(n); }$/;"	f	class:wrd::THIS
operator []	.\projects\world\base\Node.cpp	/^	const Node& THIS::operator[](widx n) const { return getNode(n); }$/;"	f	class:wrd::THIS
operator []	.\projects\world\memory\Instancer.cpp	/^	const Block& THIS::operator[](Id id) const { return get(id); }$/;"	f	class:wrd::THIS
operator wbool	.\docs\protos\worldfrw\binder component.cpp	/^	operator wbool() const { return isBinded(); }$/;"	f	class:TWeak	file:
operator wbool	.\projects\world\memory\Bindable.cpp	/^	THIS::operator wbool() const { return isBind(); }$/;"	f	class:wrd::THIS
operator wbool	.\projects\world\pretypes\Res.cpp	/^	THIS::operator wbool() const { return isErr(); }$/;"	f	class:wrd::THIS
os	.\build\builder.py	/^import os$/;"	i
os	.\build\take_files_out.py	/^import os$/;"	i
out1	.\docs\protos\worldfrw\passer component.cpp	/^	A& out1 = con3.get(); \/\/ err. con3.get() returns type of const A&$/;"	v
out2	.\docs\protos\worldfrw\passer component.cpp	/^	const A& out2 = con3.get(); \/\/ ok, however...$/;"	v
out3	.\docs\protos\worldfrw\passer component.cpp	/^	const A& out3 = con4.get(); \/\/ ok. con4 has get() nonconst method, but get() const method is only accessable.$/;"	v
parse	.\projects\preferencer\Preferencer.cpp	/^		wbool THIS::parse(const fm::File& file)$/;"	f	class:wrd::pref::THIS
parse	.\projects\preferencer\Preferencer.cpp	/^		wbool THIS::parse(const std::string& contents)$/;"	f	class:wrd::pref::THIS
parseError	.\projects\preferencer\parser\generated\PRParser.cc	/^ void  PRParser::parseError()   {$/;"	f	class:wrd::PRParser
pause	.\build\take_files_out.py	/^pause = input()/;"	v
peek	.\projects\file-manipulator\file-structures\File.cpp	/^		const File& THIS::peek() const { return *this; }$/;"	f	class:wrd::fm::THIS
peek	.\projects\file-manipulator\file-structures\Folder.cpp	/^		const File& THIS::peek() const { return _sub_file ? _sub_file->peek() : *this; }$/;"	f	class:wrd::fm::THIS
place_to	.\build\take_files_out.py	/^place_to = "\\\\".join(splited)$/;"	v
platform	.\build\builder.py	/^import platform$/;"	i
pref	.\projects\preferencer\Preferencer.cpp	/^	namespace pref$/;"	n	namespace:wrd	file:
pref	.\projects\preferencer\Preferencer.hpp	/^	namespace pref$/;"	n	namespace:wrd
pref	.\projects\preferencer\commons\pref-types.hpp	/^	namespace pref$/;"	n	namespace:wrd
pref	.\projects\preferencer\objtree\ClassType.cpp	/^	namespace pref$/;"	n	namespace:wrd	file:
pref	.\projects\preferencer\objtree\ClassType.hpp	/^	namespace pref$/;"	n	namespace:wrd
pref	.\projects\preferencer\objtree\MemberType.cpp	/^	namespace pref$/;"	n	namespace:wrd	file:
pref	.\projects\preferencer\objtree\MemberType.hpp	/^	namespace pref$/;"	n	namespace:wrd
pref	.\projects\preferencer\objtree\Object.cpp	/^	namespace pref$/;"	n	namespace:wrd	file:
pref	.\projects\preferencer\objtree\Object.hpp	/^	namespace pref$/;"	n	namespace:wrd
pref	.\projects\preferencer\objtree\Type.cpp	/^	namespace pref$/;"	n	namespace:wrd	file:
pref	.\projects\preferencer\objtree\Type.hpp	/^	namespace pref$/;"	n	namespace:wrd
prevCharIsCR	.\projects\preferencer\parser\generated\CharStream.h	/^  bool               prevCharIsCR;$/;"	m	class:wrd::CharStream
prevCharIsLF	.\projects\preferencer\parser\generated\CharStream.h	/^  bool               prevCharIsLF;$/;"	m	class:wrd::CharStream
printResult	.\projects\unittests\TestCase.cpp	/^    void CLASS::printResult(bool is_failed, string name, string msg, milliseconds process_time)$/;"	f	class:wrd::CLASS
push	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		widx push(Ts... args) {$/;"	f	class:wrd::Container	file:
push	.\docs\protos\worldfrw\container component.cpp	/^	widx push(Ts... args) {$/;"	f	class:Containable	file:
push	.\projects\preferencer\objtree\ClassType.cpp	/^		wbool THIS::push(const MemberType& member)$/;"	f	class:wrd::pref::THIS
pushStream	.\projects\logger\Logger.cpp	/^		wbool THIS::pushStream(Stream* new_stream)$/;"	f	class:wrd::log::THIS
qnxnto	.\build\CMakeFiles\3.10.2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
ra	.\docs\protos\worldfrw\backbone component.cpp	/^		Refer ra = a.to(TClass<AChild>());$/;"	v
read	.\projects\file-manipulator\file-streams\AsciiStream.cpp	/^		wcnt THIS::read(void* target, wcnt bytes)$/;"	f	class:wrd::fm::THIS
read	.\projects\file-manipulator\file-streams\BinaryStream.cpp	/^		std::string THIS::read(wcnt bytes)$/;"	f	class:wrd::fm::THIS
read	.\projects\file-manipulator\file-streams\BinaryStream.cpp	/^		wcnt THIS::read(void* target, wcnt bytes)$/;"	f	class:wrd::fm::THIS
read	.\projects\file-manipulator\file-streams\BinaryStream.hpp	/^			T read()$/;"	f	class:wrd::fm::BinaryStream
read	.\projects\preferencer\parser\generated\CharStream.cc	/^  virtual size_t read(JJChar *bufptr, int offset, size_t len) {$/;"	f	class:__anon4::StringReaderStream
read	.\projects\preferencer\parser\generated\JavaCC.h	/^  virtual size_t read(JAVACC_CHAR_TYPE *buffer, int offset, size_t len) { return 0; }$/;"	f	class:ReaderStream
readChar	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual inline JJChar readChar() {$/;"	f	class:wrd::CharStream
readLine	.\projects\file-manipulator\file-streams\AsciiStream.cpp	/^		string THIS::readLine() { return readToken("\\n"); }$/;"	f	class:wrd::fm::THIS
readToken	.\projects\file-manipulator\file-streams\AsciiStream.cpp	/^		string THIS::readToken(const string& delimeter)$/;"	f	class:wrd::fm::THIS
readWhole	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		std::string THIS::readWhole()$/;"	f	class:wrd::fm::THIS
ref	.\docs\protos\worldfrw\passer component.cpp	/^	Refer ref = ....; \/\/ const A였을때,$/;"	v
release	.\docs\protos\worldfrw\binder component.cpp	/^	virtual Result& release() {$/;"	f	class:TWeak	file:
release	.\projects\file-manipulator\file-streams\AsciiStream.cpp	/^		wbool THIS::release()$/;"	f	class:wrd::fm::THIS
release	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		wbool THIS::release()$/;"	f	class:wrd::fm::THIS
release	.\projects\file-manipulator\file-structures\File.cpp	/^		wbool THIS::release()$/;"	f	class:wrd::fm::THIS
release	.\projects\file-manipulator\file-structures\Folder.cpp	/^		wbool THIS::release()$/;"	f	class:wrd::fm::THIS
release	.\projects\file-manipulator\file-structures\PathedObject.cpp	/^		wbool THIS::release() { _path.clear(); return false; }$/;"	f	class:wrd::fm::THIS
release	.\projects\logger\Logger.cpp	/^		wbool THIS::release()$/;"	f	class:wrd::log::THIS
release	.\projects\logger\streams\FileLogStream.cpp	/^		wbool THIS::release()$/;"	f	class:wrd::log::THIS
release	.\projects\logger\streams\Stream.cpp	/^		wbool THIS::release()$/;"	f	class:wrd::log::THIS
release	.\projects\preferencer\Preferencer.cpp	/^		wbool THIS::release()$/;"	f	class:wrd::pref::THIS
release	.\projects\preferencer\objtree\ClassType.cpp	/^		wbool THIS::release()$/;"	f	class:wrd::pref::THIS
release	.\projects\preferencer\objtree\MemberType.cpp	/^		wbool THIS::release()$/;"	f	class:wrd::pref::THIS
release	.\projects\preferencer\objtree\Type.cpp	/^		wbool THIS::release()$/;"	f	class:wrd::pref::THIS
release	.\projects\world\base\Composit.cpp	/^	Res& THIS::release()$/;"	f	class:wrd::THIS
release	.\projects\world\base\State.cpp	/^	Res& THIS::release()$/;"	f	class:wrd::THIS
release	.\projects\world\compiler\Origin.cpp	/^	Res& THIS::release()$/;"	f	class:wrd::THIS
remove	.\docs\protos\worldfrw\container component.cpp	/^	Result& remove(const Iterator& pos, Ts... args) {$/;"	f	class:Containable	file:
remove	.\docs\protos\worldfrw\container component.cpp	/^	Result& remove(widx n, Ts... args) {$/;"	f	class:Containable	file:
remove	.\projects\file-manipulator\file-structures\File.cpp	/^		wbool THIS::remove()$/;"	f	class:wrd::fm::THIS
returns	.\docs\protos\worldfrw\pretype component.cpp	/^	T returns() {$/;"	f	class:Result	file:
returns	.\docs\protos\worldfrw\pretype component.cpp	/^	T returns(T value) {$/;"	f	class:Result	file:
run	.\build\builder.py	/^def run(arg):$/;"	f
run	.\docs\protos\worldfrw\passer component.cpp	/^	virtual Refer run(Msg& msg) const {$/;"	f	class:Closure	file:
run	.\docs\protos\worldfrw\passer component.cpp	/^	virtual Refer run(Msg& msg) const {$/;"	f	class:Method	file:
sep	.\projects\world\base\Id.hpp	/^		} sep;$/;"	m	union:wrd::Id	typeref:struct:wrd::Id::SeperatedId
serial	.\projects\world\base\Id.hpp	/^			wcnt serial:21;$/;"	m	struct:wrd::Id::SeperatedId
set	.\projects\world\commons\_TGet.hpp	/^		static T& set(T& expr) { return *store() = &expr, get(); }$/;"	f	class:wrd::_TGet
set	.\projects\world\commons\_TGet.hpp	/^	   static T* set(T* trg) { return *store() = trg; }$/;"	f	class:wrd::_TGet
setCursor	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		wbool THIS::setCursor(wint new_position)$/;"	f	class:wrd::fm::THIS
setDebugStream	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^  void  PRParserTokenManager::setDebugStream(FILE *ds){ debugStream = ds; }$/;"	f	class:wrd::PRParserTokenManager
setEnable	.\projects\logger\streams\Stream.cpp	/^		void THIS::setEnable(wbool is_enable) { _is_enable = is_enable; }$/;"	f	class:wrd::log::THIS
setErrorHandler	.\projects\preferencer\parser\generated\PRParser.h	/^  void setErrorHandler(ErrorHandler *eh) {$/;"	f	class:wrd::PRParser
setErrorHandler	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^  void setErrorHandler(TokenManagerErrorHandler *eh) {$/;"	f	class:wrd::PRParserTokenManager
setMode	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		wbool THIS::setMode(Mode new_mode)$/;"	f	class:wrd::fm::THIS
setParser	.\projects\preferencer\parser\generated\TokenManager.h	/^  virtual void   setParser(void* parser) {};$/;"	f	class:wrd::TokenManager
setPath	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		wbool THIS::setPath(const Super& path)$/;"	f	class:wrd::fm::THIS
setPath	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		wbool THIS::setPath(const std::string& new_path) { return _setPath(new_path); }$/;"	f	class:wrd::fm::THIS
setPath	.\projects\logger\streams\FileLogStream.cpp	/^		wbool THIS::setPath(const string& new_path) { return _file.setPath(new_path); }$/;"	f	class:wrd::log::THIS
setPreferencer	.\projects\preferencer\parser\generated\PRParser.h	/^void setPreferencer(pref::Preferencer* preferencer) {$/;"	f	class:wrd::PRParser
setReculsive	.\docs\protos\worldfrw\visitation component.cpp	/^	Result& setReculsive(wbool newone) { $/;"	f	class:Visitor	file:
setSerial	.\projects\world\memory\Block.cpp	/^	Res& THIS::setSerial(wcnt new1)$/;"	f	class:wrd::THIS
setTabSize	.\projects\preferencer\parser\generated\CharStream.h	/^   void setTabSize(int i) { tabSize = i; }$/;"	f	class:wrd::CharStream
setTrackLineColumn	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual void setTrackLineColumn(bool val) { trackLineColumn = val; }$/;"	f	class:wrd::CharStream
shutil	.\build\builder.py	/^import shutil$/;"	i
shutil	.\build\take_files_out.py	/^import shutil$/;"	i
specialToken	.\projects\preferencer\parser\generated\Token.h	/^  Token *specialToken;$/;"	m	class:wrd::Token
splited	.\build\take_files_out.py	/^splited = sys.argv[1].split('\\\\')$/;"	v
stamp	.\docs\protos\worldfrw\instancemanaging component.cpp	/^	Result& stamp(Instance& newone) {$/;"	f	class:InstanceManager	file:
statement	.\projects\preferencer\parser\generated\PRParser.cc	/^void PRParser::statement() {Token* key; Token* value;$/;"	f	class:wrd::PRParser
statements	.\projects\preferencer\parser\generated\PRParser.cc	/^void PRParser::statements() {$/;"	f	class:wrd::PRParser
store	.\projects\world\commons\_TGet.hpp	/^		static T** store() {$/;"	f	class:wrd::_TGet
store	.\projects\world\commons\_TGet.hpp	/^	   static T** store() {$/;"	f	class:wrd::_TGet
str_	.\projects\preferencer\parser\generated\CharStream.cc	/^  const JJString str_;$/;"	m	class:__anon4::StringReaderStream	file:
string	.\projects\independentor\helpers\BuildFeatures.hpp	/^			typedef std::string string;$/;"	t	class:wrd::indep::BuildFeatures
string	.\projects\logger\Logger.cpp	/^		typedef std::string string;$/;"	t	namespace:wrd::log	file:
string	.\projects\logger\streams\FileLogStream.cpp	/^		typedef std::string string;$/;"	t	namespace:wrd::log	file:
string_expr	.\projects\preferencer\parser\generated\PRParser.cc	/^Token     * PRParser::string_expr() {Token* expr;$/;"	f	class:wrd::PRParser
sys	.\build\builder.py	/^import sys$/;"	i
sys	.\build\take_files_out.py	/^import sys$/;"	i
tabSize	.\projects\preferencer\parser\generated\CharStream.h	/^  int                tabSize;$/;"	m	class:wrd::CharStream
take_out	.\build\take_files_out.py	/^def take_out(directory, place_to):$/;"	f
tchar	.\projects\independentor\commons\indep-defs.hpp	48;"	d
tchar	.\projects\independentor\commons\indep-defs.hpp	61;"	d
tcscat	.\projects\independentor\commons\indep-defs.hpp	51;"	d
tcscat	.\projects\independentor\commons\indep-defs.hpp	63;"	d
tcscmp	.\projects\independentor\commons\indep-defs.hpp	54;"	d
tcscmp	.\projects\independentor\commons\indep-defs.hpp	66;"	d
tcscpy	.\projects\independentor\commons\indep-defs.hpp	52;"	d
tcscpy	.\projects\independentor\commons\indep-defs.hpp	64;"	d
tcslen	.\projects\independentor\commons\indep-defs.hpp	50;"	d
tcslen	.\projects\independentor\commons\indep-defs.hpp	62;"	d
tcsncmp	.\projects\independentor\commons\indep-defs.hpp	55;"	d
tcsncmp	.\projects\independentor\commons\indep-defs.hpp	67;"	d
tcsncpy	.\projects\independentor\commons\indep-defs.hpp	53;"	d
tcsncpy	.\projects\independentor\commons\indep-defs.hpp	65;"	d
test	.\projects\unittests\TestCase.cpp	/^    bool CLASS::test()$/;"	f	class:wrd::CLASS
thisptr	.\docs\protos\worldfrw\bridge component.cpp	/^		T& thisptr = _getThis().down<T>();$/;"	m	class:TNativeMethoder	file:
tmain	.\projects\independentor\commons\indep-defs.hpp	49;"	d
to	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		TStrong<T> to() { return to(TClass<T>()); }$/;"	f	class:wrd::Instance	file:
to	.\docs\protos\worldfrw\execution component.cpp	/^	virtual Refer to(const Class& cls) const {$/;"	f	class:Scope::Spaces::Expr	file:
to	.\docs\protos\worldfrw\passer component.cpp	/^	virtual Refer to(const Class& cls) {$/;"	f	class:Refer	file:
to	.\projects\world\base\Thing.cpp	/^	CStrong THIS::to(const Class& cls) const$/;"	f	class:wrd::THIS
to	.\projects\world\base\Thing.cpp	/^	Strong THIS::to(const Class& cls) { return Strong(); }$/;"	f	class:wrd::THIS
to	.\projects\world\base\Thing.hpp	/^	template <typename T> CStrong THIS::to() const { return to(T::getClassStatic()); }$/;"	f	class:wrd::THIS
to	.\projects\world\base\Thing.hpp	/^	template <typename T> Strong THIS::to() { return to(T::getClassStatic()); }$/;"	f	class:wrd::THIS
to	.\projects\world\memory\Bind.cpp	/^	Strong THIS::to(const Class& cls)$/;"	f	class:wrd::THIS
toBoolean	.\projects\preferencer\objtree\MemberType.cpp	/^		wbool THIS::toBoolean() const { return _toLowercase(_value) == "true" || toInt(); }$/;"	f	class:wrd::pref::THIS
toChar	.\projects\preferencer\objtree\MemberType.cpp	/^		wchar THIS::toChar() const { return _value[0]; }$/;"	f	class:wrd::pref::THIS
toFloat	.\projects\preferencer\objtree\MemberType.cpp	/^		wfloat THIS::toFloat() const { return std::stof(_value, 0); }$/;"	f	class:wrd::pref::THIS
toImplicitly	.\docs\protos\worldfrw\pretype component.cpp	/^	virtual Refer toImplicitly(const Class& cls) {$/;"	f	class:Integer	file:
toInt	.\projects\preferencer\objtree\MemberType.cpp	/^		wint THIS::toInt() const { return std::stoi(_value); }$/;"	f	class:wrd::pref::THIS
toStr	.\projects\preferencer\objtree\MemberType.cpp	/^		std::string THIS::toStr() const { return _value; }$/;"	f	class:wrd::pref::THIS
toString	.\projects\preferencer\parser\generated\Token.cc	/^  const JJString& Token::toString()$/;"	f	class:wrd::Token
toStrong	.\docs\protos\worldfrw\backbone component.cpp	/^	CStrong toStrong() const { return CStrong(*this); }$/;"	f	class:Instance	file:
toStrong	.\docs\protos\worldfrw\backbone component.cpp	/^	Strong toStrong() { $/;"	f	class:Instance	file:
toStrong	.\projects\world\base\Instance.cpp	/^	CStrong THIS::toStrong() const$/;"	f	class:wrd::THIS
toStrong	.\projects\world\base\Node.cpp	/^	Strong THIS::toStrong() { return *this; }$/;"	f	class:wrd::THIS
toWeak	.\docs\protos\worldfrw\backbone component.cpp	/^	CWeak toWeak() const { return CWeak(*this); }$/;"	f	class:Instance	file:
toWeak	.\docs\protos\worldfrw\backbone component.cpp	/^	Weak toWeak() { return Weak(*this); }$/;"	f	class:Instance	file:
toWeak	.\projects\world\base\Instance.cpp	/^	CWeak THIS::toWeak() const$/;"	f	class:wrd::THIS
toWeak	.\projects\world\base\Node.cpp	/^	Weak THIS::toWeak() { return *this; }$/;"	f	class:wrd::THIS
token	.\projects\preferencer\parser\generated\PRParser.h	/^  Token        *token = nullptr;$/;"	m	class:wrd::PRParser
tokenBegin	.\projects\preferencer\parser\generated\CharStream.h	/^  int                tokenBegin;$/;"	m	class:wrd::CharStream
tokenImage	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar* const tokenImage[] = {$/;"	m	namespace:wrd
tokenImage	.\projects\preferencer\parser\generated\ParseException.cc	/^  JJString* tokenImage;$/;"	m	namespace:wrd	file:
tokenImage	.\projects\preferencer\parser\generated\ParseException.h	/^  JJString* tokenImage;$/;"	m	class:wrd::ParseException
tokenImage_arr_0	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_0[] = $/;"	m	namespace:wrd
tokenImage_arr_1	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_1[] = $/;"	m	namespace:wrd
tokenImage_arr_10	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_10[] = $/;"	m	namespace:wrd
tokenImage_arr_11	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_11[] = $/;"	m	namespace:wrd
tokenImage_arr_12	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_12[] = $/;"	m	namespace:wrd
tokenImage_arr_13	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_13[] = $/;"	m	namespace:wrd
tokenImage_arr_14	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_14[] = $/;"	m	namespace:wrd
tokenImage_arr_15	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_15[] = $/;"	m	namespace:wrd
tokenImage_arr_16	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_16[] = $/;"	m	namespace:wrd
tokenImage_arr_17	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_17[] = $/;"	m	namespace:wrd
tokenImage_arr_18	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_18[] = $/;"	m	namespace:wrd
tokenImage_arr_19	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_19[] = $/;"	m	namespace:wrd
tokenImage_arr_2	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_2[] = $/;"	m	namespace:wrd
tokenImage_arr_20	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_20[] = $/;"	m	namespace:wrd
tokenImage_arr_21	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_21[] = $/;"	m	namespace:wrd
tokenImage_arr_3	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_3[] = $/;"	m	namespace:wrd
tokenImage_arr_4	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_4[] = $/;"	m	namespace:wrd
tokenImage_arr_5	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_5[] = $/;"	m	namespace:wrd
tokenImage_arr_6	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_6[] = $/;"	m	namespace:wrd
tokenImage_arr_7	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_7[] = $/;"	m	namespace:wrd
tokenImage_arr_8	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_8[] = $/;"	m	namespace:wrd
tokenImage_arr_9	.\projects\preferencer\parser\generated\PRParserConstants.h	/^  static const JJChar tokenImage_arr_9[] = $/;"	m	namespace:wrd
token_source	.\projects\preferencer\parser\generated\PRParser.h	/^  TokenManager *token_source = nullptr;$/;"	m	class:wrd::PRParser
tour	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		virtual Visitor& tour(Visitor& visitor) const {$/;"	f	class:wrd::Instance	file:
tprintf	.\projects\independentor\commons\indep-defs.hpp	56;"	d
tprintf	.\projects\independentor\commons\indep-defs.hpp	68;"	d
trace	.\projects\preferencer\parser\generated\PRParser.h	/^  bool trace = false; \/\/ trace enabled if true$/;"	m	class:wrd::PRParser
trace_enabled	.\projects\preferencer\parser\generated\PRParser.cc	/^  bool PRParser::trace_enabled()  {$/;"	f	class:wrd::PRParser
trackLineColumn	.\projects\preferencer\parser\generated\CharStream.h	/^  bool               trackLineColumn;$/;"	m	class:wrd::CharStream
trait	.\docs\protos\worldfrw\container component.cpp	/^	Container(const Class& trait);$/;"	v
tscanf	.\projects\independentor\commons\indep-defs.hpp	57;"	d
tscanf	.\projects\independentor\commons\indep-defs.hpp	69;"	d
type	.\docs\protos\worldfrw\backbone component.cpp	/^		widx type;$/;"	m	union:Instance::ID	file:
unbind	.\docs\protos\worldfrw\binder component.cpp	/^	virtual Result& unbind() {$/;"	f	class:TStrong	file:
unbind	.\docs\protos\worldfrw\binder component.cpp	/^	virtual Result& unbind() {$/;"	f	class:TWeak	file:
unbind	.\docs\protos\worldfrw\passer component.cpp	/^	Result& unbind() {$/;"	f	class:Refer	file:
unbind	.\projects\world\memory\Bind.cpp	/^	Res& THIS::unbind()$/;"	f	class:wrd::THIS
unbind	.\projects\world\memory\Block.cpp	/^	Res& THIS::unbind()$/;"	f	class:wrd::THIS
unbind	.\projects\world\memory\Instancer.cpp	/^	Res& THIS::unbind(Instance& old)$/;"	f	class:wrd::THIS
unbind	.\projects\world\memory\TStrong.hpp	/^	TEMPL Res& THIS::unbind()$/;"	f	class:wrd::THIS
unbind	.\projects\world\memory\TWeak.hpp	/^	TEMPL Res& THIS::unbind()$/;"	f	class:wrd::THIS
updateConsoleColor	.\projects\independentor\helpers\PlatformAPI.cpp	/^		void CLASS::updateConsoleColor(ConsoleColor fore, ConsoleColor back)$/;"	f	class:wrd::indep::CLASS
updated	.\build\builder.py	/^updated = False$/;"	v
use	.\projects\world\base\Node.cpp	/^	CStrong THIS::use(Msg& msg) const$/;"	f	class:wrd::THIS
use	.\projects\world\base\Node.cpp	/^	Strong THIS::use(Msg& msg)$/;"	f	class:wrd::THIS
use	.\projects\world\memory\Bind.cpp	/^	CStrong THIS::use(Msg& msg) const$/;"	f	class:wrd::THIS
use	.\projects\world\memory\Bind.cpp	/^	Strong THIS::use(Msg& msg)$/;"	f	class:wrd::THIS
use	.\projects\world\msg-usr\Object.cpp	/^	CStrong THIS::use(Msg& msg) const$/;"	f	class:wrd::THIS
use	.\projects\world\msg-usr\Object.cpp	/^	Strong THIS::use(Msg& msg)$/;"	f	class:wrd::THIS
ver_buildcnt	.\build\builder.py	/^ver_buildcnt = 0$/;"	v
ver_fix	.\build\builder.py	/^ver_fix = 0$/;"	v
ver_major	.\build\builder.py	/^ver_major = 0$/;"	v
ver_minor	.\build\builder.py	/^ver_minor = 0$/;"	v
ver_name	.\build\builder.py	/^ver_name = ""$/;"	v
version	.\build\builder.py	/^def version():$/;"	f
visit	.\docs\protos\worldfrw\visitation component.cpp	/^	virtual Result& visit(Thing& it) {$/;"	f	class:Visitor	file:
visit	.\docs\protos\worldfrw\visitation component.cpp	/^	virtual Result& visit(const Thing& it) {$/;"	f	class:Visitor	file:
visit	.\docs\protos\worldfrw\visitation component.cpp	/^    Result& visit(T& trg) const {$/;"	f	class:Visitor	file:
visit	.\docs\protos\worldfrw\visitation component.cpp	/^    Result& visit(const T& trg) const {$/;"	f	class:Visitor	file:
visit	.\docs\protos\worldfrw\visitation component.cpp	/^    virtual Result& visit(Thing& trg) const {$/;"	f	class:TVisitation	file:
visit	.\docs\protos\worldfrw\visitation component.cpp	/^    virtual Result& visit(const Thing& trg) const {$/;"	f	class:TVisitation	file:
visitor	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^		virtual InstanceVisitor& visitor(InstanceVisitor& visitor) const {$/;"	f	class:wrd::Result	file:
volatile	.\build\CMakeFiles\3.10.2\CompilerIdC\CMakeCCompilerId.c	11;"	d	file:
warn	.\projects\world\pretypes\Res.cpp	/^	Res& THIS::warn(...) { return wasgood; }$/;"	f	class:wrd::THIS
wbool	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	typedef bool wbool;$/;"	t	namespace:wrd	file:
wbool	.\docs\protos\worldfrw\helper component.cpp	/^typedef bool wbool;$/;"	t	file:
wbool	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef bool 				wbool;$/;"	t	namespace:wrd
wbyte	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef wchar				wbyte;$/;"	t	namespace:wrd
wchar	.\docs\protos\worldfrw\helper component.cpp	/^typedef char wchar;$/;"	t	file:
wchar	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef char				wchar;$/;"	t	namespace:wrd
wcnt	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	typedef int wcnt;$/;"	t	namespace:wrd	file:
wcnt	.\docs\protos\worldfrw\helper component.cpp	/^typedef wint wcnt;$/;"	t	file:
wcnt	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef wint				wcnt;$/;"	t	namespace:wrd
wdbl	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef double				wdbl;$/;"	t	namespace:wrd
wfloat	.\docs\protos\worldfrw\helper component.cpp	/^typedef float wfloat;$/;"	t	file:
wfloat	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef float				wfloat;$/;"	t	namespace:wrd
wid	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	typedef int wid;$/;"	t	namespace:wrd	file:
wid	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef wint64				wid;$/;"	t	namespace:wrd
widx	.\docs\protos\worldfrw\helper component.cpp	/^typedef wint widx;$/;"	t	file:
widx	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef wint				widx;$/;"	t	namespace:wrd
wint	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^	typedef int wint;$/;"	t	namespace:wrd	file:
wint	.\docs\protos\worldfrw\helper component.cpp	/^typedef int wint;$/;"	t	file:
wint	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef int 				wint;$/;"	t	namespace:wrd
wint64	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef int64_t				wint64;$/;"	t	namespace:wrd
wlong	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef long				wlong;$/;"	t	namespace:wrd
wrd	.\docs\protos\worldfrw\WorldPrototyping.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\file-manipulator\file-streams\AsciiStream.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\file-manipulator\file-streams\AsciiStream.hpp	/^namespace wrd$/;"	n
wrd	.\projects\file-manipulator\file-streams\BinaryStream.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\file-manipulator\file-streams\BinaryStream.hpp	/^namespace wrd$/;"	n
wrd	.\projects\file-manipulator\file-streams\FileStream.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\file-manipulator\file-streams\FileStream.hpp	/^namespace wrd$/;"	n
wrd	.\projects\file-manipulator\file-structures\File.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\file-manipulator\file-structures\File.hpp	/^namespace wrd$/;"	n
wrd	.\projects\file-manipulator\file-structures\Folder.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\file-manipulator\file-structures\Folder.hpp	/^namespace wrd$/;"	n
wrd	.\projects\file-manipulator\file-structures\PathedObject.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\file-manipulator\file-structures\PathedObject.hpp	/^namespace wrd$/;"	n
wrd	.\projects\independentor\commons\indep-typedefs.hpp	/^namespace wrd$/;"	n
wrd	.\projects\independentor\helpers\BuildFeatures.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\independentor\helpers\BuildFeatures.hpp	/^namespace wrd$/;"	n
wrd	.\projects\independentor\helpers\Nulr.hpp	/^namespace wrd$/;"	n
wrd	.\projects\independentor\helpers\PlatformAPI.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\independentor\helpers\PlatformAPI.hpp	/^namespace wrd$/;"	n
wrd	.\projects\independentor\macros\Initiator.hpp	/^namespace wrd$/;"	n
wrd	.\projects\logger\Logger.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\logger\Logger.hpp	/^namespace wrd$/;"	n
wrd	.\projects\logger\streams\ConsoleStream.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\logger\streams\ConsoleStream.hpp	/^namespace wrd$/;"	n
wrd	.\projects\logger\streams\FileLogStream.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\logger\streams\FileLogStream.hpp	/^namespace wrd$/;"	n
wrd	.\projects\logger\streams\Stream.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\logger\streams\Stream.hpp	/^namespace wrd$/;"	n
wrd	.\projects\preferencer\Preferencer.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\preferencer\Preferencer.hpp	/^namespace wrd$/;"	n
wrd	.\projects\preferencer\commons\pref-types.hpp	/^namespace wrd$/;"	n
wrd	.\projects\preferencer\objtree\ClassType.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\preferencer\objtree\ClassType.hpp	/^namespace wrd$/;"	n
wrd	.\projects\preferencer\objtree\MemberType.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\preferencer\objtree\MemberType.hpp	/^namespace wrd$/;"	n
wrd	.\projects\preferencer\objtree\Object.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\preferencer\objtree\Object.hpp	/^namespace wrd$/;"	n
wrd	.\projects\preferencer\objtree\Type.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\preferencer\objtree\Type.hpp	/^namespace wrd$/;"	n
wrd	.\projects\preferencer\parser\PRParserHandler.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\preferencer\parser\PRParserHandler.hpp	/^namespace wrd$/;"	n
wrd	.\projects\preferencer\parser\generated\CharStream.cc	/^namespace wrd {$/;"	n	file:
wrd	.\projects\preferencer\parser\generated\CharStream.h	/^namespace wrd {$/;"	n
wrd	.\projects\preferencer\parser\generated\ErrorHandler.h	/^namespace wrd {$/;"	n
wrd	.\projects\preferencer\parser\generated\PRParser.cc	/^namespace wrd {$/;"	n	file:
wrd	.\projects\preferencer\parser\generated\PRParser.h	/^namespace wrd {$/;"	n
wrd	.\projects\preferencer\parser\generated\PRParserConstants.h	/^namespace wrd {$/;"	n
wrd	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^namespace wrd {$/;"	n	file:
wrd	.\projects\preferencer\parser\generated\PRParserTokenManager.h	/^namespace wrd {$/;"	n
wrd	.\projects\preferencer\parser\generated\ParseException.cc	/^namespace wrd {$/;"	n	file:
wrd	.\projects\preferencer\parser\generated\ParseException.h	/^namespace wrd {$/;"	n
wrd	.\projects\preferencer\parser\generated\Token.cc	/^namespace wrd {$/;"	n	file:
wrd	.\projects\preferencer\parser\generated\Token.h	/^namespace wrd {$/;"	n
wrd	.\projects\preferencer\parser\generated\TokenManager.h	/^namespace wrd {$/;"	n
wrd	.\projects\preferencer\parser\generated\TokenMgrError.cc	/^namespace wrd {$/;"	n	file:
wrd	.\projects\preferencer\parser\generated\TokenMgrError.h	/^namespace wrd {$/;"	n
wrd	.\projects\unittests\TestCase.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\unittests\TestCase.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\base\Composit.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\base\Composit.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\base\Id.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\base\Instance.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\base\Instance.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\base\Msg.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\base\Msg.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\base\Node.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\base\Node.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\base\State.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\base\State.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\base\Thing.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\base\Thing.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\commons\_TGet.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\commons\wrd-const.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\commons\wrd-const.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\compiler\Origin.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\compiler\Origin.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\container\Array.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\container\Array.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\container\Chain.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\container\Chain.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\container\Container.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\container\TArray.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\container\TChain.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\memory\Bind.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\memory\Bind.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\memory\Bindable.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\memory\Bindable.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\memory\Block.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\memory\Block.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\memory\Instancer.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\memory\Instancer.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\memory\TBlock.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\memory\TStrong.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\memory\TWeak.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\meta\Class.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\meta\Class.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\meta\Classes.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\meta\Classes.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\meta\MgdClass.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\meta\ObjectClass.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\meta\TClass.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\meta\helpers.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\msg-usr\Manager.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\msg-usr\Object.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\msg-usr\Object.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\pretypes\Res.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\pretypes\Res.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\pretypes\Reses.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\pretypes\Str.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\pretypes\Str.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\pretypes\reses.hpp	/^namespace wrd$/;"	n
wrd	.\projects\world\world.cpp	/^namespace wrd $/;"	n	file:
wrd	.\projects\world\world.cpp	/^namespace wrd$/;"	n	file:
wrd	.\projects\world\world.hpp	/^namespace wrd$/;"	n
write	.\projects\file-manipulator\file-streams\AsciiStream.cpp	/^		wcnt THIS::write(const string& datum) { return write(datum.c_str(), sizeof(char) * datum.size()); }$/;"	f	class:wrd::fm::THIS
write	.\projects\file-manipulator\file-streams\AsciiStream.cpp	/^		wcnt THIS::write(const void* chunks, wcnt bytes)$/;"	f	class:wrd::fm::THIS
write	.\projects\file-manipulator\file-streams\AsciiStream.hpp	/^			wcnt write(const T& datum) { return write(to_string(datum)); }$/;"	f	class:wrd::fm::AsciiStream
write	.\projects\file-manipulator\file-streams\BinaryStream.cpp	/^		wcnt THIS::write(const char* str) { return write(str, sizeof(char) * strlen(str)); }$/;"	f	class:wrd::fm::THIS
write	.\projects\file-manipulator\file-streams\BinaryStream.cpp	/^		wcnt THIS::write(const std::string& str) { return write(str.c_str()); }$/;"	f	class:wrd::fm::THIS
write	.\projects\file-manipulator\file-streams\BinaryStream.cpp	/^		wcnt THIS::write(const void* chunks, wcnt bytes)$/;"	f	class:wrd::fm::THIS
write	.\projects\file-manipulator\file-streams\BinaryStream.hpp	/^			wcnt write(const T& datum) { return write(&datum, sizeof(T)); }$/;"	f	class:wrd::fm::BinaryStream
wrongidx	.\projects\world\commons\wrd-const.hpp	/^	constexpr int wrongidx = -1;$/;"	m	namespace:wrd
wshort	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef short int			wshort;$/;"	t	namespace:wrd
wtchar	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef tchar				wtchar;$/;"	t	namespace:wrd
wubyte	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef wuchar				wubyte;$/;"	t	namespace:wrd
wuchar	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef unsigned char		wuchar;$/;"	t	namespace:wrd
wuint	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef unsigned int		wuint;$/;"	t	namespace:wrd
wulong	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef unsigned long		wulong;$/;"	t	namespace:wrd
wushort	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef unsigned short int	wushort;$/;"	t	namespace:wrd
wwchar	.\docs\protos\worldfrw\helper component.cpp	/^typedef wchat_t wwchar;$/;"	t	file:
wwchar	.\projects\independentor\commons\indep-typedefs.hpp	/^	typedef wchar_t				wwchar;$/;"	t	namespace:wrd
yes	.\docs\protos\worldfrw\helper component.cpp	/^	typedef short yes;$/;"	t	class:Checker	file:
yes	.\projects\world\meta\helpers.hpp	/^        typedef short yes;$/;"	t	class:wrd::MetaIf
~CharStream	.\projects\preferencer\parser\generated\CharStream.h	/^  virtual ~CharStream() {$/;"	f	class:wrd::CharStream
~ErrorHandler	.\projects\preferencer\parser\generated\ErrorHandler.h	/^      virtual ~ErrorHandler() {}$/;"	f	class:wrd::ErrorHandler
~JJCalls	.\projects\preferencer\parser\generated\PRParser.h	/^    ~JJCalls() { if (next) delete next; }$/;"	f	struct:wrd::JJCalls
~JJEnter	.\projects\preferencer\parser\generated\JavaCC.h	/^    ~JJEnter(){}$/;"	f	struct:JJEnter
~JJExit	.\projects\preferencer\parser\generated\JavaCC.h	/^    ~JJExit(){f();}$/;"	f	struct:JJExit
~PRParser	.\projects\preferencer\parser\generated\PRParser.cc	/^PRParser::~PRParser()$/;"	f	class:wrd::PRParser
~PRParserTokenManager	.\projects\preferencer\parser\generated\PRParserTokenManager.cc	/^  PRParserTokenManager::~PRParserTokenManager () {$/;"	f	class:wrd::PRParserTokenManager
~ReaderStream	.\projects\preferencer\parser\generated\JavaCC.h	/^  virtual ~ReaderStream() {}$/;"	f	class:ReaderStream
~StringReaderStream	.\projects\preferencer\parser\generated\CharStream.cc	/^  virtual ~StringReaderStream() {}$/;"	f	class:__anon4::StringReaderStream
~THIS	.\projects\file-manipulator\file-streams\AsciiStream.cpp	/^		THIS::~THIS() { release(); }$/;"	f	class:wrd::fm::THIS
~THIS	.\projects\file-manipulator\file-streams\BinaryStream.cpp	/^		THIS::~THIS() { release(); }$/;"	f	class:wrd::fm::THIS
~THIS	.\projects\file-manipulator\file-streams\FileStream.cpp	/^		THIS::~THIS() { release(); }$/;"	f	class:wrd::fm::THIS
~THIS	.\projects\file-manipulator\file-structures\File.cpp	/^		THIS::~THIS() {}$/;"	f	class:wrd::fm::THIS
~THIS	.\projects\file-manipulator\file-structures\Folder.cpp	/^		THIS::~THIS() { _release(); }$/;"	f	class:wrd::fm::THIS
~THIS	.\projects\logger\streams\Stream.cpp	/^		THIS::~THIS() {}$/;"	f	class:wrd::log::THIS
~THIS	.\projects\world\base\Instance.cpp	/^	THIS::~THIS() { getMgr().unbind(*this); }$/;"	f	class:wrd::THIS
~Token	.\projects\preferencer\parser\generated\Token.cc	/^  Token::~Token() {$/;"	f	class:wrd::Token
~TokenManager	.\projects\preferencer\parser\generated\TokenManager.h	/^  virtual       ~TokenManager() { }$/;"	f	class:wrd::TokenManager
~TokenManagerErrorHandler	.\projects\preferencer\parser\generated\ErrorHandler.h	/^      virtual ~TokenManagerErrorHandler() {}$/;"	f	class:wrd::TokenManagerErrorHandler
