_assign과 다르게 복사생성시에는 id가 할당되어야 한다.
이는 ID의 독특한 정책(policy)의 특징을 잘 들어내는데, NEBeManaged의 _manager
와는 다른 정책을 가지고 있음을 드러낸다.

_manager 경우는 "인스턴스" 의 관점으로 해석해서 동작된다. 
다시말해서 '한번 A에 관리되는 인스턴스' 라는 건 'A에 속해진 인스턴스' 라는 뜻이며
A가 B를 통해서 할당되더라도(= 'A = B' 과 같은 연산을 하더라도) A는 여전히 _manager
로써 A의 주소를 가져야 한다는 정책이다.

반면 ID의 경우는 조금 다른데, 원본이 어딘가에 존재하고(단, 원본의 무결성은 반드시
유지) 그 원본으로부터 "복사생성된" 객체는 원본과 같은 ID를 갖는 다는 정책이다.
A로부터 복제된 A' 는, A와 같은 ID를 할당받아야 하며, B로부터 복제된 B'는 B와 같은
ID를 보유해야만 하되, A'에 B'를 할당하더라도(= "A' = B'"를 하더라도) A'의 ID는
기존의 A로부터의 ID가 유지되어야만 한다는 정책이다.

결론.
	1.	_manager의 경우는 일체의 복사 할당을 금지한다.
	2.	id의 경우는 복제되는(= 복사생성) 순간을 제외한 모든 곳에서 복사 할당을 
		금지한다.
		
따라서 복사생성되는 순간만 _id를 source._id로부터 할당 받는 것이 허락된다.
		
