ADT도 연산자 오버로딩이 가능해야한다.
그런데 무슨 데이터가 있는지 ADT는 모른다.
그래서 가지고 있는 pure virtual을 최대한 활용해서 연산자 오버로딩을 각각 구현한다.

나중에 이점이 ADT를 상속한 실제 클래스를 작성할때 문제가 생긴다.
실제클래스가 B라고 할때,

B::B(const B& source)
: ADT(source)
{
	멤버변수를 source로부터 할당
}

이러면 중복해서 멤버변수를 할당하므로 퍼포먼스에 문제가 생기게 되는 것이다.
그래서 제작자가 알아서, "ADT에서 연산하지 않을 만한 것들"을 찾아서 고것만 추가적으로 
작업해줘야 하는 짜증나는 일이 생겨버린다.
