NameCode와 Id의 공통점
	일단 한번 세팅되면 NENode의 객체만으로는 변경이 불가능하다. 외부로의 변경자 함수가 없기
	때문이다.
	
		node.setId(n), node.setNameCode()와 같은 코드가 없다.
		
	즉, 쉽게 변경되지 않는 고정적인 특성을 갖는다.
	
	
차이점.
	인식, 관점의 차이라고 볼 수 있다.
	여기 원본 Node와, 어딘가에 존재하는 대상Node가 있다고 하자.
	물론 각 노드의 네임코드나 아이디나 데이터는 전부 다르다.
	
	그랬을때, 원본Node = 대상Node라고 했을때 데이터는 모두 복사가 될것이다.
	그렇다면 원본Node는 지금까지의 원본Node와는 달라진 데이터를 갖는 Node가 된다.
	
	다시말해서 원본Node는 이제 대상Node라고 칭해도 되지않냐는 것이다.
	
		이때, 데이터가 바뀌었으니 대상Node가 맞다고 본다면 NameCode를 따르는 것이고,
		
		데이터가 같아도 객체자체는 다르므로 다른 인스턴스로 봐야한다는 것이 Id를 따르는 것이다.
		
		
	보다 명확한 차이점은 다음과 같다.
		NameCode:
			외부에서 변경자 메소드 없음. 일반적으로 변경 불가능.
			복사생성시는 할당 가능(즉, 생성할때는 데이터를 줄 수 있다)
			operator=의 연산시, 변경됨
			
			---> 데이터가 바뀐다면, NameCode역시 바뀌어야 한다.
			
		Id:
			외부에서 변경자 메소드 없음. 일반적으로 변경 불가능.
			복사생성시는 할당 가능(즉, 생성할때는 데이터를 줄 수 있다)
			operator=조차도 변경 불가능
			
			---> 즉, 한번 부여받은 번호는 끝까지 지닌다.