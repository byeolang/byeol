문제	:	일단 ManagedNodeList에 등록되어있는 노드가 operator=를 수행했을때 노드자체의 
			중요한 정보인 코드정보가 수정되버리고 만다. 
			그런데 이 코드정보가 수정되버리면 ManagedNodeList의 ShortCutSet과의 동기화가
			어긋나게 된다.
			그렇다고 operator=를 없앨수도 없잖은가?
해결방안:	
	1		원천봉쇄.
				operator=를 비공개로 한다. NENodeSet과 같은 경우는 operator=를 사용하므로 friend
				를 사용해서 공개한다.
					-----> Q.	그렇다면 NENodeSet의 operator=를 이용해서 간접적으로 NENode::operator=를
								사용할수 있다.
							
	2		일일이 주인정보를 기억
				NENode에 ManagedNodeList*를 심어두고 operator시에 다음과 같이 동작한다.
					1. operator=(UnManagedNode, UnManagedNode)
						ManagedNodeList는 무시하고 나머지 변수만 동작.
					2. operator=(ManagedNode, UnManagedNode)
						자기자신을 ManagedNodeList->unenroll후, 다시 enroll한다.
					3. operator=(UnManagedNode, ManagedNode)
						ManagedNodeList는 무시하고 나머지 변수만 동작.
					4. operator=(ManagedNode, ManagedNode)
						자기자신을 ManagedNodeList->unenroll후, 다시 enroll한다.
				---> 다음과 같은 코드가 된다.
				if(_manager)
					_manager->unenroll(*this);
					
				// operator=:
				
				if(_manager)
					_manager->enroll(*this);
				
			전제조건.
				ManagedNodeList에 friend선언. friend class NENode;
				serialize시, NENode에서는 _manager을 저장하지 않는다.
				이 정보는 ManagedNodeList로부터 주입된다.
				
------------------------------------------------------------------------------------------	
