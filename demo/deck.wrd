pack wrd.lang.example.part

def global()
    suits := {"Hearts", "diamonds", "Spades", "Clovers"}
    values := {"Two":2, "Three":3, "Four":4}
    // values := [ranks[0]:2, ranks[1]:3, ranks[2]:4] // err
    ranks := {"Two", "Three", "Four"}
    values := {ranks[0]:2, ranks[1]:3, ranks[2]:4} // is this possible?
    playing := true

def card
    me(nsuit str, nrank str)
        _suit = nsuit
        _rank = nrank
    _suit := ""
    _rank := ""

    to() str: "$rank of suit" // @to is syntactic sugar of "to(type str) str"

def hand
    _cards := str[]
    _value := _aces := 0

    addCard(@card) void
        _cards.add(card)
        _value := global.values[card.rank]

    adjustForAce() void
        for _value > 21 & aces
            _value -= 10
            aces--

def deck
    me()
        for s in global.suits: for r in global.ranks: _cards.add(card(s, r))
    shuffle() void: random.shuffle(deck)
    deal() void
        // return deck.pop() // err. returning something to void
        deck.pop()

    _cards := str[]

sys.cons aka c // affects to all statement inside of each classes.

main() void: with deck
    shuffle()
    deal()
