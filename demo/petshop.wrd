package wrd.lang.example.petshop
sys.cons aka c

def petShop
    /* a pet shop */
    factory(useless flt64, use1 int, use2 char, use3 bool) pet = null aka rFac
    factory(useless int, use1 int, use2 char, use3 bool) pet = null

    _myFactory rFac?

    @ctor(#factory(someVal flt64, x int, y char, z bool)): sys.cons.out("f is $factory")
    @ctor(#rFac): myFactory = rFac

    showPet() void
        mypet = myFactory(0, 0, 0, false)
        c.out("we have a lovely $mypet")
        c.out("it says $pet.speak()")

def pet
def dog pet
    speak() void: "woof"

def cat pet
    speak() void: "meow"

def app
    randomAnimal(s flt64, x int, y char, z bool) pet: return random.choice([dog(), cat()])

    main() void
        catShop = petShop((x as int, y, z, a) -> cat())
        catShop.showPet()
        c.out("")

        shop = petShop(randomAnimal)
        for n in 0..3
            shop.showPet()
            c.out("=" * 20)
