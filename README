WORLD
=====
	
	What's this?
	============
		World is a interpreter and visual IDE for new programming language, World language.
		it has 3 main features.
			1.	anchor-way development: You can get "so immediately" feedbacks whenever you codes.
				there is no any a "compile" thing. if you're writing down your codes, means that you're in debugging
				at the same time.
				
			2.	touch instances: Basically, in order to make your function or class with World, 
				you should write somethings as a text. like other launguages.				
				
				But, because of lack of compling, you always are in a middle of runtime envrionment whenever you codes your software.
				You can see which interactions are made of between classes and functions in visualized 3d graphics.
				Visualization can get strong points that make you focus the whole picture of your software.

			3.	ModuleStore: Module is simply plug-in. mostly based on c++. you download modules which you want anytime.

			4.	easier to use: we hope who aren't a programmer could join us to make a program with World.
				World's IDE will be served as a classic GAME. pixel art, particle effects, retro sound fx, RPGistic UI,
				Worldmap, quest and archivement.

	Develop Environments
	==================
		* CMake + GDB + GCC + python(for some scripts) + java
		* Windows + minGW only.
		* fully made of C++.

	How to Start?
	=============

		Let's Build
		===========

			Preparing: to build World, following softwares will be needed.
					python, git, cmake, g++ and make,
					* if you're trying on windows, then it's recommended to install minGW
				install these softwares on your own.

			Then, just enter:
				python ./build/builder.py build

			All script you need for doing something on World is just at builder.py.
			for more information, try "builder.py help"

		Let's make something with World!
		==============================
			Not yet...

	Release Notes
	====================
		Build# laid on top of this description was calculated by adding all Build#s  listed above.
		Basically External modules arenâ€™t part of kernel. but it has been embeded in because of managing.
		they will be splited out to independent project someday.
		ManagerPackages are part of kernel package, even though they are externel modules. because they have to be needed.

	 * Descrition

	 	[Revision#] Month-Day-Year
	 	vMajor.Minor.Fix#Build
	 		+ 	Improved
	 		++	Very Improved.
	 		- 	Bug fix mostly.
	 		--	Fatal bug was fixed.


	 * List
	 	[14] 04-24-2015
	 	v0.0.1#8392
	 		Not public.

	 	[13] 03-29-2015
	 	V0.0.1#7001
	 		Not public.

	 	[12] ?

	 	[11] 02-02-2014
	 	V0.0.1#4429
	 		Not public.

	 	[10] 10-30-2013
	 	V0.0.1#4317
	 		Not public.
	 		+ Graphics module was added.

	 	[9] 01-29-2013
	 	V0.0.1#4162
	 		Not public.

	 	[8] 10-19-2012
	 	V0.0.1#3727
	 		Not public.

	 	[7] 05-19-2012
	 	V0.0.1#3600
	 		Not public.

	 	[6] 05-05-2012
	 	V0.0.1#3559
	 		Not public.

	 	[5] 04-15-2012
	 	V0.0.1#3531
	 		Not public.

	 	[4] 03-15-2012
	 	V0.0.1#3445
	 		Not public.

	 	[3] 02-20-2012
	 	V0.0.0#3377
	 		Not public.

	 	[2] 01-15-2012
	 	v0.0.0#3086
	 		Not public.

	 	[1] ?

	 	[0] 10-03-2011
	 	V0.0.1#2976
	 		Not public.