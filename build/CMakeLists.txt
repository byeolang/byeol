cmake_minimum_required (VERSION 2.6)
project(World C CXX)

#defines:
set(SHOW_CMAKE_VARIABLES 1)
set(VERSION_MAJOR 0)
set(VERSION_MINOR 1)
set(VERSION_FIX 0)
set(BUILD_COUNT 139)
set(VERSION_NAME "Seed")
set(VERSION_VALUE "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_FIX}")
set(VERSION "${PROJECT_NAME} ${UPDATE_NAME} v${VERSION_VALUE}")
#   build-date:
string(TIMESTAMP BUILD_DATE_YEAR "%Y")
string(TIMESTAMP BUILD_DATE_MONTH "%m")
string(TIMESTAMP BUILD_DATE_DAY "%d")
set(BUILD_DATE "${BUILD_DATE_DAY}-${BUILD_DATE_MONTH} ${BUILD_DATE_YEAR}")
string(TIMESTAMP BUILD_TIME_HOUR "%H")
string(TIMESTAMP BUILD_TIME_MINUTE "%M")
string(TIMESTAMP BUILD_TIME_SECOND "%S")
string(TIMESTAMP BUILD_TIME "${BUILD_TIME_HOUR}:${BUILD_TIME_MINUTE}:${BUILD_TIME_SECOND}")
set(BUILD_DATE_AND_TIME "${BUILD_DATE} ${BUILD_TIME}")

message("")
message("${VERSION}")
message(" on ${BUILD_DATE_AND_TIME}")
message("----------------------------------------")
message("")

message("\ninitialize CMake variables...")
set(CMAKE_C_COMPILER "clang")
set(CMAKE_CXX_COMPILER "clang++")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -Wall -fdiagnostics-color=always")  #default options.
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-sign-compare -Wno-address -Wno-unused-local-typedefs -Wno-undefined-bool-conversion")  #compiler options.
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DWRD_DEBUG")
set(CXX_DEFINITIONS "${DEFINITIONS} -DUNICODE")
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})

IF(CMAKE_SYSTEM_NAME STREQUAL Darwin)
    set(CMAKE_MACOSX_RPATH 1)
ENDIF(CMAKE_SYSTEM_NAME STREQUAL Darwin)
cmake_policy(SET CMP0015 NEW)
cmake_policy(SET CMP0042 NEW)

set(WORLD_LIBRARY_EXTENSION "so")
get_filename_component(WRD_DIR ${CMAKE_SOURCE_DIR} DIRECTORY)
set(WRD_DEFAULT_INC_DIR
    ${WRD_DIR}/mods/indep/src
    ${WRD_DIR}/mods/clog/src
    ${WRD_DIR}/mods/meta/src
    ${WRD_DIR}/mods/memlite/src
    /usr/local/include)
include_directories(${WRD_DEFAULT_INC_DIR})

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${WRD_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${WRD_DIR}/bin)
set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} ${CMAKE_LIBRARY_OUTPUT_DIRECTORY} /usr/local/lib)

if(SHOW_CMAKE_VARIABLES)
    message(STATUS "CMAKE_THREAD_LIBS_INIT      " ${CMAKE_THREAD_LIBS_INIT})
    message(STATUS "CMAKE_BINARY_DIR:           " ${CMAKE_BINARY_DIR})
    message(STATUS "CMAKE_CURRENT_BINARY_DIR:   " ${CMAKE_CURRENT_BINARY_DIR})
    message(STATUS "CMAKE_SOURCE_DIR:           " ${CMAKE_SOURCE_DIR})
    message(STATUS "CMAKE_CURRENT_SOURCE_DIR:   " ${CMAKE_CURRENT_SOURCE_DIR})
    message(STATUS "PROJECT_BINARY_DIR:         " ${PROJECT_BINARY_DIR})
    message(STATUS "PROJECT_SOURCE_DIR:         " ${PROJECT_SOURCE_DIR})
    message(STATUS "EXECUTABLE_OUTPUT_PATH:     " ${EXECUTABLE_OUTPUT_PATH})
    message(STATUS "LIBRARY_OUTPUT_PATH:        " ${LIBRARY_OUTPUT_PATH})
    message(STATUS "CMAKE_MODULE_PATH:          " ${CMAKE_MODULE_PATH})
    message(STATUS "CMAKE_COMMAND:              " ${CMAKE_COMMAND})
    message(STATUS "CMAKE_ROOT:                 " ${CMAKE_ROOT})
    message(STATUS "CMAKE_CURRENT_LIST_FILE: " ${CMAKE_CURRENT_LIST_FILE})
    message(STATUS "CMAKE_CURRENT_LIST_LINE: " ${CMAKE_CURRENT_LIST_LINE})
    message(STATUS "CMAKE_INCLUDE_PATH: " ${CMAKE_INCLUDE_PATH})
    message(STATUS "CMAKE_LIBRARY_PATH: " ${CMAKE_LIBRARY_PATH})
    message(STATUS "CMAKE_SYSTEM: " ${CMAKE_SYSTEM})
    message(STATUS "CMAKE_SYSTEM_NAME: " ${CMAKE_SYSTEM_NAME})
    message(STATUS "CMAKE_SYSTEM_VERSION: " ${CMAKE_SYSTEM_VERSION})
    message(STATUS "CMAKE_SYSTEM_PROCESSOR: " ${CMAKE_SYSTEM_PROCESSOR})
    message(STATUS "UNIX: " ${UNIX})
    message(STATUS "WIN32: " ${WIN32})
    message(STATUS "APPLE: " ${APPLE})
    message(STATUS "MINGW: " ${MINGW})
    message(STATUS "CYGWIN: " ${CYGWIN})
    message(STATUS "BORLAND: " ${BORLAND})
    message(STATUS "MSVC: " ${MSVC})
    message(STATUS "MSVC_IDE: " ${MSVC_IDE})
    message(STATUS "MSVC60: " ${MSVC60})
    message(STATUS "MSVC70: " ${MSVC70})
    message(STATUS "MSVC71: " ${MSVC71})
    message(STATUS "MSVC80: " ${MSVC80})
    message(STATUS "CMAKE_COMPILER_2005: " ${CMAKE_COMPILER_2005})
    message(STATUS "CMAKE_SKIP_RULE_DEPENDENCY: " ${CMAKE_SKIP_RULE_DEPENDENCY})
    message(STATUS "CMAKE_SKIP_INSTALL_ALL_DEPENDENCY: " ${CMAKE_SKIP_INSTALL_ALL_DEPENDENCY})
    message(STATUS "CMAKE_SKIP_RPATH: " ${CMAKE_SKIP_RPATH})
    message(STATUS "CMAKE_VERBOSE_MAKEFILE: " ${CMAKE_VERBOSE_MAKEFILE})
    message(STATUS "CMAKE_SUPPRESS_REGENERATION: " ${CMAKE_SUPPRESS_REGENERATION})
    message(STATUS "CMAKE_C_FLAGS: " ${CMAKE_C_FLAGS})
    message(STATUS "CMAKE_CXX_FLAGS: " ${CMAKE_CXX_FLAGS})
    message(STATUS "CMAKE_BUILD_TYPE: " ${CMAKE_BUILD_TYPE})
    message(STATUS "BUILD_SHARED_LIBS: " ${BUILD_SHARED_LIBS})
    message(STATUS "CMAKE_C_COMPILER: " ${CMAKE_C_COMPILER})
    message(STATUS "CMAKE_CXX_COMPILER: " ${CMAKE_CXX_COMPILER})
    message(STATUS "CMAKE_COMPILER_IS_GNUCC: " ${CMAKE_COMPILER_IS_GNUCC})
    message(STATUS "CMAKE_COMPILER_IS_GNUCXX : " ${CMAKE_COMPILER_IS_GNUCXX})
    message(STATUS "CMAKE_AR: " ${CMAKE_AR})
    message(STATUS "CMAKE_RANLIB: " ${CMAKE_RANLIB})
    message(STATUS "CMAKE_MACOSX_RPATH: " ${CMAKE_MACOSX_RPATH})
endif(SHOW_CMAKE_VARIABLES)

message("\tcompile options are ${CMAKE_CXX_FLAGS}")
message("\tcommon definitions are ${CXX_DEFINITIONS}")
message("\tc++ standard is {CMAKE_CXX_STANDARD}")
message("\tbuilded outputs will be placed to ${RUNTIME_OUTPUT_DIRECTORY}")
message("\tall libraries extension is ${WORLD_LIBRARY_EXTENSION}")
message("\tworld project directory is ${WRD_DIR}")
message("\tdefault include directory is ${WRD_DEFAULT_INC_DIR}")
add_definitions(${CXX_DEFINITIONS})
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/../mods ${CMAKE_CURRENT_BINARY_DIR}/mods)
