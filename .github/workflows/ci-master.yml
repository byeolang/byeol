name: CI for master

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-on-linux:
    name: build on linux
    runs-on: ubuntu-latest

    steps:
    - name: install native dependencies.
      run: |
        sudo apt install python3 python3-pip cmake wget flex graphviz
        ls .
        sudo wget https://ftp.gnu.org/gnu/bison/bison-3.8.2.tar.gz
        tar -zxvf bison-3.8.2.tar.gz
        cd bison-3.8.2
        ./configure
        sudo make
        sudo make install
        cd ..
        sudo rm -rf bison-3.8.2
        sudo mv /usr/bin/bison /usr/bin/bison-prev
        sudo ln -s /usr/local/bin/bison /usr/bin/bison


    - name: checkout repository codes
      uses: actions/checkout@v2

    - name: build & test current codes.
      run: |
        export C=clang CXX=clang++ PYTHON=$(which python3)
        ls -l ${{github.workspace}}/mod/swrd/parser
        sudo $PYTHON ${{github.workspace}}/build/builder.py dbg
        sudo $PYTHON ${{github.workspace}}/build/builder.py test

  build-on-macos:
    name: build on macos
    runs-on: macos-latest

    steps:
    - name: install native dependencies.
      run: |
        brew update
        brew install python3 cmake wget bison flex graphviz

    - name: checkout repository codes
      uses: actions/checkout@v2

    - name: build & test current codes.
      run: |
        export PATH="/usr/local/opt/flex/bin:/usr/local/opt/bison/bin:$PATH"
        export C=clang CXX=clang++ PYTHON=$(which python3)
        ls -l ${{github.workspace}}/mod/swrd/parser
        sudo $PYTHON ${{github.workspace}}/build/builder.py dbg
        sudo $PYTHON ${{github.workspace}}/build/builder.py test
  
  build-on-windows:
    name: build on windows
    runs-on: windows-latest
    
    steps:
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      
    - name: generates csproj files
      run: |
        $PYTHON ${{github.workspace}}/build/builder.py rel
      
    - name: Build app for release
      run: |
        msbuild ${{github.workspace}}\build\mod\indep\indep.vcxproj -t:rebuild -verbosity:diag -property:Configuration=Release
        msbuild ${{github.workspace}}\build\mod\clog\clog.vcxproj -t:rebuild -verbosity:diag -property:Configuration=Release
        msbuild ${{github.workspace}}\build\mod\meta\meta.vcxproj -t:rebuild -verbosity:diag -property:Configuration=Release
        msbuild ${{github.workspace}}\build\mod\memlite\memlite.vcxproj -t:rebuild -verbosity:diag -property:Configuration=Release
        msbuild ${{github.workspace}}\build\mod\swrd\swrd.vcxproj -t:rebuild -verbosity:diag -property:Configuration=Release
        msbuild ${{github.workspace}}\build\mod\wrd\wrd.vcxproj -t:rebuild -verbosity:diag -property:Configuration=Release
        msbuild ${{github.workspace}}\build\mod\wrc\wrc.vcxproj -t:rebuild -verbosity:diag -property:Configuration=Release

  publish-doc:
    needs: [build-on-linux, build-on-macos]
    name: publish doc
    runs-on: ubuntu-latest

    steps:
      - name: install native dependencies.
        run: sudo apt install doxygen graphviz python3 python3-pip

      - name: install python dependencies.
        run: sudo python3 -m pip install --upgrade jinja2 Pygments

      - name: checkout master codes.
        uses: actions/checkout@v2

      - name: commit docs if it's different to previous commit
        run: |
          export C=clang CXX=clang++ PYTHON=$(which python3)
          sudo $PYTHON ${{github.workspace}}/build/builder.py doc
          sudo $PYTHON ${{github.workspace}}/build/builder.py pubdoc

      - name: push the commit
        uses: ad-m/github-push-action@v0.6.0
        with:
          directory: ${{github.workspace}}/build/html
          github_token: ${{secrets.GITHUB_TOKEN}}
          branch: 'gh-pages'
