name: CI for stable

on:
  push:
    branches: [ stable ]

jobs:
  release-on-linux:
    name: release on linux
    runs-on: ubuntu-18.04

    steps:
    - name: install native dependencies.
      run: |
        sudo apt install python3 python3-pip cmake wget flex graphviz
        ls .
        sudo wget https://ftp.gnu.org/gnu/bison/bison-3.8.2.tar.gz
        tar -zxvf bison-3.8.2.tar.gz
        cd bison-3.8.2
        ./configure
        sudo make
        sudo make install
        cd ..
        sudo rm -rf bison-3.8.2
        sudo mv /usr/bin/bison /usr/bin/bison-prev
        sudo ln -s /usr/local/bin/bison /usr/bin/bison


    - name: checkout repository codes
      uses: actions/checkout@v2

    - name: build & test current codes.
      run: |
        export C=clang CXX=clang++ PYTHON=$(which python3)
        ls -l ${{github.workspace}}/mod/swrd/parser
        sudo $PYTHON ${{github.workspace}}/build/builder.py pub deb
        sudo $PYTHON ${{github.workspace}}/build/builder.py test

    - name: upload output files.
      uses: actions/upload-artifact@v3
      with:
        name: wrd-release-ubuntu
        path: ${{github.workspace}}/bin/wrd-*-release.deb

  release-on-macos:
    name: release on macos
    runs-on: macos-11

    steps:
    - name: install native dependencies.
      run: |
        brew update
        brew install python3 cmake wget bison flex graphviz

    - name: checkout repository codes
      uses: actions/checkout@v2

    - name: build & test current codes.
      run: |
        export PATH="/usr/local/opt/flex/bin:/usr/local/opt/bison/bin:$PATH"
        export C=clang CXX=clang++ PYTHON=$(which python3)
        ls -l ${{github.workspace}}/mod/swrd/parser
        sudo $PYTHON ${{github.workspace}}/build/builder.py rel
        sudo $PYTHON ${{github.workspace}}/build/builder.py test
        sudo $PYTHON ${{github.workspace}}/build/builder.py pub mac

    - name: archive to tar files
      run: tar -cvf wrd-release-macos.tar ${{github.workspace}}/bin/

    - name: upload output files.
      uses: actions/upload-artifact@v3
      with:
        name: wrd-release-macos
        path: wrd-release-macos.tar

release-on-windows:
    name: release on windows
    runs-on: windows-latest
    
    steps:
    - name: checkout repository codes
      uses: actions/checkout@v2

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: install apps from choco
      uses: crazy-max/ghaction-chocolatey@v2.0.0
      with:
        args: install -y wget unzip zip

    - name: get flex_bison for windows & unzip
      run: |
        mkdir ${{github.workspace}}\flex_bison
        wget -O flex_bison\flex_bison.zip https://github.com/lexxmark/winflexbison/releases/download/v2.5.25/win_flex_bison-2.5.25.zip
        cd flex_bison
        unzip flex_bison.zip
        ren win_flex.exe flex.exe
        ren win_bison.exe bison.exe
        $env:PATH = "$env:PATH;${{github.workspace}}\flex_bison"
        echo $env:PATH
        python ${{github.workspace}}\build\builder.py pub win

    - name: archives to zip file
      run: |
        zip -9vr wrd-release-win.zip ${{github.workspace}}\bin

    - name: upload output files.
      uses: actions/upload-artifact@v3
      with:
        name: wrd-release-win
        path: wrd-release-win.zip