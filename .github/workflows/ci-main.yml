name: CI for main
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  checking-code-format:
    name: check code format with clang-format
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        path:
          - check: 'mod'
            exclude: '(leafLowparser|leafLowscanner|lowparser|lowscanner)'
    steps:
    - uses: actions/checkout@v4
    - name: run clang-format to verify current codes.
      uses: jidicula/clang-format-action@v4.13.0
      with:
        clang-format-version: '18'
        check-path: ${{ matrix.path['check'] }}
        exclude-regex: ${{ matrix.path['exclude'] }}

  build-on-linux:
    needs: [checking-code-format]
    name: build on linux
    runs-on: ubuntu-22.04

    steps:
    - name: install native dependencies.
      run: |
        sudo apt-get update
        sudo apt install python3 python3-pip cmake wget flex graphviz clang-format clang-tidy
        ls .
        sudo wget https://ftp.gnu.org/gnu/bison/bison-3.8.2.tar.gz
        tar -zxvf bison-3.8.2.tar.gz
        cd bison-3.8.2
        ./configure
        sudo make
        sudo make install
        cd ..
        sudo rm -rf bison-3.8.2
        sudo mv /usr/bin/bison /usr/bin/bison-prev
        sudo ln -s /usr/local/bin/bison /usr/bin/bison

    - name: checkout repository codes
      uses: actions/checkout@v2

    - name: build & test current codes.
      run: |
        export C=clang CXX=clang++ PYTHON=$(which python3)
        ls -l ${{github.workspace}}/mod/leaf/parser/bison
        sudo $PYTHON ${{github.workspace}}/build/builder.py rel
        sudo $PYTHON ${{github.workspace}}/build/builder.py test

  measure-coverage:
    needs: [build-on-linux]
    name: measure code coverage
    runs-on: ubuntu-22.04

    steps:
    - name: install native dependencies
      run: |
        sudo apt-get update
        sudo apt install python3 python3-pip cmake wget flex graphviz clang-format clang-tidy llvm lcov
        ls .
        sudo wget https://ftp.gnu.org/gnu/bison/bison-3.8.2.tar.gz
        tar -zxvf bison-3.8.2.tar.gz
        cd bison-3.8.2
        ./configure
        sudo make
        sudo make install
        cd ..
        sudo rm -rf bison-3.8.2
        sudo mv /usr/bin/bison /usr/bin/bison-prev
        sudo ln -s /usr/local/bin/bison /usr/bin/bison

    - name: checkout repository codes.
      uses: actions/checkout@v2

    - name: build for measuring coverage
      run: |
        export C=clang CXX=clang++ PYTHON=$(which python3)
        sudo $PYTHON ${{github.workspace}}/build/builder.py cov

    - name: upload coverage report to codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./build/cov.info

  build-on-macos:
    needs: [checking-code-format]
    name: build on macos
    runs-on: macos-13

    steps:
    - name: install native dependencies.
      run: |
        brew unlink python && brew link --overwrite python
        brew install cmake wget bison flex graphviz llvm
        ln -s "/usr/local/opt/llvm/bin/clang-format" "/usr/local/bin/clang-format"
        ln -s "/usr/local/opt/llvm/bin/clang-tidy" "/usr/local/bin/clang-tidy"

    - name: checkout repository codes
      uses: actions/checkout@v2

    - name: build & test current codes.
      run: |
        export PATH="/usr/local/opt/flex/bin:/usr/local/opt/bison/bin:$PATH"
        export C=clang CXX=clang++ PYTHON=$(which python3)
        ls -l ${{github.workspace}}/mod/leaf/parser/bison
        sudo $PYTHON ${{github.workspace}}/build/builder.py dbg
        sudo $PYTHON ${{github.workspace}}/build/builder.py test

  build-on-windows:
    needs: [checking-code-format]
    name: build on windows
    runs-on: windows-latest

    steps:
    - name: checkout repository codes
      uses: actions/checkout@v2

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: install apps from choco
      uses: crazy-max/ghaction-chocolatey@v2.0.0
      with:
        args: install -y wget unzip

    - name: get flex_bison for windows & unzip
      run: |
        mkdir ${{github.workspace}}\flex_bison
        wget -O flex_bison\flex_bison.zip https://github.com/lexxmark/winflexbison/releases/download/v2.5.25/win_flex_bison-2.5.25.zip
        cd flex_bison
        unzip flex_bison.zip
        ren win_flex.exe flex.exe
        ren win_bison.exe bison.exe
        $env:PATH = "$env:PATH;${{github.workspace}}\flex_bison"
        echo $env:PATH
        python ${{github.workspace}}\build\builder.py dbg

  publish-doc:
    needs: [build-on-linux, build-on-macos, build-on-windows]
    name: publish doc
    runs-on: ubuntu-22.04

    steps:
      - name: install native dependencies.
        run: |
          sudo apt install doxygen graphviz python3 python3-pip ruby rubygems

      - name: install python dependencies.
        run: sudo python3 -m pip install --upgrade jinja2 Pygments

      - name: install gems.
        run: sudo gem install jekyll bundler

      - name: checkout master codes.
        uses: actions/checkout@v2

      - name: commit docs if it's different to previous commit
        run: |
          export C=clang CXX=clang++ PYTHON=$(which python3)
          sudo $PYTHON ${{github.workspace}}/build/builder.py doc
          sudo $PYTHON ${{github.workspace}}/build/builder.py pubdoc

      - name: push the commit
        uses: ad-m/github-push-action@v0.6.0
        with:
          directory: ${{github.workspace}}/build/html
          github_token: ${{secrets.GITHUB_TOKEN}}
          branch: 'gh-pages'
