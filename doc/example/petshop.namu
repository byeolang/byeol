pack namu.lang.example.petshop
aka->sys.cons

def petShop
    /* a pet shop */
    aka Afactory(useless flt64, use1 int, use2 char, use3 bool) pet = null -> rFac
    aka factory(useless int, use1 int, use2 char, use3 bool) pet
        doSomething()
    -> rFac2

    _myFactory rFac

    me(@rFac2): sys.cons.out('f is $rFac2')
    me(@rFac): myFactory = rFac

    showPet() void
        if myFactory
            mypet := myFactory(0, 0, 0, false)
        c.out('we have a lovely $mypet')
        c.out('it says $pet.speak()')

def pet
def dog from pet
    speak() void: 'woof'

def cat from pet
    speak() void: 'meow'

randomAnimal(s flt64, x int, y char, z bool) pet: return random.choice({dog(), cat()})

main() void
    catShop := petShop((x, y, z, a): cat())
    catShop.showPet()
    c.out('')

    shop = petShop(randomAnimal)
    for n in 0..3
        shop.showPet()
        c.out('=' * 20)
