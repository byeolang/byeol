# Changelogs
## v0.2.3 Mana Update
released on 09-16 2022
build#584

### major changes
* 44e048c4 - core: feat: implement deepClone
* 1d7ee101 - core: feat: add "generalizer"
* a34a8a0e - core: feat: add new verifier using visitor
* 1b811a2e - core: feat: add graphVisitor
* d5081be2 - core: feat: add visitor
* f3e7199c - test: feat: negative() func added
* 37cb7f8c - clog: feat: add NAMU_CALLSTACK()
* 57057621 - core: feat: add generics feature
* 72c59be5 - test: refactor: rename namu to core
* 9bff0b36 - refactor: decide language name, "namu"



## v0.2.2 Mana Update
released on 07-17 2022
build#520

### major changes
* cae5b20b (HEAD -> master, origin/master, origin/HEAD) builder: feat: release outputs for Windows on stable branch
* 64b27401 wrd: fix: compatiblity issue for windows
* 6533a5a4 wrd: feat: keyword 'aka' changed to new syntax
* 12420876 wrd: refactor: replace ntype to node of getEvalType()
* 22df5700 wrd: feat: add 'aka'
* b9966971 wrd: feat: add muna
* b949093c wrd: fix: missing implicit casting
* 5e9ef105 wrd: fix: core crashed when iterpret paranthesis '(', ')'



## v0.2.1 Mana Update
released on 06-18 2022
build#495

### major changes
* 39355eb3 bundle: feat: add input() func
* b96c3c56 wrd: fix: when parse 'aka' it makes a blockexpr
* 1cc87161 wrd: refactor: add 'frame::_setObj' to store obj reference
* 2b1ffc88 wrd: feat: add frameInteract
* 5c82285a wrd: feat: add a tray between verifications
* 5d336854 wrd: fix: parser can recognize escape sequence
* f521fe13 wrd: refactor: use std::string for asStr
* 87fdf6c9 wrd: fix: 3 identifier concatenating with dot doesn't work
* ff37fd75 wrd: fix: default ctors has been added into owns area
* fc3d3c08 wrd: refactor: refine slot loading logic
* 889cdfc5 wrd: feat: mashaling for string& reference types
* 46cf36ac wrd: feat: add 4 more fundermental arithmetic operation
* 1de7e847 wrd: doc: remove prototypings
* a713c5ea wrd: refactor: preconstructor
* 8faa6738 wrd: fix: apply new refactoring of slot to TC files
* 2118cf34 wrd: refactor: pack -> slot and apply autoslot, preconstructor
* d8af510f wrd: feat: add(iter, iter, iter) new func on ucontainer
* 8493d0ec wrd: refactor: rename obj -> baseObj
* 33d1daf9 wrd: feat: add 'addExpr'
* 6b3c8eff wrd: feat: add 'asExpr'
* 88b48011 wrd: fix: type casting & as()
* f8f73429 wrd: feat: add defAssignExpr
* e854d62b wrd: refactor: change syntax of aka-deduced
* 8fd64ebf wrd: feat: add defAssign expr
* 4ab7b541 wrd: refactor: remove redundant expr, literalExpr
* c5eb689c wrd: fix: apply dum containers into primitives
* 5d33e74a wrd: feat: add assignExpr
* 623c390e wrd: feat: add 'comment' syntax



## v0.2.0 Mana Update
released on 05-14 2022
build#444

### major changes

* 9598b6ce chore: supports rpath of macos
* 6bb3b13a wrd: feat: add location info of a node when it's parsed
* eacc8855 chore: builder can make a ubuntu deb package
* c8aaae9f wrd: refactor: move prototype def into implementation files
* 849fd435 chore: replace tab to 4-width spaces
* e6f488f8 (origin/stables) chore: add github action for stable branch
* 820b0297 clog: feat: colorize logs
* 31585660 chore: fix not to build wrd twice
* 0c8ef376 wrd: fix: fix for window compatibilities
* 3021b43c wrd: refactor: rename INTERFACE macro -> ADT
* e3605229 wrd: fix: rename __super to _super_
* 9f95bd69 indep: fix: fsystem doesn't work when slash at the end
* db1740a9 wrd: feat: handling all of stream at one function call
* 0da3c982 cli: feat: starts with silent mode



## v0.1.7 Essence Update Final
released on 04-21 2022
build# 365

### major changes
* c50f7fb0 cli: feat: implement cli
* qd264caa4 wrd: feat: implement starter
* q782ba8fd wrd: feat: implement interpreter
* qbfdee5ae wrd: feat: add runExpr
* qc6305dc5 wrd: feat: err code is managed by a enum
* qe129020d wrd: feat: change concept of pack parsing
* qb9f5e95a wrd: fix: scanner couldn't recognize 'tab' token
* qf42eabf3 wrd: fix: evalType of func is the func, not return type
* q3dcf9d5d wrd: feat: verify duplicated variable defined
* qa010f8fe wrd: refactor: boost performance to verify subnodes
* q3e1b1bbf wrd: fix: member variable couldn't be verified
* qfd40cdbd wrd: feat: prints number of err
* q8b367ed7 wrd: refactor: remove doesNeedScope()
* q82d222ba wrd: feat: param can take default value and type
* q05cfee2b wrd: refactor: massive refactoring to apply 'map' to subs()
* q6752dc9f memlite: tactic instance won't be copied when binder assigned
* q59e7604d wrd: feat: apply tnmap as subs
* q403aaaf8 wrd: refactor: change how to implement immutable
* q17562542 wrd: feat: add tnmap class
* q5a1dc13e wrd: feat: add has() func on containers
* qd11c3412 wrd: fix: container shouldn't takes str as param
* q384a735f wrd: feat: add bicontainer
* q5b154aaf wrd: refactor: redesign container classes for map
* q54bff10c wrd: refactor: rename stackFrame to frames
* q0d66f3b0 wrd: refactor: pack is a obj
* q56509a60 wrd: refactor: obj class interact to frame if it needs
* q4bd8db53 wrd: feat: class can be exposed as private to verfication
* q6f7861da wrd: feat: add returnExpr
* q2ce96c59 wrd: feat: add literalExpr
* q792caf51 wrd: feat: add 'defVar' expression
* qaea9d8f9 wrd: feat: show error code on report
* qe8cba3b9 wrd: feat: parse 'block' expression
* q2da39552 wrd: feat: parsing 'pack' keyword
* q465c432b wrd: feat: make syntaxTest be resuable
* q4a66304d wrd: refactor: pack lazy importing
* qdea7b81d wrd: fix: remove '.*' syntax of aka
* q8b0f78e4 wrd: feat: can parse 'aka' keyword
* qd3ab6d6d wrd: feat: '' is for a character, "" is for a string
* qce80c805 wrd: fix: can't build release mode
* q1b50bc4a wrd: feat: parse can recognize 'func' definition
* q414a491e wrd: refactor: restructure of lowparser and parser



## v0.1.6 Essence Update 0.6
released on 09-22 2021
build# 244

### major changes
* f1c9f95c - wrd: refactor: all expr now can holds row and col info
* 7283c2ef - wrd: feat: err object can reports area of source code
* 6694792b - wrd: feat: add verifier
* c317d671 - chore: clean more folders on build directory
* e16edbe1 - wrd: feat: add dummyErrReport
* a6cfdf0e - wrd: feat: errReport has only public api to be needed
* 7106393f - wrd: refactor: rename class name 'fail' & 'failReport'
* 954f245d - wrd: refactor: improve implementation of immutable
* b12d7cfd - wrd: refactor: loose limitation of explicit ctor of binders
* 28fb0204 - wrd: fix: expr couldn't check validness when it comes to recursive
* 47862906 - wrd: feat: fill missing implementation for blockExpr
* 4d26e01d - wrd: feat: add blockExpr
* ac7dabd1 - wrd: refactor: merge and reuse 'getEvalType' for returnType of func
* 14855735 - wrd: feat: add exprMaker
* d9b25dff - wrd: refactor: change structure of 'as' casting
* 30c26ef4 - wrd: fix: remove legacy world codes
* a17b0a58 - wrd: refactor: rename interp module to wrd
* c324fe20 - interp: feat: you can specify src info for bridge API
* c42d67ee - interp: feat: add generic visitor class
* 90330081 - interp: feat: universal WRD macro.
* a8f4a749 - interp: refactor: rename srcArea to area
* f9fb8d16 - chore: publish doc has error
* d5e3e2e4 - chore: github action for publish docs


## v0.1.5 Essence Update 0.5
released on 07-31 2021
build# 233

### major changes
* interp: feat: basic structure of parser & scanner
* interp: feat: introduce new packLoader
* interp: chore: generates visualized bison reports
* doc: remove dependency to m.css


## v0.1.4 Essence Update 0.4
released on 06-26 2021
build# 226.

### major changes
* all: doc: license has been changed from LGPL to MIT
* all: chore: unittests now runs at 'bin' dir.
* interp: feat: add c++ bridge API
* interp: feat: pack importing
* interp: feat: tnchain supports deep(= nested) chaining
* interp: refactor: container components
* interp: feat: abstracts extracting origin


## v0.1.3 Essence Update 0.3
released on 05-03 2021.
build # was 209 and major changes are as follows:

### features
* implmentation of Essence Update Iteration#3.
* add basic components of ast. (obj, pack, node, ...)


## v0.01a Dust Update build# 9444
it was 02-25 2016.
Dust is the name of an update used by the 'Node Engine' project that was origin of the 'world language'.
'NodeEngine' is a result of consideration how to visualize programming elements and let users express and orgranize their thoughts in visual. Unfortunately, as a result of deliberation, I had to accept not to release to public because it's not enough useful to what I intended to be.

it has been developed by myself for quite a while, so even if it's not released officially I want to keep it below as records.

## v0.01a Dust Update build# 8392
updated on 04-24 2015. not released in public.
## v0.01a Dust Update build# 7001
updated on 03-29 2015, not released in public.
## v0.01a Dust Update build# 4429
updated on 02-02 2014, not released in public.
## v0.01a Dust Update build# 4317
updated on 10-30 2013, not released in public.
    + graphics(dx9) module was added.

## v0.01a Dust Update build# 4162
updated on 01-29 2013, not released in public.

## v0.01a Dust Update build# 3727
updated on 10-19 2012, not released in public.

## v0.01a Dust Update build# 3600
updated on 05-19 2012, not released in public.

## v0.01a Dust Update build# 3559
updated on 05-05 2012, not released in public.

## v0.01a Dust Update build# 3531
updated on 04-15 2012, not released in public.

## v0.01a Dust Update build# 3445
updated on 03-15 2012, not released in public.

## v0.00a Dust Update build# 3377
updated on 02-20 2012, not released in public.

## v0.00a Dust Update Build# 3086
updated on 01-15 2012, not released in public.

## v0.00a Dust Update Build# 2976
updated on 10-03 2011, not released in public.

## start developing NodeEngine on 2010.
